GAS LISTING /tmp/ccPHV8ob.s 			page 1


   1              		.file	"print.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z11printStringPKc
   9              	_Z11printStringPKc:
  10              	.LFB16:
  11              		.file 1 "src/print.cpp"
   1:src/print.cpp **** 
   2:src/print.cpp **** 
   3:src/print.cpp **** #include "../h/print.hpp"
   4:src/print.cpp **** #include "../h/riscv.hpp"
   5:src/print.cpp **** #include "../lib/console.h"
   6:src/print.cpp **** 
   7:src/print.cpp **** void printString(char const *string)
   8:src/print.cpp **** {
  12              		.loc 1 8 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FD 		addi	sp,sp,-48
  16              		.cfi_def_cfa_offset 48
  17 0004 23341102 		sd	ra,40(sp)
  18 0008 23308102 		sd	s0,32(sp)
  19 000c 233C9100 		sd	s1,24(sp)
  20 0010 23382101 		sd	s2,16(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25 0014 13040103 		addi	s0,sp,48
  26              		.cfi_def_cfa 8, 0
  27 0018 93040500 		mv	s1,a0
   9:src/print.cpp ****     uint64 sstatus = Riscv::r_sstatus();
  28              		.loc 1 9 5
  29              	.LBB14:
  30              	.LBB15:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** 
   3:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #define READ_REG(var, regname) __asm__ volatile("mv %0, " regname: "=r"(var))
   9:src/../h/riscv.hpp **** #define WRITE_REG(regname, val) __asm__ volatile("mv " regname ", %0" :: "r"(val))
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** namespace Num{
  12:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_ALLOC = 0x01;
  13:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_FREE = 0x02;
  14:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_FREE_SPACE = 0x03;
  15:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_LARGEST_FREE_BLOCK = 0x04;
  16:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_CREATE= 0x11;
  17:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_EXIT = 0x12;
  18:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_DISPATCH = 0x13;
GAS LISTING /tmp/ccPHV8ob.s 			page 2


  19:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_OPEN = 0x21;
  20:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_CLOSE = 0x22;
  21:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_WAIT = 0x23;
  22:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_SIGNAL = 0x24;
  23:src/../h/riscv.hpp **** }
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp **** class Riscv
  27:src/../h/riscv.hpp **** {
  28:src/../h/riscv.hpp **** public:
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  31:src/../h/riscv.hpp ****     static void popSppSpie();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register scause
  34:src/../h/riscv.hpp ****     static uint64 r_scause();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register scause
  37:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register sepc
  40:src/../h/riscv.hpp ****     static uint64 r_sepc();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register sepc
  43:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stvec
  46:src/../h/riscv.hpp ****     static uint64 r_stvec();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stvec
  49:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register stval
  52:src/../h/riscv.hpp ****     static uint64 r_stval();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register stval
  55:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSip
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  60:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  61:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sip
  65:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sip
  68:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sip
  71:src/../h/riscv.hpp ****     static uint64 r_sip();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sip
  74:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  75:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccPHV8ob.s 			page 3


  76:src/../h/riscv.hpp ****     enum BitMaskSstatus
  77:src/../h/riscv.hpp ****     {
  78:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  79:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  80:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  81:src/../h/riscv.hpp ****     };
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask set register sstatus
  84:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // mask clear register sstatus
  87:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // read register sstatus
  90:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // write register sstatus
  93:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // supervisor trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** private:
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     // supervisor trap handler
 101:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile scause;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 109:src/../h/riscv.hpp ****     return scause;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile sepc;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 121:src/../h/riscv.hpp ****     return sepc;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stvec;
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
GAS LISTING /tmp/ccPHV8ob.s 			page 4


 133:src/../h/riscv.hpp ****     return stvec;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     uint64 volatile stval;
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 145:src/../h/riscv.hpp ****     return stval;
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 154:src/../h/riscv.hpp **** {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     uint64 volatile sip;
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 167:src/../h/riscv.hpp ****     return sip;
 168:src/../h/riscv.hpp **** }
 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 171:src/../h/riscv.hpp **** {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 176:src/../h/riscv.hpp **** {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 181:src/../h/riscv.hpp **** {
 182:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 183:src/../h/riscv.hpp **** }
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     uint64 volatile sstatus;
  32              		.loc 2 187 5
 188:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/ccPHV8ob.s 			page 5


  33              		.loc 2 188 5
  34              		.loc 2 188 76 is_stmt 0
  35              	#APP
  36              	# 188 "src/../h/riscv.hpp" 1
 189              	    return sstatus;
  37              		csrr a5, sstatus
  38              	# 0 "" 2
  39              	#NO_APP
  40 0020 233CF4FC 		sd	a5,-40(s0)
  41              		.loc 2 189 5 is_stmt 1
  42              		.loc 2 189 12 is_stmt 0
  43 0024 033984FD 		ld	s2,-40(s0)
  44              	.LVL1:
  45              	.LBE15:
  46              	.LBE14:
  10:src/print.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  47              		.loc 1 10 5 is_stmt 1
  48              	.LBB16:
  49              	.LBB17:
 182:src/../h/riscv.hpp **** }
  50              		.loc 2 182 5
 182:src/../h/riscv.hpp **** }
  51              		.loc 2 182 68 is_stmt 0
  52 0028 93072000 		li	a5,2
  53              	#APP
  54              	# 182 "src/../h/riscv.hpp" 1
  55              		csrc sstatus, a5
  56              	# 0 "" 2
  57              	.LVL2:
  58              	#NO_APP
  59              	.L3:
  60              	.LBE17:
  61              	.LBE16:
  11:src/print.cpp ****     while (*string != '\0')
  62              		.loc 1 11 5 is_stmt 1
  63              		.loc 1 11 20
  64              		.loc 1 11 12 is_stmt 0
  65 0030 03C50400 		lbu	a0,0(s1)
  66              		.loc 1 11 20
  67 0034 630A0500 		beqz	a0,.L2
  12:src/print.cpp ****     {
  13:src/print.cpp ****         __putc(*string);
  68              		.loc 1 13 9 is_stmt 1
  69              		.loc 1 13 15 is_stmt 0
  70 0038 97000000 		call	__putc@plt
  70      E7800000 
  71              	.LVL3:
  14:src/print.cpp ****         string++;
  72              		.loc 1 14 9 is_stmt 1
  73              		.loc 1 14 15 is_stmt 0
  74 0040 93841400 		addi	s1,s1,1
  75              	.LVL4:
  11:src/print.cpp ****     while (*string != '\0')
  76              		.loc 1 11 5
  77 0044 6FF0DFFE 		j	.L3
  78              	.L2:
  15:src/print.cpp ****     }
GAS LISTING /tmp/ccPHV8ob.s 			page 6


  16:src/print.cpp ****     Riscv::ms_sstatus(sstatus & Riscv::SSTATUS_SIE ? Riscv::SSTATUS_SIE : 0);
  79              		.loc 1 16 5 is_stmt 1
  80              		.loc 1 16 52 is_stmt 0
  81 0048 1B090900 		sext.w	s2,s2
  82              	.LVL5:
  83              		.loc 1 16 22
  84 004c 13792900 		andi	s2,s2,2
  85 0050 1B090900 		sext.w	s2,s2
  86              	.LVL6:
  87              	.LBB18:
  88              	.LBB19:
 177:src/../h/riscv.hpp **** }
  89              		.loc 2 177 5 is_stmt 1
 177:src/../h/riscv.hpp **** }
  90              		.loc 2 177 68 is_stmt 0
  91              	#APP
  92              	# 177 "src/../h/riscv.hpp" 1
  93              		csrs sstatus, s2
  94              	# 0 "" 2
  95              	.LVL7:
  96              	#NO_APP
  97              	.LBE19:
  98              	.LBE18:
  17:src/print.cpp **** }
  99              		.loc 1 17 1
 100 0058 83308102 		ld	ra,40(sp)
 101              		.cfi_restore 1
 102 005c 03340102 		ld	s0,32(sp)
 103              		.cfi_restore 8
 104              		.cfi_def_cfa 2, 48
 105 0060 83348101 		ld	s1,24(sp)
 106              		.cfi_restore 9
 107              	.LVL8:
 108 0064 03390101 		ld	s2,16(sp)
 109              		.cfi_restore 18
 110 0068 13010103 		addi	sp,sp,48
 111              		.cfi_def_cfa_offset 0
 112 006c 67800000 		jr	ra
 113              		.cfi_endproc
 114              	.LFE16:
 116              		.align	2
 117              		.globl	_Z12printIntegerm
 119              	_Z12printIntegerm:
 120              	.LFB17:
  18:src/print.cpp **** 
  19:src/print.cpp **** void printInteger(uint64 integer)
  20:src/print.cpp **** {
 121              		.loc 1 20 1 is_stmt 1
 122              		.cfi_startproc
 123              	.LVL9:
 124 0070 130101FC 		addi	sp,sp,-64
 125              		.cfi_def_cfa_offset 64
 126 0074 233C1102 		sd	ra,56(sp)
 127 0078 23388102 		sd	s0,48(sp)
 128 007c 23349102 		sd	s1,40(sp)
 129 0080 23302103 		sd	s2,32(sp)
 130              		.cfi_offset 1, -8
GAS LISTING /tmp/ccPHV8ob.s 			page 7


 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133              		.cfi_offset 18, -32
 134 0084 13040104 		addi	s0,sp,64
 135              		.cfi_def_cfa 8, 0
  21:src/print.cpp ****     uint64 sstatus = Riscv::r_sstatus();
 136              		.loc 1 21 5
 137              	.LBB20:
 138              	.LBB21:
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 139              		.loc 2 187 5
 188:src/../h/riscv.hpp ****     return sstatus;
 140              		.loc 2 188 5
 188:src/../h/riscv.hpp ****     return sstatus;
 141              		.loc 2 188 76 is_stmt 0
 142              	#APP
 143              	# 188 "src/../h/riscv.hpp" 1
 144              		csrr a5, sstatus
 145              	# 0 "" 2
 146              	#NO_APP
 147 008c 2334F4FC 		sd	a5,-56(s0)
 148              		.loc 2 189 5 is_stmt 1
 149              		.loc 2 189 12 is_stmt 0
 150 0090 033984FC 		ld	s2,-56(s0)
 151              	.LVL10:
 152              	.LBE21:
 153              	.LBE20:
  22:src/print.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 154              		.loc 1 22 5 is_stmt 1
 155              	.LBB22:
 156              	.LBB23:
 182:src/../h/riscv.hpp **** }
 157              		.loc 2 182 5
 182:src/../h/riscv.hpp **** }
 158              		.loc 2 182 68 is_stmt 0
 159 0094 93072000 		li	a5,2
 160              	#APP
 161              	# 182 "src/../h/riscv.hpp" 1
 162              		csrc sstatus, a5
 163              	# 0 "" 2
 164              	.LVL11:
 165              	#NO_APP
 166              	.LBE23:
 167              	.LBE22:
  23:src/print.cpp ****     static char digits[] = "0123456789";
 168              		.loc 1 23 5 is_stmt 1
  24:src/print.cpp ****     char buf[16];
 169              		.loc 1 24 5
  25:src/print.cpp ****     int i, neg;
 170              		.loc 1 25 5
  26:src/print.cpp ****     uint x;
 171              		.loc 1 26 5
  27:src/print.cpp **** 
  28:src/print.cpp ****     neg = 0;
 172              		.loc 1 28 5
  29:src/print.cpp ****     if (integer < 0)
 173              		.loc 1 29 5
GAS LISTING /tmp/ccPHV8ob.s 			page 8


  30:src/print.cpp ****     {
  31:src/print.cpp ****         neg = 1;
  32:src/print.cpp ****         x = -integer;
  33:src/print.cpp ****     } else
  34:src/print.cpp ****     {
  35:src/print.cpp ****         x = integer;
 174              		.loc 1 35 9
 175              		.loc 1 35 11 is_stmt 0
 176 009c 1B050500 		sext.w	a0,a0
 177              	.LVL12:
  36:src/print.cpp ****     }
  37:src/print.cpp **** 
  38:src/print.cpp ****     i = 0;
 178              		.loc 1 38 5 is_stmt 1
 179              		.loc 1 38 7 is_stmt 0
 180 00a0 93040000 		li	s1,0
 181              	.LVL13:
 182              	.L6:
  39:src/print.cpp ****     do
 183              		.loc 1 39 5 is_stmt 1
  40:src/print.cpp ****     {
  41:src/print.cpp ****         buf[i++] = digits[x % 10];
 184              		.loc 1 41 9
 185              		.loc 1 41 29 is_stmt 0
 186 00a4 1306A000 		li	a2,10
 187 00a8 3B77C502 		remuw	a4,a0,a2
 188              	.LVL14:
 189              		.loc 1 41 33
 190 00ac 93160702 		slli	a3,a4,32
 191 00b0 93D60602 		srli	a3,a3,32
 192 00b4 17070000 		lla	a4,.LANCHOR0
 192      13070700 
 193 00bc 3307D700 		add	a4,a4,a3
 194 00c0 03470700 		lbu	a4,0(a4)
 195              		.loc 1 41 18
 196 00c4 930604FE 		addi	a3,s0,-32
 197 00c8 B3879600 		add	a5,a3,s1
 198 00cc 9B841400 		addiw	s1,s1,1
 199              	.LVL15:
 200 00d0 2388E7FE 		sb	a4,-16(a5)
  42:src/print.cpp ****     } while ((x /= 10) != 0);
 201              		.loc 1 42 24 is_stmt 1
 202 00d4 1B070500 		sext.w	a4,a0
 203              		.loc 1 42 17 is_stmt 0
 204 00d8 3B55C502 		divuw	a0,a0,a2
 205              	.LVL16:
 206              		.loc 1 42 24
 207 00dc 93079000 		li	a5,9
 208 00e0 E3E2E7FC 		bgtu	a4,a5,.L6
 209              	.LVL17:
 210              	.L8:
  43:src/print.cpp ****     if (neg)
  44:src/print.cpp ****         buf[i++] = '-';
  45:src/print.cpp **** 
  46:src/print.cpp ****     while (--i >= 0) { __putc(buf[i]); }
 211              		.loc 1 46 5 is_stmt 1
 212              		.loc 1 46 16
GAS LISTING /tmp/ccPHV8ob.s 			page 9


 213 00e4 9B84F4FF 		addiw	s1,s1,-1
 214              	.LVL18:
 215 00e8 63CE0400 		bltz	s1,.L7
 216              		.loc 1 46 24 discriminator 1
 217              		.loc 1 46 30 is_stmt 0 discriminator 1
 218 00ec 930704FE 		addi	a5,s0,-32
 219 00f0 B3879700 		add	a5,a5,s1
 220 00f4 03C507FF 		lbu	a0,-16(a5)
 221 00f8 97000000 		call	__putc@plt
 221      E7800000 
 222              	.LVL19:
 223 0100 6FF05FFE 		j	.L8
 224              	.L7:
  47:src/print.cpp ****     Riscv::ms_sstatus(sstatus & Riscv::SSTATUS_SIE ? Riscv::SSTATUS_SIE : 0);
 225              		.loc 1 47 5 is_stmt 1
 226              		.loc 1 47 52 is_stmt 0
 227 0104 1B090900 		sext.w	s2,s2
 228              	.LVL20:
 229              		.loc 1 47 22
 230 0108 13792900 		andi	s2,s2,2
 231 010c 1B090900 		sext.w	s2,s2
 232              	.LVL21:
 233              	.LBB24:
 234              	.LBB25:
 177:src/../h/riscv.hpp **** }
 235              		.loc 2 177 5 is_stmt 1
 177:src/../h/riscv.hpp **** }
 236              		.loc 2 177 68 is_stmt 0
 237              	#APP
 238              	# 177 "src/../h/riscv.hpp" 1
 239              		csrs sstatus, s2
 240              	# 0 "" 2
 241              	.LVL22:
 242              	#NO_APP
 243              	.LBE25:
 244              	.LBE24:
  48:src/print.cpp **** }...
 245              		.loc 1 48 1
 246 0114 83308103 		ld	ra,56(sp)
 247              		.cfi_restore 1
 248 0118 03340103 		ld	s0,48(sp)
 249              		.cfi_restore 8
 250              		.cfi_def_cfa 2, 64
 251 011c 83348102 		ld	s1,40(sp)
 252              		.cfi_restore 9
 253 0120 03390102 		ld	s2,32(sp)
 254              		.cfi_restore 18
 255 0124 13010104 		addi	sp,sp,64
 256              		.cfi_def_cfa_offset 0
 257 0128 67800000 		jr	ra
 258              		.cfi_endproc
 259              	.LFE17:
 261              		.section	.rodata
 262              		.align	3
 263              		.set	.LANCHOR0,. + 0
 266              	_ZZ12printIntegermE6digits:
 267 0000 30313233 		.string	"0123456789"
GAS LISTING /tmp/ccPHV8ob.s 			page 10


 267      34353637 
 267      383900
 268              		.text
 269              	.Letext0:
 270              		.file 3 "src/../h/../lib/hw.h"
 271              		.file 4 "src/../lib/console.h"
GAS LISTING /tmp/ccPHV8ob.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 print.cpp
     /tmp/ccPHV8ob.s:9      .text:0000000000000000 _Z11printStringPKc
     /tmp/ccPHV8ob.s:13     .text:0000000000000000 .L0 
     /tmp/ccPHV8ob.s:15     .text:0000000000000000 .L0 
     /tmp/ccPHV8ob.s:16     .text:0000000000000004 .L0 
     /tmp/ccPHV8ob.s:21     .text:0000000000000014 .L0 
     /tmp/ccPHV8ob.s:22     .text:0000000000000014 .L0 
     /tmp/ccPHV8ob.s:23     .text:0000000000000014 .L0 
     /tmp/ccPHV8ob.s:24     .text:0000000000000014 .L0 
     /tmp/ccPHV8ob.s:26     .text:0000000000000018 .L0 
     /tmp/ccPHV8ob.s:32     .text:000000000000001c .L0 
     /tmp/ccPHV8ob.s:33     .text:000000000000001c .L0 
     /tmp/ccPHV8ob.s:34     .text:000000000000001c .L0 
  src/../h/riscv.hpp:188    .text:000000000000001c .L0 
     /tmp/ccPHV8ob.s:42     .text:0000000000000024 .L0 
     /tmp/ccPHV8ob.s:43     .text:0000000000000024 .L0 
     /tmp/ccPHV8ob.s:50     .text:0000000000000028 .L0 
     /tmp/ccPHV8ob.s:51     .text:0000000000000028 .L0 
     /tmp/ccPHV8ob.s:52     .text:0000000000000028 .L0 
     /tmp/ccPHV8ob.s:63     .text:0000000000000030 .L0 
     /tmp/ccPHV8ob.s:64     .text:0000000000000030 .L0 
     /tmp/ccPHV8ob.s:65     .text:0000000000000030 .L0 
     /tmp/ccPHV8ob.s:67     .text:0000000000000034 .L0 
     /tmp/ccPHV8ob.s:69     .text:0000000000000038 .L0 
     /tmp/ccPHV8ob.s:70     .text:0000000000000038 .L0 
     /tmp/ccPHV8ob.s:73     .text:0000000000000040 .L0 
     /tmp/ccPHV8ob.s:74     .text:0000000000000040 .L0 
     /tmp/ccPHV8ob.s:77     .text:0000000000000044 .L0 
     /tmp/ccPHV8ob.s:80     .text:0000000000000048 .L0 
     /tmp/ccPHV8ob.s:81     .text:0000000000000048 .L0 
     /tmp/ccPHV8ob.s:84     .text:000000000000004c .L0 
     /tmp/ccPHV8ob.s:90     .text:0000000000000054 .L0 
  src/../h/riscv.hpp:177    .text:0000000000000054 .L0 
     /tmp/ccPHV8ob.s:100    .text:0000000000000058 .L0 
     /tmp/ccPHV8ob.s:101    .text:000000000000005c .L0 
     /tmp/ccPHV8ob.s:103    .text:0000000000000060 .L0 
     /tmp/ccPHV8ob.s:104    .text:0000000000000060 .L0 
     /tmp/ccPHV8ob.s:106    .text:0000000000000064 .L0 
     /tmp/ccPHV8ob.s:109    .text:0000000000000068 .L0 
     /tmp/ccPHV8ob.s:111    .text:000000000000006c .L0 
     /tmp/ccPHV8ob.s:113    .text:0000000000000070 .L0 
     /tmp/ccPHV8ob.s:119    .text:0000000000000070 _Z12printIntegerm
     /tmp/ccPHV8ob.s:122    .text:0000000000000070 .L0 
     /tmp/ccPHV8ob.s:124    .text:0000000000000070 .L0 
     /tmp/ccPHV8ob.s:125    .text:0000000000000074 .L0 
     /tmp/ccPHV8ob.s:130    .text:0000000000000084 .L0 
     /tmp/ccPHV8ob.s:131    .text:0000000000000084 .L0 
     /tmp/ccPHV8ob.s:132    .text:0000000000000084 .L0 
     /tmp/ccPHV8ob.s:133    .text:0000000000000084 .L0 
     /tmp/ccPHV8ob.s:135    .text:0000000000000088 .L0 
     /tmp/ccPHV8ob.s:139    .text:0000000000000088 .L0 
     /tmp/ccPHV8ob.s:140    .text:0000000000000088 .L0 
     /tmp/ccPHV8ob.s:141    .text:0000000000000088 .L0 
  src/../h/riscv.hpp:188    .text:0000000000000088 .L0 
     /tmp/ccPHV8ob.s:149    .text:0000000000000090 .L0 
     /tmp/ccPHV8ob.s:150    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccPHV8ob.s 			page 12


     /tmp/ccPHV8ob.s:157    .text:0000000000000094 .L0 
     /tmp/ccPHV8ob.s:158    .text:0000000000000094 .L0 
     /tmp/ccPHV8ob.s:159    .text:0000000000000094 .L0 
     /tmp/ccPHV8ob.s:169    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:170    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:171    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:172    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:173    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:174    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:175    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:176    .text:000000000000009c .L0 
     /tmp/ccPHV8ob.s:179    .text:00000000000000a0 .L0 
     /tmp/ccPHV8ob.s:180    .text:00000000000000a0 .L0 
     /tmp/ccPHV8ob.s:184    .text:00000000000000a4 .L0 
     /tmp/ccPHV8ob.s:185    .text:00000000000000a4 .L0 
     /tmp/ccPHV8ob.s:186    .text:00000000000000a4 .L0 
     /tmp/ccPHV8ob.s:190    .text:00000000000000ac .L0 
     /tmp/ccPHV8ob.s:196    .text:00000000000000c4 .L0 
     /tmp/ccPHV8ob.s:202    .text:00000000000000d4 .L0 
     /tmp/ccPHV8ob.s:204    .text:00000000000000d8 .L0 
     /tmp/ccPHV8ob.s:207    .text:00000000000000dc .L0 
     /tmp/ccPHV8ob.s:212    .text:00000000000000e4 .L0 
     /tmp/ccPHV8ob.s:213    .text:00000000000000e4 .L0 
     /tmp/ccPHV8ob.s:217    .text:00000000000000ec .L0 
     /tmp/ccPHV8ob.s:218    .text:00000000000000ec .L0 
     /tmp/ccPHV8ob.s:226    .text:0000000000000104 .L0 
     /tmp/ccPHV8ob.s:227    .text:0000000000000104 .L0 
     /tmp/ccPHV8ob.s:230    .text:0000000000000108 .L0 
     /tmp/ccPHV8ob.s:236    .text:0000000000000110 .L0 
  src/../h/riscv.hpp:177    .text:0000000000000110 .L0 
     /tmp/ccPHV8ob.s:246    .text:0000000000000114 .L0 
     /tmp/ccPHV8ob.s:247    .text:0000000000000118 .L0 
     /tmp/ccPHV8ob.s:249    .text:000000000000011c .L0 
     /tmp/ccPHV8ob.s:250    .text:000000000000011c .L0 
     /tmp/ccPHV8ob.s:252    .text:0000000000000120 .L0 
     /tmp/ccPHV8ob.s:254    .text:0000000000000124 .L0 
     /tmp/ccPHV8ob.s:256    .text:0000000000000128 .L0 
     /tmp/ccPHV8ob.s:258    .text:000000000000012c .L0 
     /tmp/ccPHV8ob.s:263    .rodata:0000000000000000 .LANCHOR0
     /tmp/ccPHV8ob.s:266    .rodata:0000000000000000 _ZZ12printIntegermE6digits
     /tmp/ccPHV8ob.s:272    .text:000000000000012c .L0 
     /tmp/ccPHV8ob.s:192    .text:00000000000000b4 .L0 
     /tmp/ccPHV8ob.s:78     .text:0000000000000048 .L2
     /tmp/ccPHV8ob.s:59     .text:0000000000000030 .L3
     /tmp/ccPHV8ob.s:182    .text:00000000000000a4 .L6
     /tmp/ccPHV8ob.s:224    .text:0000000000000104 .L7
     /tmp/ccPHV8ob.s:210    .text:00000000000000e4 .L8
     /tmp/ccPHV8ob.s:984    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccPHV8ob.s:1864   .debug_str:000000000000041c .LASF79
     /tmp/ccPHV8ob.s:1884   .debug_str:000000000000057d .LASF80
     /tmp/ccPHV8ob.s:1780   .debug_str:000000000000018c .LASF81
     /tmp/ccPHV8ob.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccPHV8ob.s:269    .text:000000000000012c .Letext0
     /tmp/ccPHV8ob.s:1720   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccPHV8ob.s:1816   .debug_str:00000000000002a2 .LASF0
     /tmp/ccPHV8ob.s:1756   .debug_str:00000000000000de .LASF3
     /tmp/ccPHV8ob.s:1822   .debug_str:00000000000002bc .LASF1
GAS LISTING /tmp/ccPHV8ob.s 			page 13


     /tmp/ccPHV8ob.s:1810   .debug_str:000000000000027a .LASF2
     /tmp/ccPHV8ob.s:1770   .debug_str:0000000000000150 .LASF4
     /tmp/ccPHV8ob.s:1798   .debug_str:0000000000000220 .LASF5
     /tmp/ccPHV8ob.s:1846   .debug_str:000000000000037b .LASF6
     /tmp/ccPHV8ob.s:1738   .debug_str:000000000000004c .LASF7
     /tmp/ccPHV8ob.s:1824   .debug_str:00000000000002cf .LASF8
     /tmp/ccPHV8ob.s:1814   .debug_str:000000000000028f .LASF9
     /tmp/ccPHV8ob.s:1872   .debug_str:0000000000000508 .LASF10
     /tmp/ccPHV8ob.s:1788   .debug_str:00000000000001cb .LASF11
     /tmp/ccPHV8ob.s:1830   .debug_str:00000000000002fb .LASF12
     /tmp/ccPHV8ob.s:1866   .debug_str:00000000000004e0 .LASF13
     /tmp/ccPHV8ob.s:1742   .debug_str:000000000000005f .LASF14
     /tmp/ccPHV8ob.s:1724   .debug_str:0000000000000008 .LASF15
     /tmp/ccPHV8ob.s:1752   .debug_str:00000000000000b9 .LASF16
     /tmp/ccPHV8ob.s:1840   .debug_str:0000000000000337 .LASF17
     /tmp/ccPHV8ob.s:1762   .debug_str:0000000000000104 .LASF18
     /tmp/ccPHV8ob.s:1744   .debug_str:000000000000006f .LASF19
     /tmp/ccPHV8ob.s:1848   .debug_str:000000000000038d .LASF20
     /tmp/ccPHV8ob.s:1754   .debug_str:00000000000000c5 .LASF21
     /tmp/ccPHV8ob.s:1876   .debug_str:000000000000052d .LASF22
     /tmp/ccPHV8ob.s:1828   .debug_str:00000000000002e7 .LASF23
     /tmp/ccPHV8ob.s:1808   .debug_str:0000000000000268 .LASF24
     /tmp/ccPHV8ob.s:1842   .debug_str:000000000000034d .LASF25
     /tmp/ccPHV8ob.s:1880   .debug_str:000000000000055b .LASF26
     /tmp/ccPHV8ob.s:1850   .debug_str:000000000000039c .LASF27
     /tmp/ccPHV8ob.s:1862   .debug_str:000000000000040d .LASF28
     /tmp/ccPHV8ob.s:1778   .debug_str:000000000000017b .LASF29
     /tmp/ccPHV8ob.s:1820   .debug_str:00000000000002b6 .LASF82
     /tmp/ccPHV8ob.s:1766   .debug_str:000000000000012e .LASF83
     /tmp/ccPHV8ob.s:1760   .debug_str:00000000000000f8 .LASF30
     /tmp/ccPHV8ob.s:1806   .debug_str:000000000000025b .LASF31
     /tmp/ccPHV8ob.s:1740   .debug_str:0000000000000053 .LASF32
     /tmp/ccPHV8ob.s:1836   .debug_str:0000000000000325 .LASF65
     /tmp/ccPHV8ob.s:1886   .debug_str:000000000000058b .LASF67
     /tmp/ccPHV8ob.s:1726   .debug_str:0000000000000018 .LASF33
     /tmp/ccPHV8ob.s:1854   .debug_str:00000000000003bb .LASF35
     /tmp/ccPHV8ob.s:1772   .debug_str:0000000000000156 .LASF37
     /tmp/ccPHV8ob.s:1758   .debug_str:00000000000000e3 .LASF39
     /tmp/ccPHV8ob.s:1812   .debug_str:0000000000000288 .LASF34
     /tmp/ccPHV8ob.s:1832   .debug_str:000000000000030a .LASF36
     /tmp/ccPHV8ob.s:1868   .debug_str:00000000000004ef .LASF38
     /tmp/ccPHV8ob.s:1858   .debug_str:00000000000003e8 .LASF40
     /tmp/ccPHV8ob.s:1784   .debug_str:00000000000001bd .LASF41
     /tmp/ccPHV8ob.s:1764   .debug_str:000000000000011a .LASF42
     /tmp/ccPHV8ob.s:1722   .debug_str:0000000000000000 .LASF43
     /tmp/ccPHV8ob.s:1792   .debug_str:00000000000001ef .LASF44
     /tmp/ccPHV8ob.s:1774   .debug_str:000000000000015f .LASF45
     /tmp/ccPHV8ob.s:1746   .debug_str:000000000000007f .LASF46
     /tmp/ccPHV8ob.s:1890   .debug_str:00000000000005ae .LASF47
     /tmp/ccPHV8ob.s:1776   .debug_str:0000000000000167 .LASF48
     /tmp/ccPHV8ob.s:1818   .debug_str:00000000000002af .LASF49
     /tmp/ccPHV8ob.s:1882   .debug_str:000000000000056a .LASF50
     /tmp/ccPHV8ob.s:1736   .debug_str:0000000000000045 .LASF51
     /tmp/ccPHV8ob.s:1782   .debug_str:00000000000001aa .LASF52
     /tmp/ccPHV8ob.s:1786   .debug_str:00000000000001c5 .LASF53
     /tmp/ccPHV8ob.s:1860   .debug_str:00000000000003fb .LASF54
     /tmp/ccPHV8ob.s:1732   .debug_str:0000000000000037 .LASF55
GAS LISTING /tmp/ccPHV8ob.s 			page 14


     /tmp/ccPHV8ob.s:1894   .debug_str:00000000000005bb .LASF56
     /tmp/ccPHV8ob.s:1888   .debug_str:00000000000005a3 .LASF57
     /tmp/ccPHV8ob.s:1844   .debug_str:0000000000000363 .LASF58
     /tmp/ccPHV8ob.s:1800   .debug_str:0000000000000227 .LASF59
     /tmp/ccPHV8ob.s:1856   .debug_str:00000000000003d0 .LASF60
     /tmp/ccPHV8ob.s:1750   .debug_str:00000000000000af .LASF61
     /tmp/ccPHV8ob.s:1794   .debug_str:0000000000000203 .LASF62
     /tmp/ccPHV8ob.s:1730   .debug_str:000000000000002d .LASF63
     /tmp/ccPHV8ob.s:1790   .debug_str:00000000000001d9 .LASF64
     /tmp/ccPHV8ob.s:1852   .debug_str:00000000000003ac .LASF66
     /tmp/ccPHV8ob.s:1748   .debug_str:0000000000000093 .LASF68
     /tmp/ccPHV8ob.s:1874   .debug_str:0000000000000518 .LASF84
     /tmp/ccPHV8ob.s:1804   .debug_str:0000000000000239 .LASF85
     /tmp/ccPHV8ob.s:1878   .debug_str:000000000000054e .LASF72
     /tmp/ccPHV8ob.s:1870   .debug_str:00000000000004f6 .LASF74
     /tmp/ccPHV8ob.s:120    .text:0000000000000070 .LFB17
     /tmp/ccPHV8ob.s:259    .text:000000000000012c .LFE17
     /tmp/ccPHV8ob.s:1734   .debug_str:000000000000003d .LASF76
     /tmp/ccPHV8ob.s:1594   .debug_loc:0000000000000000 .LLST4
     /tmp/ccPHV8ob.s:1834   .debug_str:000000000000031d .LASF69
     /tmp/ccPHV8ob.s:1608   .debug_loc:0000000000000039 .LLST5
     /tmp/ccPHV8ob.s:1802   .debug_str:0000000000000232 .LASF70
     /tmp/ccPHV8ob.s:1615   .debug_loc:000000000000005c .LLST6
     /tmp/ccPHV8ob.s:1637   .debug_loc:00000000000000bb .LLST7
     /tmp/ccPHV8ob.s:137    .text:0000000000000088 .LBB20
     /tmp/ccPHV8ob.s:153    .text:0000000000000094 .LBE20
     /tmp/ccPHV8ob.s:155    .text:0000000000000094 .LBB22
     /tmp/ccPHV8ob.s:167    .text:000000000000009c .LBE22
     /tmp/ccPHV8ob.s:1659   .debug_loc:00000000000000fc .LLST8
     /tmp/ccPHV8ob.s:233    .text:0000000000000110 .LBB24
     /tmp/ccPHV8ob.s:244    .text:0000000000000114 .LBE24
     /tmp/ccPHV8ob.s:1667   .debug_loc:0000000000000120 .LLST9
     /tmp/ccPHV8ob.s:222    .text:0000000000000100 .LVL19
     /tmp/ccPHV8ob.s:1826   .debug_str:00000000000002e2 .LASF71
     /tmp/ccPHV8ob.s:1728   .debug_str:0000000000000021 .LASF73
     /tmp/ccPHV8ob.s:1768   .debug_str:000000000000013d .LASF75
     /tmp/ccPHV8ob.s:10     .text:0000000000000000 .LFB16
     /tmp/ccPHV8ob.s:114    .text:0000000000000070 .LFE16
     /tmp/ccPHV8ob.s:1796   .debug_str:0000000000000219 .LASF77
     /tmp/ccPHV8ob.s:1674   .debug_loc:0000000000000143 .LLST0
     /tmp/ccPHV8ob.s:1685   .debug_loc:0000000000000179 .LLST1
     /tmp/ccPHV8ob.s:29     .text:000000000000001c .LBB14
     /tmp/ccPHV8ob.s:46     .text:0000000000000028 .LBE14
     /tmp/ccPHV8ob.s:48     .text:0000000000000028 .LBB16
     /tmp/ccPHV8ob.s:61     .text:0000000000000030 .LBE16
     /tmp/ccPHV8ob.s:1692   .debug_loc:000000000000019c .LLST2
     /tmp/ccPHV8ob.s:87     .text:0000000000000054 .LBB18
     /tmp/ccPHV8ob.s:98     .text:0000000000000058 .LBE18
     /tmp/ccPHV8ob.s:1700   .debug_loc:00000000000001c0 .LLST3
     /tmp/ccPHV8ob.s:71     .text:0000000000000040 .LVL3
     /tmp/ccPHV8ob.s:1892   .debug_str:00000000000005b6 .LASF78
     /tmp/ccPHV8ob.s:1838   .debug_str:0000000000000330 .LASF86
     /tmp/ccPHV8ob.s:123    .text:0000000000000070 .LVL9
     /tmp/ccPHV8ob.s:177    .text:00000000000000a0 .LVL12
     /tmp/ccPHV8ob.s:151    .text:0000000000000094 .LVL10
     /tmp/ccPHV8ob.s:228    .text:0000000000000108 .LVL20
     /tmp/ccPHV8ob.s:181    .text:00000000000000a4 .LVL13
GAS LISTING /tmp/ccPHV8ob.s 			page 15


     /tmp/ccPHV8ob.s:188    .text:00000000000000ac .LVL14
     /tmp/ccPHV8ob.s:199    .text:00000000000000d0 .LVL15
     /tmp/ccPHV8ob.s:209    .text:00000000000000e4 .LVL17
     /tmp/ccPHV8ob.s:214    .text:00000000000000e8 .LVL18
     /tmp/ccPHV8ob.s:205    .text:00000000000000dc .LVL16
     /tmp/ccPHV8ob.s:164    .text:000000000000009c .LVL11
     /tmp/ccPHV8ob.s:232    .text:0000000000000110 .LVL21
     /tmp/ccPHV8ob.s:241    .text:0000000000000114 .LVL22
     /tmp/ccPHV8ob.s:14     .text:0000000000000000 .LVL0
     /tmp/ccPHV8ob.s:57     .text:0000000000000030 .LVL2
     /tmp/ccPHV8ob.s:107    .text:0000000000000064 .LVL8
     /tmp/ccPHV8ob.s:44     .text:0000000000000028 .LVL1
     /tmp/ccPHV8ob.s:82     .text:000000000000004c .LVL5
     /tmp/ccPHV8ob.s:86     .text:0000000000000054 .LVL6
     /tmp/ccPHV8ob.s:95     .text:0000000000000058 .LVL7
     /tmp/ccPHV8ob.s:273    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
__putc
