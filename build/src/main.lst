GAS LISTING /tmp/cchI6r16.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 46696E69 		.string	"Finished\n"
   9      73686564 
   9      0A00
  10              		.text
  11              		.align	2
  12              		.globl	main
  14              	main:
  15              	.LFB34:
  16              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include "../test/printing.hpp"
   4:src/main.cpp  **** #include "../h/syscall_c.hpp"
   5:src/main.cpp  **** #include "../h/riscv.hpp"
   6:src/main.cpp  **** #include "../h/_thread.hpp"
   7:src/main.cpp  **** 
   8:src/main.cpp  **** extern void userMain();
   9:src/main.cpp  **** 
  10:src/main.cpp  **** void main()
  11:src/main.cpp  **** {
  17              		.loc 1 11 1
  18              		.cfi_startproc
  19 0000 130101FE 		addi	sp,sp,-32
  20              		.cfi_def_cfa_offset 32
  21 0004 233C1100 		sd	ra,24(sp)
  22 0008 23388100 		sd	s0,16(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25 000c 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  12:src/main.cpp  **** 
  13:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  27              		.loc 1 13 5
  28              		.loc 1 13 19 is_stmt 0
  29 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  29      83B70700 
  30              	.LVL0:
  31              	.LBB4:
  32              	.LBB5:
  33              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** 
   3:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #define READ_REG(var, regname) __asm__ volatile("mv %0, " regname: "=r"(var))
   9:src/../h/riscv.hpp **** #define WRITE_REG(regname, val) __asm__ volatile("mv " regname ", %0" :: "r"(val))
GAS LISTING /tmp/cchI6r16.s 			page 2


  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** namespace Num{
  12:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_ALLOC = 0x01;
  13:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_FREE = 0x02;
  14:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_FREE_SPACE = 0x03;
  15:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_LARGEST_FREE_BLOCK = 0x04;
  16:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_CREATE= 0x11;
  17:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_EXIT = 0x12;
  18:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_DISPATCH = 0x13;
  19:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_OPEN = 0x21;
  20:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_CLOSE = 0x22;
  21:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_WAIT = 0x23;
  22:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_SIGNAL = 0x24;
  23:src/../h/riscv.hpp **** }
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp **** class Riscv
  27:src/../h/riscv.hpp **** {
  28:src/../h/riscv.hpp **** public:
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  31:src/../h/riscv.hpp ****     static void popSppSpie();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register scause
  34:src/../h/riscv.hpp ****     static uint64 r_scause();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register scause
  37:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register sepc
  40:src/../h/riscv.hpp ****     static uint64 r_sepc();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register sepc
  43:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stvec
  46:src/../h/riscv.hpp ****     static uint64 r_stvec();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stvec
  49:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register stval
  52:src/../h/riscv.hpp ****     static uint64 r_stval();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register stval
  55:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSip
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  60:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  61:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sip
  65:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cchI6r16.s 			page 3


  67:src/../h/riscv.hpp ****     // mask clear register sip
  68:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sip
  71:src/../h/riscv.hpp ****     static uint64 r_sip();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sip
  74:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     enum BitMaskSstatus
  77:src/../h/riscv.hpp ****     {
  78:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  79:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  80:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  81:src/../h/riscv.hpp ****     };
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask set register sstatus
  84:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // mask clear register sstatus
  87:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // read register sstatus
  90:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // write register sstatus
  93:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // supervisor trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** private:
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     // supervisor trap handler
 101:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile scause;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 109:src/../h/riscv.hpp ****     return scause;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile sepc;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 121:src/../h/riscv.hpp ****     return sepc;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cchI6r16.s 			page 4


 124:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stvec;
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 133:src/../h/riscv.hpp ****     return stvec;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  34              		.loc 2 138 5 is_stmt 1
  35              		.loc 2 138 69 is_stmt 0
  36              	#APP
  37              	# 138 "src/../h/riscv.hpp" 1
 139              	}
  38              		csrw stvec, a5
  39              	# 0 "" 2
  40              	.LVL1:
  41              	#NO_APP
  42              	.LBE5:
  43              	.LBE4:
  14:src/main.cpp  **** 
  15:src/main.cpp  ****     // idle nit
  16:src/main.cpp  ****     thread_t idleThread;
  44              		.loc 1 16 5 is_stmt 1
  17:src/main.cpp  ****     thread_create(&idleThread, nullptr, nullptr);
  45              		.loc 1 17 5
  46              		.loc 1 17 18 is_stmt 0
  47 001c 13060000 		li	a2,0
  48 0020 93050000 		li	a1,0
  49 0024 130584FE 		addi	a0,s0,-24
  50 0028 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  50      E7800000 
  51              	.LVL2:
  18:src/main.cpp  ****     _thread::running = idleThread;
  52              		.loc 1 18 5 is_stmt 1
  53              		.loc 1 18 22 is_stmt 0
  54 0030 97070000 		la	a5,_ZN7_thread7runningE
  54      83B70700 
  55 0038 033784FE 		ld	a4,-24(s0)
  56 003c 23B0E700 		sd	a4,0(a5)
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     // promena rezima
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     // uposleno cekanje
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     userMain();
  57              		.loc 1 24 5 is_stmt 1
  58              		.loc 1 24 13 is_stmt 0
  59 0040 97000000 		call	_Z8userMainv@plt
  59      E7800000 
  60              	.LVL3:
GAS LISTING /tmp/cchI6r16.s 			page 5


  25:src/main.cpp  ****     printString("Finished\n");
  61              		.loc 1 25 5 is_stmt 1
  62              		.loc 1 25 16 is_stmt 0
  63 0048 17050000 		lla	a0,.LC0
  63      13050500 
  64 0050 97000000 		call	_Z11printStringPKc@plt
  64      E7800000 
  65              	.LVL4:
  26:src/main.cpp  **** }
  66              		.loc 1 26 1
  67 0058 83308101 		ld	ra,24(sp)
  68              		.cfi_restore 1
  69 005c 03340101 		ld	s0,16(sp)
  70              		.cfi_restore 8
  71              		.cfi_def_cfa 2, 32
  72 0060 13010102 		addi	sp,sp,32
  73              		.cfi_def_cfa_offset 0
  74 0064 67800000 		jr	ra
  75              		.cfi_endproc
  76              	.LFE34:
  78              	.Letext0:
  79              		.file 3 "src/../test/../h/../lib/hw.h"
  80              		.file 4 "src/../test/../h/syscall_c.hpp"
  81              		.file 5 "src/../h/_thread.hpp"
  82              		.file 6 "src/../test/printing.hpp"
GAS LISTING /tmp/cchI6r16.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cchI6r16.s:14     .text:0000000000000000 main
     /tmp/cchI6r16.s:18     .text:0000000000000000 .L0 
     /tmp/cchI6r16.s:19     .text:0000000000000000 .L0 
     /tmp/cchI6r16.s:20     .text:0000000000000004 .L0 
     /tmp/cchI6r16.s:23     .text:000000000000000c .L0 
     /tmp/cchI6r16.s:24     .text:000000000000000c .L0 
     /tmp/cchI6r16.s:26     .text:0000000000000010 .L0 
     /tmp/cchI6r16.s:28     .text:0000000000000010 .L0 
     /tmp/cchI6r16.s:29     .text:0000000000000010 .L0 
     /tmp/cchI6r16.s:35     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:138    .text:0000000000000018 .L0 
     /tmp/cchI6r16.s:45     .text:000000000000001c .L0 
     /tmp/cchI6r16.s:46     .text:000000000000001c .L0 
     /tmp/cchI6r16.s:47     .text:000000000000001c .L0 
     /tmp/cchI6r16.s:53     .text:0000000000000030 .L0 
     /tmp/cchI6r16.s:54     .text:0000000000000030 .L0 
     /tmp/cchI6r16.s:58     .text:0000000000000040 .L0 
     /tmp/cchI6r16.s:59     .text:0000000000000040 .L0 
     /tmp/cchI6r16.s:62     .text:0000000000000048 .L0 
     /tmp/cchI6r16.s:63     .text:0000000000000048 .L0 
     /tmp/cchI6r16.s:67     .text:0000000000000058 .L0 
     /tmp/cchI6r16.s:68     .text:000000000000005c .L0 
     /tmp/cchI6r16.s:70     .text:0000000000000060 .L0 
     /tmp/cchI6r16.s:71     .text:0000000000000060 .L0 
     /tmp/cchI6r16.s:73     .text:0000000000000064 .L0 
     /tmp/cchI6r16.s:75     .text:0000000000000068 .L0 
     /tmp/cchI6r16.s:83     .text:0000000000000068 .L0 
     /tmp/cchI6r16.s:29     .text:0000000000000010 .L0 
     /tmp/cchI6r16.s:54     .text:0000000000000030 .L0 
     /tmp/cchI6r16.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cchI6r16.s:63     .text:0000000000000048 .L0 
     /tmp/cchI6r16.s:904    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cchI6r16.s:1800   .debug_str:000000000000062f .LASF112
     /tmp/cchI6r16.s:1702   .debug_str:0000000000000338 .LASF113
     /tmp/cchI6r16.s:1666   .debug_str:000000000000021a .LASF114
     /tmp/cchI6r16.s:5      .text:0000000000000000 .Ltext0
     /tmp/cchI6r16.s:78     .text:0000000000000068 .Letext0
     /tmp/cchI6r16.s:1590   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cchI6r16.s:1726   .debug_str:000000000000041f .LASF0
     /tmp/cchI6r16.s:1740   .debug_str:0000000000000459 .LASF1
     /tmp/cchI6r16.s:1716   .debug_str:00000000000003e0 .LASF2
     /tmp/cchI6r16.s:1652   .debug_str:00000000000001bc .LASF3
     /tmp/cchI6r16.s:1686   .debug_str:00000000000002c3 .LASF4
     /tmp/cchI6r16.s:1776   .debug_str:0000000000000547 .LASF5
     /tmp/cchI6r16.s:1620   .debug_str:00000000000000a4 .LASF6
     /tmp/cchI6r16.s:1744   .debug_str:0000000000000474 .LASF7
     /tmp/cchI6r16.s:1724   .debug_str:000000000000040c .LASF8
     /tmp/cchI6r16.s:1806   .debug_str:000000000000070b .LASF9
     /tmp/cchI6r16.s:1672   .debug_str:0000000000000251 .LASF10
     /tmp/cchI6r16.s:1758   .debug_str:00000000000004ca .LASF11
     /tmp/cchI6r16.s:1802   .debug_str:00000000000006f3 .LASF12
     /tmp/cchI6r16.s:1622   .debug_str:00000000000000ab .LASF13
     /tmp/cchI6r16.s:1600   .debug_str:000000000000002f .LASF14
     /tmp/cchI6r16.s:1634   .debug_str:000000000000010f .LASF15
     /tmp/cchI6r16.s:1770   .debug_str:0000000000000513 .LASF16
GAS LISTING /tmp/cchI6r16.s 			page 7


     /tmp/cchI6r16.s:1642   .debug_str:000000000000014f .LASF17
     /tmp/cchI6r16.s:1592   .debug_str:0000000000000000 .LASF18
     /tmp/cchI6r16.s:1684   .debug_str:00000000000002bb .LASF58
     /tmp/cchI6r16.s:1608   .debug_str:000000000000005b .LASF115
     /tmp/cchI6r16.s:1804   .debug_str:0000000000000702 .LASF19
     /tmp/cchI6r16.s:1748   .debug_str:0000000000000492 .LASF21
     /tmp/cchI6r16.s:1746   .debug_str:0000000000000487 .LASF27
     /tmp/cchI6r16.s:1714   .debug_str:00000000000003c5 .LASF29
     /tmp/cchI6r16.s:1718   .debug_str:00000000000003ee .LASF20
     /tmp/cchI6r16.s:1712   .debug_str:00000000000003aa .LASF22
     /tmp/cchI6r16.s:1700   .debug_str:000000000000032b .LASF23
     /tmp/cchI6r16.s:1820   .debug_str:0000000000000780 .LASF24
     /tmp/cchI6r16.s:1766   .debug_str:0000000000000503 .LASF116
     /tmp/cchI6r16.s:1772   .debug_str:0000000000000529 .LASF60
     /tmp/cchI6r16.s:1794   .debug_str:00000000000005f2 .LASF62
     /tmp/cchI6r16.s:1658   .debug_str:00000000000001e5 .LASF117
     /tmp/cchI6r16.s:1760   .debug_str:00000000000004d9 .LASF64
     /tmp/cchI6r16.s:1656   .debug_str:00000000000001cb .LASF66
     /tmp/cchI6r16.s:1604   .debug_str:0000000000000048 .LASF25
     /tmp/cchI6r16.s:1692   .debug_str:00000000000002f4 .LASF26
     /tmp/cchI6r16.s:1632   .debug_str:0000000000000105 .LASF28
     /tmp/cchI6r16.s:1706   .debug_str:0000000000000353 .LASF30
     /tmp/cchI6r16.s:1678   .debug_str:0000000000000292 .LASF31
     /tmp/cchI6r16.s:1798   .debug_str:0000000000000618 .LASF32
     /tmp/cchI6r16.s:1606   .debug_str:0000000000000051 .LASF33
     /tmp/cchI6r16.s:1628   .debug_str:00000000000000d0 .LASF34
     /tmp/cchI6r16.s:1810   .debug_str:0000000000000722 .LASF69
     /tmp/cchI6r16.s:1626   .debug_str:00000000000000cb .LASF35
     /tmp/cchI6r16.s:1734   .debug_str:0000000000000442 .LASF36
     /tmp/cchI6r16.s:1732   .debug_str:000000000000043c .LASF37
     /tmp/cchI6r16.s:1696   .debug_str:0000000000000316 .LASF38
     /tmp/cchI6r16.s:1736   .debug_str:0000000000000447 .LASF39
     /tmp/cchI6r16.s:1690   .debug_str:00000000000002eb .LASF40
     /tmp/cchI6r16.s:1738   .debug_str:0000000000000451 .LASF41
     /tmp/cchI6r16.s:1594   .debug_str:0000000000000009 .LASF42
     /tmp/cchI6r16.s:1704   .debug_str:0000000000000345 .LASF43
     /tmp/cchI6r16.s:1676   .debug_str:0000000000000275 .LASF45
     /tmp/cchI6r16.s:1814   .debug_str:000000000000074f .LASF118
     /tmp/cchI6r16.s:1710   .debug_str:000000000000037e .LASF119
     /tmp/cchI6r16.s:1730   .debug_str:0000000000000433 .LASF44
     /tmp/cchI6r16.s:1792   .debug_str:00000000000005db .LASF46
     /tmp/cchI6r16.s:1624   .debug_str:00000000000000bb .LASF47
     /tmp/cchI6r16.s:1778   .debug_str:0000000000000559 .LASF48
     /tmp/cchI6r16.s:1636   .debug_str:000000000000011b .LASF49
     /tmp/cchI6r16.s:1688   .debug_str:00000000000002ca .LASF50
     /tmp/cchI6r16.s:1754   .debug_str:00000000000004ad .LASF51
     /tmp/cchI6r16.s:1708   .debug_str:000000000000036c .LASF52
     /tmp/cchI6r16.s:1598   .debug_str:0000000000000019 .LASF53
     /tmp/cchI6r16.s:1818   .debug_str:0000000000000771 .LASF54
     /tmp/cchI6r16.s:1780   .debug_str:0000000000000568 .LASF55
     /tmp/cchI6r16.s:1822   .debug_str:00000000000007a4 .LASF56
     /tmp/cchI6r16.s:1664   .debug_str:0000000000000209 .LASF57
     /tmp/cchI6r16.s:1638   .debug_str:0000000000000134 .LASF59
     /tmp/cchI6r16.s:1768   .debug_str:0000000000000508 .LASF61
     /tmp/cchI6r16.s:1824   .debug_str:00000000000007b3 .LASF63
     /tmp/cchI6r16.s:1602   .debug_str:000000000000003f .LASF65
     /tmp/cchI6r16.s:1786   .debug_str:000000000000059b .LASF67
GAS LISTING /tmp/cchI6r16.s 			page 8


     /tmp/cchI6r16.s:1654   .debug_str:00000000000001c2 .LASF68
     /tmp/cchI6r16.s:1640   .debug_str:000000000000013a .LASF70
     /tmp/cchI6r16.s:1720   .debug_str:00000000000003fa .LASF71
     /tmp/cchI6r16.s:1764   .debug_str:00000000000004f0 .LASF72
     /tmp/cchI6r16.s:1808   .debug_str:000000000000071b .LASF73
     /tmp/cchI6r16.s:1790   .debug_str:00000000000005c8 .LASF74
     /tmp/cchI6r16.s:1742   .debug_str:000000000000046c .LASF75
     /tmp/cchI6r16.s:1644   .debug_str:0000000000000165 .LASF76
     /tmp/cchI6r16.s:1596   .debug_str:0000000000000011 .LASF77
     /tmp/cchI6r16.s:1782   .debug_str:0000000000000578 .LASF78
     /tmp/cchI6r16.s:1660   .debug_str:00000000000001ed .LASF79
     /tmp/cchI6r16.s:1816   .debug_str:000000000000075d .LASF80
     /tmp/cchI6r16.s:1830   .debug_str:00000000000007e9 .LASF81
     /tmp/cchI6r16.s:1662   .debug_str:00000000000001f5 .LASF82
     /tmp/cchI6r16.s:1728   .debug_str:000000000000042c .LASF83
     /tmp/cchI6r16.s:1828   .debug_str:00000000000007d6 .LASF84
     /tmp/cchI6r16.s:1616   .debug_str:0000000000000078 .LASF85
     /tmp/cchI6r16.s:1668   .debug_str:0000000000000238 .LASF86
     /tmp/cchI6r16.s:1670   .debug_str:000000000000024b .LASF87
     /tmp/cchI6r16.s:1796   .debug_str:0000000000000606 .LASF88
     /tmp/cchI6r16.s:1614   .debug_str:0000000000000072 .LASF89
     /tmp/cchI6r16.s:1832   .debug_str:00000000000007f1 .LASF90
     /tmp/cchI6r16.s:1722   .debug_str:0000000000000401 .LASF91
     /tmp/cchI6r16.s:1774   .debug_str:000000000000052f .LASF92
     /tmp/cchI6r16.s:1694   .debug_str:000000000000030b .LASF93
     /tmp/cchI6r16.s:1788   .debug_str:00000000000005b0 .LASF94
     /tmp/cchI6r16.s:1680   .debug_str:000000000000029b .LASF95
     /tmp/cchI6r16.s:1682   .debug_str:00000000000002a5 .LASF96
     /tmp/cchI6r16.s:1612   .debug_str:0000000000000068 .LASF97
     /tmp/cchI6r16.s:1674   .debug_str:000000000000025f .LASF98
     /tmp/cchI6r16.s:1784   .debug_str:000000000000058c .LASF99
     /tmp/cchI6r16.s:1630   .debug_str:00000000000000e9 .LASF100
     /tmp/cchI6r16.s:1812   .debug_str:000000000000073a .LASF101
     /tmp/cchI6r16.s:1648   .debug_str:0000000000000187 .LASF102
     /tmp/cchI6r16.s:1610   .debug_str:0000000000000063 .LASF103
     /tmp/cchI6r16.s:1752   .debug_str:00000000000004a8 .LASF104
     /tmp/cchI6r16.s:15     .text:0000000000000000 .LFB34
     /tmp/cchI6r16.s:76     .text:0000000000000068 .LFE34
     /tmp/cchI6r16.s:1826   .debug_str:00000000000007cb .LASF105
     /tmp/cchI6r16.s:31     .text:0000000000000018 .LBB4
     /tmp/cchI6r16.s:43     .text:000000000000001c .LBE4
     /tmp/cchI6r16.s:51     .text:0000000000000030 .LVL2
     /tmp/cchI6r16.s:60     .text:0000000000000048 .LVL3
     /tmp/cchI6r16.s:65     .text:0000000000000058 .LVL4
     /tmp/cchI6r16.s:1750   .debug_str:00000000000004a2 .LASF120
     /tmp/cchI6r16.s:1618   .debug_str:000000000000007f .LASF106
     /tmp/cchI6r16.s:1646   .debug_str:0000000000000179 .LASF108
     /tmp/cchI6r16.s:1698   .debug_str:000000000000031e .LASF107
     /tmp/cchI6r16.s:1756   .debug_str:00000000000004c1 .LASF109
     /tmp/cchI6r16.s:1650   .debug_str:00000000000001a9 .LASF110
     /tmp/cchI6r16.s:1762   .debug_str:00000000000004e4 .LASF111
     /tmp/cchI6r16.s:84     .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP7_threadPFvPvES2_
_ZN7_thread7runningE
GAS LISTING /tmp/cchI6r16.s 			page 9


_Z8userMainv
_Z11printStringPKc
