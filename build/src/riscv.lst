GAS LISTING /tmp/ccJTd9x3.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB40:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** 
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** #include "../h/riscv.hpp"
   4:src/riscv.cpp **** #include "../h/_thread.hpp"
   5:src/riscv.cpp **** #include "../lib/console.h"
   6:src/riscv.cpp **** #include "../lib/mem.h"
   7:src/riscv.cpp **** #include "../h/_sem.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** using namespace Num;
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** void Riscv::popSppSpie()
  13:src/riscv.cpp **** {
  12              		.loc 1 13 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 14 5
  21              		.loc 1 14 38 is_stmt 0
  22              	#APP
  23              	# 14 "src/riscv.cpp" 1
  15              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 15 5 is_stmt 1
  27              		.loc 1 15 29 is_stmt 0
  28              	# 15 "src/riscv.cpp" 1
  16              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 16 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE40:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
GAS LISTING /tmp/ccJTd9x3.s 			page 2


  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB41:
  17:src/riscv.cpp **** 
  18:src/riscv.cpp **** 
  19:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  20:src/riscv.cpp **** {
  47              		.loc 1 20 1 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FB 		addi	sp,sp,-80
  50              		.cfi_def_cfa_offset 80
  51 0024 23341104 		sd	ra,72(sp)
  52 0028 23308104 		sd	s0,64(sp)
  53 002c 233C9102 		sd	s1,56(sp)
  54 0030 23382103 		sd	s2,48(sp)
  55 0034 23343103 		sd	s3,40(sp)
  56              		.cfi_offset 1, -8
  57              		.cfi_offset 8, -16
  58              		.cfi_offset 9, -24
  59              		.cfi_offset 18, -32
  60              		.cfi_offset 19, -40
  61 0038 13040105 		addi	s0,sp,80
  62              		.cfi_def_cfa 8, 0
  21:src/riscv.cpp ****     uint64 scause = r_scause();
  63              		.loc 1 21 5
  64              	.LBB20:
  65              	.LBB21:
  66              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** 
   3:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #define READ_REG(var, regname) __asm__ volatile("mv %0, " regname: "=r"(var))
   9:src/../h/riscv.hpp **** #define WRITE_REG(regname, val) __asm__ volatile("mv " regname ", %0" :: "r"(val))
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** namespace Num{
  12:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_ALLOC = 0x01;
  13:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_FREE = 0x02;
  14:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_FREE_SPACE = 0x03;
  15:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_LARGEST_FREE_BLOCK = 0x04;
  16:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_CREATE= 0x11;
  17:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_EXIT = 0x12;
  18:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_DISPATCH = 0x13;
  19:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_OPEN = 0x21;
  20:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_CLOSE = 0x22;
  21:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_WAIT = 0x23;
  22:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_SIGNAL = 0x24;
  23:src/../h/riscv.hpp **** }
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp **** class Riscv
  27:src/../h/riscv.hpp **** {
  28:src/../h/riscv.hpp **** public:
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
GAS LISTING /tmp/ccJTd9x3.s 			page 3


  31:src/../h/riscv.hpp ****     static void popSppSpie();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register scause
  34:src/../h/riscv.hpp ****     static uint64 r_scause();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register scause
  37:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register sepc
  40:src/../h/riscv.hpp ****     static uint64 r_sepc();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register sepc
  43:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stvec
  46:src/../h/riscv.hpp ****     static uint64 r_stvec();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stvec
  49:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register stval
  52:src/../h/riscv.hpp ****     static uint64 r_stval();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register stval
  55:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSip
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  60:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  61:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sip
  65:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sip
  68:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sip
  71:src/../h/riscv.hpp ****     static uint64 r_sip();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sip
  74:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     enum BitMaskSstatus
  77:src/../h/riscv.hpp ****     {
  78:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  79:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  80:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  81:src/../h/riscv.hpp ****     };
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask set register sstatus
  84:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // mask clear register sstatus
  87:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
GAS LISTING /tmp/ccJTd9x3.s 			page 4


  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // read register sstatus
  90:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // write register sstatus
  93:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // supervisor trap
  96:src/../h/riscv.hpp ****     static void supervisorTrap();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** private:
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     // supervisor trap handler
 101:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     uint64 volatile scause;
  67              		.loc 2 107 5
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  68              		.loc 2 108 5
  69              		.loc 2 108 72 is_stmt 0
  70              	#APP
  71              	# 108 "src/../h/riscv.hpp" 1
 109              	    return scause;
  72              		csrr a5, scause
  73              	# 0 "" 2
  74              	#NO_APP
  75 0040 233CF4FA 		sd	a5,-72(s0)
  76              		.loc 2 109 5 is_stmt 1
  77              		.loc 2 109 12 is_stmt 0
  78 0044 833784FB 		ld	a5,-72(s0)
  79              	.LVL0:
  80              	.LBE21:
  81              	.LBE20:
  22:src/riscv.cpp ****     switch((uint64)scause){
  82              		.loc 1 22 5 is_stmt 1
  83              	.LBB22:
  84 0048 1307F0FF 		li	a4,-1
  85 004c 1317F703 		slli	a4,a4,63
  86 0050 13071700 		addi	a4,a4,1
  87 0054 638AE714 		beq	a5,a4,.L4
  88 0058 1307F0FF 		li	a4,-1
  89 005c 1317F703 		slli	a4,a4,63
  90 0060 13071700 		addi	a4,a4,1
  91 0064 636CF704 		bgtu	a5,a4,.L5
  92 0068 938787FF 		addi	a5,a5,-8
  93              	.LVL1:
  94 006c 13071000 		li	a4,1
  95 0070 6366F710 		bgtu	a5,a4,.L3
  96              	.LBB23:
  23:src/riscv.cpp ****         case 0x0000000000000008UL:
  97              		.loc 1 23 9
  24:src/riscv.cpp ****         case 0x0000000000000009UL: {
  98              		.loc 1 24 9
GAS LISTING /tmp/ccJTd9x3.s 			page 5


  99              		.loc 1 24 36
 100              	.LBB24:
  25:src/riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 101              		.loc 1 25 13
 102              	.LBB25:
 103              	.LBB26:
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104              		.loc 2 119 5
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105              		.loc 2 120 5
 106              		.loc 2 120 64 is_stmt 0
 107              	#APP
 108              	# 120 "src/../h/riscv.hpp" 1
 121              	    return sepc;
 109              		csrr a5, sepc
 110              	# 0 "" 2
 111              	.LVL2:
 112              	#NO_APP
 113 0078 2334F4FC 		sd	a5,-56(s0)
 114              		.loc 2 121 5 is_stmt 1
 115              		.loc 2 121 12 is_stmt 0
 116 007c 833484FC 		ld	s1,-56(s0)
 117              	.LBE26:
 118              	.LBE25:
 119              		.loc 1 25 38
 120 0080 93844400 		addi	s1,s1,4
 121              	.LVL3:
  26:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
 122              		.loc 1 26 13 is_stmt 1
 123              	.LBB27:
 124              	.LBB28:
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     uint64 volatile stvec;
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 133:src/../h/riscv.hpp ****     return stvec;
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
GAS LISTING /tmp/ccJTd9x3.s 			page 6


 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     uint64 volatile stval;
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 145:src/../h/riscv.hpp ****     return stval;
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 154:src/../h/riscv.hpp **** {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     uint64 volatile sip;
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 167:src/../h/riscv.hpp ****     return sip;
 168:src/../h/riscv.hpp **** }
 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 171:src/../h/riscv.hpp **** {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 176:src/../h/riscv.hpp **** {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 181:src/../h/riscv.hpp **** {
 182:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 183:src/../h/riscv.hpp **** }
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 125              		.loc 2 187 5
 188:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 126              		.loc 2 188 5
 127              		.loc 2 188 76 is_stmt 0
 128              	#APP
 129              	# 188 "src/../h/riscv.hpp" 1
 189              	    return sstatus;
 130              		csrr a5, sstatus
GAS LISTING /tmp/ccJTd9x3.s 			page 7


 131              	# 0 "" 2
 132              	#NO_APP
 133 0088 2330F4FC 		sd	a5,-64(s0)
 134              		.loc 2 189 5 is_stmt 1
 135              		.loc 2 189 12 is_stmt 0
 136 008c 033904FC 		ld	s2,-64(s0)
 137              	.LVL4:
 138              	.LBE28:
 139              	.LBE27:
  27:src/riscv.cpp ****             uint64 scallnum;
 140              		.loc 1 27 13 is_stmt 1
  28:src/riscv.cpp ****             uint64 ret = 0;
 141              		.loc 1 28 13
  29:src/riscv.cpp ****             READ_REG(scallnum, "a7");
 142              		.loc 1 29 13
 143              		.loc 1 29 37 is_stmt 0
 144              	#APP
 145              	# 29 "src/riscv.cpp" 1
  30              	            switch (scallnum) {
 146              		mv a5, a7
 147              	# 0 "" 2
 148              	.LVL5:
 149              		.loc 1 30 13 is_stmt 1
 150              	#NO_APP
 151 0094 9387F7FE 		addi	a5,a5,-17
 152              	.LVL6:
 153 0098 13073001 		li	a4,19
 154 009c 6368F70C 		bgtu	a5,a4,.L18
 155 00a0 93972700 		slli	a5,a5,2
 156              	.LVL7:
 157 00a4 17070000 		lla	a4,.L11
 157      13070700 
 158 00ac B387E700 		add	a5,a5,a4
 159 00b0 83A70700 		lw	a5,0(a5)
 160 00b4 B387E700 		add	a5,a5,a4
 161 00b8 67800700 		jr	a5
 162              		.section	.rodata
 163              		.align	2
 164              		.align	2
 165              	.L11:
 166 0000 00000000 		.word	.L17-.L11
 167 0004 00000000 		.word	.L16-.L11
 168 0008 00000000 		.word	.L15-.L11
 169 000c 00000000 		.word	.L18-.L11
 170 0010 00000000 		.word	.L18-.L11
 171 0014 00000000 		.word	.L18-.L11
 172 0018 00000000 		.word	.L18-.L11
 173 001c 00000000 		.word	.L18-.L11
 174 0020 00000000 		.word	.L18-.L11
 175 0024 00000000 		.word	.L18-.L11
 176 0028 00000000 		.word	.L18-.L11
 177 002c 00000000 		.word	.L18-.L11
 178 0030 00000000 		.word	.L18-.L11
 179 0034 00000000 		.word	.L18-.L11
 180 0038 00000000 		.word	.L18-.L11
 181 003c 00000000 		.word	.L18-.L11
 182 0040 00000000 		.word	.L14-.L11
GAS LISTING /tmp/ccJTd9x3.s 			page 8


 183 0044 00000000 		.word	.L13-.L11
 184 0048 00000000 		.word	.L12-.L11
 185 004c 00000000 		.word	.L10-.L11
 186              		.text
 187              	.LVL8:
 188              	.L5:
 189              	.LBE24:
 190              	.LBE23:
  22:src/riscv.cpp ****         case 0x0000000000000008UL:
 191              		.loc 1 22 5 is_stmt 0
 192 00bc 1307F0FF 		li	a4,-1
 193 00c0 1317F703 		slli	a4,a4,63
 194 00c4 13079700 		addi	a4,a4,9
 195 00c8 639AE70A 		bne	a5,a4,.L3
 196              	.LBB42:
  31:src/riscv.cpp ****                 case SCALL_MEM_ALLOC:
  32:src/riscv.cpp ****                     break;
  33:src/riscv.cpp ****                 case SCALL_MEM_FREE:
  34:src/riscv.cpp ****                     break;
  35:src/riscv.cpp ****                 case SCALL_MEM_GET_FREE_SPACE:
  36:src/riscv.cpp ****                     break;
  37:src/riscv.cpp ****                 case SCALL_MEM_GET_LARGEST_FREE_BLOCK:
  38:src/riscv.cpp ****                     break;
  39:src/riscv.cpp ****                 case SCALL_THREAD_CREATE: {
  40:src/riscv.cpp ****                     thread_t* handle;
  41:src/riscv.cpp ****                     _thread::Body body;
  42:src/riscv.cpp ****                     void* args;
  43:src/riscv.cpp ****                     READ_REG(handle, "a0");
  44:src/riscv.cpp ****                     READ_REG(body, "a1");
  45:src/riscv.cpp ****                     READ_REG(args, "a2");
  46:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
  47:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
  48:src/riscv.cpp ****                     else ret = -1;
  49:src/riscv.cpp ****                     break;
  50:src/riscv.cpp ****                 }
  51:src/riscv.cpp ****                 case SCALL_THREAD_EXIT:
  52:src/riscv.cpp ****                     ret = _thread::exitThread();
  53:src/riscv.cpp ****                     break;
  54:src/riscv.cpp ****                 case SCALL_THREAD_DISPATCH:
  55:src/riscv.cpp ****                     _thread::dispatch();
  56:src/riscv.cpp ****                     break;
  57:src/riscv.cpp ****                 case SCALL_SEM_OPEN:
  58:src/riscv.cpp ****                     sem_t* handle;
  59:src/riscv.cpp ****                     uint32 init;
  60:src/riscv.cpp ****                     READ_REG(handle, "a0");
  61:src/riscv.cpp ****                     READ_REG(init, "a1");
  62:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
  63:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
  64:src/riscv.cpp ****                     else ret = -1;
  65:src/riscv.cpp ****                     break;
  66:src/riscv.cpp ****                 case SCALL_SEM_CLOSE:
  67:src/riscv.cpp ****                     sem_t handleClose;
  68:src/riscv.cpp ****                     READ_REG(handleClose, "a0");
  69:src/riscv.cpp ****                     ret = handleClose->close();
  70:src/riscv.cpp ****                     break;
  71:src/riscv.cpp ****                 case SCALL_SEM_WAIT:
  72:src/riscv.cpp ****                     sem_t idWait;
GAS LISTING /tmp/ccJTd9x3.s 			page 9


  73:src/riscv.cpp ****                     READ_REG(idWait, "a0");
  74:src/riscv.cpp ****                     ret = idWait->wait();
  75:src/riscv.cpp ****                     break;
  76:src/riscv.cpp ****                 case SCALL_SEM_SIGNAL:
  77:src/riscv.cpp ****                     sem_t idSignal;
  78:src/riscv.cpp ****                     READ_REG(idSignal, "a0");
  79:src/riscv.cpp ****                     ret = idSignal->signal();
  80:src/riscv.cpp ****                     break;
  81:src/riscv.cpp ****                 default:
  82:src/riscv.cpp ****                     break;
  83:src/riscv.cpp ****             }
  84:src/riscv.cpp ****             WRITE_REG("a0", ret);
  85:src/riscv.cpp ****             w_sstatus(sstatus);
  86:src/riscv.cpp ****             w_sepc(sepc);
  87:src/riscv.cpp ****             break;
  88:src/riscv.cpp ****         }
  89:src/riscv.cpp ****         case 0x8000000000000001UL:
  90:src/riscv.cpp ****             mc_sip(SIP_SSIP);
  91:src/riscv.cpp ****             break;
  92:src/riscv.cpp ****         case 0x8000000000000009UL:
 197              		.loc 1 92 9 is_stmt 1
  93:src/riscv.cpp ****             console_handler();
 198              		.loc 1 93 13
 199              		.loc 1 93 28 is_stmt 0
 200 00cc 97000000 		call	console_handler@plt
 200      E7800000 
 201              	.LVL9:
  94:src/riscv.cpp ****             break;
 202              		.loc 1 94 13 is_stmt 1
 203              	.LBE42:
 204              	.LBE22:
  95:src/riscv.cpp ****         default:
  96:src/riscv.cpp ****             break;
  97:src/riscv.cpp ****     }
  98:src/riscv.cpp **** }...
 205              		.loc 1 98 1 is_stmt 0
 206 00d4 6F00800A 		j	.L3
 207              	.LVL10:
 208              	.L17:
 209              	.LBB45:
 210              	.LBB43:
 211              	.LBB38:
 212              	.LBB29:
  39:src/riscv.cpp ****                 case SCALL_THREAD_CREATE: {
 213              		.loc 1 39 17 is_stmt 1
  39:src/riscv.cpp ****                 case SCALL_THREAD_CREATE: {
 214              		.loc 1 39 43
 215              	.LBB30:
  40:src/riscv.cpp ****                     thread_t* handle;
 216              		.loc 1 40 21
  41:src/riscv.cpp ****                     _thread::Body body;
 217              		.loc 1 41 21
  42:src/riscv.cpp ****                     void* args;
 218              		.loc 1 42 21
  43:src/riscv.cpp ****                     READ_REG(handle, "a0");
 219              		.loc 1 43 21
  43:src/riscv.cpp ****                     READ_REG(handle, "a0");
GAS LISTING /tmp/ccJTd9x3.s 			page 10


 220              		.loc 1 43 43 is_stmt 0
 221              	#APP
 222              	# 43 "src/riscv.cpp" 1
 223              		mv s3, a0
 224              	# 0 "" 2
 225              	.LVL11:
  44:src/riscv.cpp ****                     READ_REG(body, "a1");
 226              		.loc 1 44 21 is_stmt 1
  44:src/riscv.cpp ****                     READ_REG(body, "a1");
 227              		.loc 1 44 41 is_stmt 0
 228              	# 44 "src/riscv.cpp" 1
 229              		mv a0, a1
 230              	# 0 "" 2
 231              	.LVL12:
  45:src/riscv.cpp ****                     READ_REG(args, "a2");
 232              		.loc 1 45 21 is_stmt 1
  45:src/riscv.cpp ****                     READ_REG(args, "a2");
 233              		.loc 1 45 41 is_stmt 0
 234              	# 45 "src/riscv.cpp" 1
 235              		mv a1, a2
 236              	# 0 "" 2
 237              	.LVL13:
  46:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
 238              		.loc 1 46 21 is_stmt 1
  46:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
 239              		.loc 1 46 52 is_stmt 0
 240              	#NO_APP
 241 00e4 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 241      E7800000 
 242              	.LVL14:
  46:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
 243              		.loc 1 46 29
 244 00ec 23B0A900 		sd	a0,0(s3)
  47:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 245              		.loc 1 47 21 is_stmt 1
 246 00f0 6304050A 		beqz	a0,.L19
  47:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 247              		.loc 1 47 48 is_stmt 0
 248 00f4 13050000 		li	a0,0
 249 00f8 6F008007 		j	.L9
 250              	.LVL15:
 251              	.L16:
 252              	.LBE30:
  51:src/riscv.cpp ****                 case SCALL_THREAD_EXIT:
 253              		.loc 1 51 17 is_stmt 1
  52:src/riscv.cpp ****                     ret = _thread::exitThread();
 254              		.loc 1 52 21
  52:src/riscv.cpp ****                     ret = _thread::exitThread();
 255              		.loc 1 52 46 is_stmt 0
 256 00fc 97000000 		call	_ZN7_thread10exitThreadEv@plt
 256      E7800000 
 257              	.LVL16:
  53:src/riscv.cpp ****                     break;
 258              		.loc 1 53 21 is_stmt 1
 259 0104 6F00C006 		j	.L9
 260              	.LVL17:
 261              	.L15:
GAS LISTING /tmp/ccJTd9x3.s 			page 11


  54:src/riscv.cpp ****                 case SCALL_THREAD_DISPATCH:
 262              		.loc 1 54 17
  55:src/riscv.cpp ****                     _thread::dispatch();
 263              		.loc 1 55 21
  55:src/riscv.cpp ****                     _thread::dispatch();
 264              		.loc 1 55 38 is_stmt 0
 265 0108 97000000 		call	_ZN7_thread8dispatchEv@plt
 265      E7800000 
 266              	.LVL18:
  56:src/riscv.cpp ****                     break;
 267              		.loc 1 56 21 is_stmt 1
 268              	.LBE29:
  28:src/riscv.cpp ****             uint64 ret = 0;
 269              		.loc 1 28 20 is_stmt 0
 270 0110 13050000 		li	a0,0
 271              	.LBB32:
  56:src/riscv.cpp ****                     break;
 272              		.loc 1 56 21
 273 0114 6F00C005 		j	.L9
 274              	.L14:
  57:src/riscv.cpp ****                 case SCALL_SEM_OPEN:
 275              		.loc 1 57 17 is_stmt 1
  58:src/riscv.cpp ****                     sem_t* handle;
 276              		.loc 1 58 21
  59:src/riscv.cpp ****                     uint32 init;
 277              		.loc 1 59 21
  60:src/riscv.cpp ****                     READ_REG(handle, "a0");
 278              		.loc 1 60 21
  60:src/riscv.cpp ****                     READ_REG(handle, "a0");
 279              		.loc 1 60 43 is_stmt 0
 280              	#APP
 281              	# 60 "src/riscv.cpp" 1
 282              		mv s3, a0
 283              	# 0 "" 2
 284              	.LVL19:
  61:src/riscv.cpp ****                     READ_REG(init, "a1");
 285              		.loc 1 61 21 is_stmt 1
  61:src/riscv.cpp ****                     READ_REG(init, "a1");
 286              		.loc 1 61 41 is_stmt 0
 287              	# 61 "src/riscv.cpp" 1
 288              		mv a0, a1
 289              	# 0 "" 2
 290              	.LVL20:
  62:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
 291              		.loc 1 62 21 is_stmt 1
  62:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
 292              		.loc 1 62 52 is_stmt 0
 293              	#NO_APP
 294 0120 1B050500 		sext.w	a0,a0
 295 0124 97000000 		call	_ZN4_sem15createSemaphoreEj@plt
 295      E7800000 
 296              	.LVL21:
  62:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
 297              		.loc 1 62 29
 298 012c 23B0A900 		sd	a0,0(s3)
  63:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 299              		.loc 1 63 21 is_stmt 1
GAS LISTING /tmp/ccJTd9x3.s 			page 12


 300 0130 63080506 		beqz	a0,.L20
  63:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 301              		.loc 1 63 48 is_stmt 0
 302 0134 13050000 		li	a0,0
 303 0138 6F008003 		j	.L9
 304              	.LVL22:
 305              	.L13:
  66:src/riscv.cpp ****                 case SCALL_SEM_CLOSE:
 306              		.loc 1 66 17 is_stmt 1
  67:src/riscv.cpp ****                     sem_t handleClose;
 307              		.loc 1 67 21
  68:src/riscv.cpp ****                     READ_REG(handleClose, "a0");
 308              		.loc 1 68 21
  68:src/riscv.cpp ****                     READ_REG(handleClose, "a0");
 309              		.loc 1 68 48 is_stmt 0
 310              	#APP
 311              	# 68 "src/riscv.cpp" 1
 312              		mv a0, a0
 313              	# 0 "" 2
 314              	.LVL23:
  69:src/riscv.cpp ****                     ret = handleClose->close();
 315              		.loc 1 69 21 is_stmt 1
  69:src/riscv.cpp ****                     ret = handleClose->close();
 316              		.loc 1 69 45 is_stmt 0
 317              	#NO_APP
 318 0140 97000000 		call	_ZN4_sem5closeEv@plt
 318      E7800000 
 319              	.LVL24:
  70:src/riscv.cpp ****                     break;
 320              		.loc 1 70 21 is_stmt 1
 321 0148 6F008002 		j	.L9
 322              	.LVL25:
 323              	.L12:
  71:src/riscv.cpp ****                 case SCALL_SEM_WAIT:
 324              		.loc 1 71 17
  72:src/riscv.cpp ****                     sem_t idWait;
 325              		.loc 1 72 21
  73:src/riscv.cpp ****                     READ_REG(idWait, "a0");
 326              		.loc 1 73 21
  73:src/riscv.cpp ****                     READ_REG(idWait, "a0");
 327              		.loc 1 73 43 is_stmt 0
 328              	#APP
 329              	# 73 "src/riscv.cpp" 1
 330              		mv a0, a0
 331              	# 0 "" 2
 332              	.LVL26:
  74:src/riscv.cpp ****                     ret = idWait->wait();
 333              		.loc 1 74 21 is_stmt 1
  74:src/riscv.cpp ****                     ret = idWait->wait();
 334              		.loc 1 74 39 is_stmt 0
 335              	#NO_APP
 336 0150 97000000 		call	_ZN4_sem4waitEv@plt
 336      E7800000 
 337              	.LVL27:
  75:src/riscv.cpp ****                     break;
 338              		.loc 1 75 21 is_stmt 1
 339 0158 6F008001 		j	.L9
GAS LISTING /tmp/ccJTd9x3.s 			page 13


 340              	.LVL28:
 341              	.L10:
  76:src/riscv.cpp ****                 case SCALL_SEM_SIGNAL:
 342              		.loc 1 76 17
  77:src/riscv.cpp ****                     sem_t idSignal;
 343              		.loc 1 77 21
  78:src/riscv.cpp ****                     READ_REG(idSignal, "a0");
 344              		.loc 1 78 21
  78:src/riscv.cpp ****                     READ_REG(idSignal, "a0");
 345              		.loc 1 78 45 is_stmt 0
 346              	#APP
 347              	# 78 "src/riscv.cpp" 1
 348              		mv a0, a0
 349              	# 0 "" 2
 350              	.LVL29:
  79:src/riscv.cpp ****                     ret = idSignal->signal();
 351              		.loc 1 79 21 is_stmt 1
  79:src/riscv.cpp ****                     ret = idSignal->signal();
 352              		.loc 1 79 43 is_stmt 0
 353              	#NO_APP
 354 0160 97000000 		call	_ZN4_sem6signalEv@plt
 354      E7800000 
 355              	.LVL30:
  80:src/riscv.cpp ****                     break;
 356              		.loc 1 80 21 is_stmt 1
 357 0168 6F008000 		j	.L9
 358              	.LVL31:
 359              	.L18:
 360              	.LBE32:
  29:src/riscv.cpp ****             READ_REG(scallnum, "a7");
 361              		.loc 1 29 37 is_stmt 0
 362 016c 13050000 		li	a0,0
 363              	.LVL32:
 364              	.L9:
  84:src/riscv.cpp ****             WRITE_REG("a0", ret);
 365              		.loc 1 84 13 is_stmt 1
  84:src/riscv.cpp ****             WRITE_REG("a0", ret);
 366              		.loc 1 84 33 is_stmt 0
 367              	#APP
 368              	# 84 "src/riscv.cpp" 1
  85:src/riscv.cpp ****             w_sstatus(sstatus);
 369              		mv a0, a0
 370              	# 0 "" 2
 371              		.loc 1 85 13 is_stmt 1
 372              	.LVL33:
 373              	#NO_APP
 374              	.LBB33:
 375              	.LBB34:
 190:src/../h/riscv.hpp **** }
 191:src/../h/riscv.hpp **** 
 192:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 193:src/../h/riscv.hpp **** {
 194:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 376              		.loc 2 194 5
 377              		.loc 2 194 77 is_stmt 0
 378              	#APP
 379              	# 194 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccJTd9x3.s 			page 14


 195              	}
 380              		csrw sstatus, s2
 381              	# 0 "" 2
 382              	.LVL34:
 383              	#NO_APP
 384              	.LBE34:
 385              	.LBE33:
  86:src/riscv.cpp ****             w_sepc(sepc);
 386              		.loc 1 86 13 is_stmt 1
 387              	.LBB35:
 388              	.LBB36:
 126:src/../h/riscv.hpp **** }
 389              		.loc 2 126 5
 126:src/../h/riscv.hpp **** }
 390              		.loc 2 126 65 is_stmt 0
 391              	#APP
 392              	# 126 "src/../h/riscv.hpp" 1
 393              		csrw sepc, s1
 394              	# 0 "" 2
 395              	.LVL35:
 396              	#NO_APP
 397              	.L3:
 398              	.LBE36:
 399              	.LBE35:
 400              	.LBE38:
 401              	.LBE43:
 402              	.LBE45:
 403              		.loc 1 98 1
 404 017c 83308104 		ld	ra,72(sp)
 405              		.cfi_remember_state
 406              		.cfi_restore 1
 407 0180 03340104 		ld	s0,64(sp)
 408              		.cfi_restore 8
 409              		.cfi_def_cfa 2, 80
 410 0184 83348103 		ld	s1,56(sp)
 411              		.cfi_restore 9
 412 0188 03390103 		ld	s2,48(sp)
 413              		.cfi_restore 18
 414 018c 83398102 		ld	s3,40(sp)
 415              		.cfi_restore 19
 416 0190 13010105 		addi	sp,sp,80
 417              		.cfi_def_cfa_offset 0
 418 0194 67800000 		jr	ra
 419              	.LVL36:
 420              	.L19:
 421              		.cfi_restore_state
 422              	.LBB46:
 423              	.LBB44:
 424              	.LBB39:
 425              	.LBB37:
 426              	.LBB31:
  48:src/riscv.cpp ****                     else ret = -1;
 427              		.loc 1 48 30
 428 0198 1305F0FF 		li	a0,-1
 429 019c 6FF05FFD 		j	.L9
 430              	.LVL37:
 431              	.L20:
GAS LISTING /tmp/ccJTd9x3.s 			page 15


 432              	.LBE31:
  64:src/riscv.cpp ****                     else ret = -1;
 433              		.loc 1 64 30
 434 01a0 1305F0FF 		li	a0,-1
 435 01a4 6FF0DFFC 		j	.L9
 436              	.LVL38:
 437              	.L4:
 438              	.LBE37:
 439              	.LBE39:
  89:src/riscv.cpp ****         case 0x8000000000000001UL:
 440              		.loc 1 89 9 is_stmt 1
  90:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 441              		.loc 1 90 13
 442              	.LBB40:
 443              	.LBB41:
 160:src/../h/riscv.hpp **** }
 444              		.loc 2 160 5
 160:src/../h/riscv.hpp **** }
 445              		.loc 2 160 64 is_stmt 0
 446 01a8 93072000 		li	a5,2
 447              	.LVL39:
 448              	#APP
 449              	# 160 "src/../h/riscv.hpp" 1
 161:src/../h/riscv.hpp **** 
 450              		csrc sip, a5
 451              	# 0 "" 2
 452              		.loc 2 161 1
 453              	#NO_APP
 454 01b0 6FF0DFFC 		j	.L3
 455              	.LBE41:
 456              	.LBE40:
 457              	.LBE44:
 458              	.LBE46:
 459              		.cfi_endproc
 460              	.LFE41:
 462              	.Letext0:
 463              		.file 3 "src/../h/../lib/hw.h"
 464              		.file 4 "src/../h/list.hpp"
 465              		.file 5 "src/../h/_thread.hpp"
 466              		.file 6 "src/../h/../h/syscall_c.hpp"
 467              		.file 7 "src/../h/_sem.hpp"
 468              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/ccJTd9x3.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccJTd9x3.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccJTd9x3.s:13     .text:0000000000000000 .L0 
     /tmp/ccJTd9x3.s:14     .text:0000000000000000 .L0 
     /tmp/ccJTd9x3.s:15     .text:0000000000000004 .L0 
     /tmp/ccJTd9x3.s:17     .text:0000000000000008 .L0 
     /tmp/ccJTd9x3.s:19     .text:000000000000000c .L0 
     /tmp/ccJTd9x3.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:14     .text:000000000000000c .L0 
     /tmp/ccJTd9x3.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:15     .text:0000000000000010 .L0 
     /tmp/ccJTd9x3.s:33     .text:0000000000000014 .L0 
     /tmp/ccJTd9x3.s:34     .text:0000000000000018 .L0 
     /tmp/ccJTd9x3.s:35     .text:0000000000000018 .L0 
     /tmp/ccJTd9x3.s:37     .text:000000000000001c .L0 
     /tmp/ccJTd9x3.s:39     .text:0000000000000020 .L0 
     /tmp/ccJTd9x3.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccJTd9x3.s:48     .text:0000000000000020 .L0 
     /tmp/ccJTd9x3.s:49     .text:0000000000000020 .L0 
     /tmp/ccJTd9x3.s:50     .text:0000000000000024 .L0 
     /tmp/ccJTd9x3.s:56     .text:0000000000000038 .L0 
     /tmp/ccJTd9x3.s:57     .text:0000000000000038 .L0 
     /tmp/ccJTd9x3.s:58     .text:0000000000000038 .L0 
     /tmp/ccJTd9x3.s:59     .text:0000000000000038 .L0 
     /tmp/ccJTd9x3.s:60     .text:0000000000000038 .L0 
     /tmp/ccJTd9x3.s:62     .text:000000000000003c .L0 
     /tmp/ccJTd9x3.s:67     .text:000000000000003c .L0 
     /tmp/ccJTd9x3.s:68     .text:000000000000003c .L0 
     /tmp/ccJTd9x3.s:69     .text:000000000000003c .L0 
  src/../h/riscv.hpp:108    .text:000000000000003c .L0 
     /tmp/ccJTd9x3.s:77     .text:0000000000000044 .L0 
     /tmp/ccJTd9x3.s:78     .text:0000000000000044 .L0 
     /tmp/ccJTd9x3.s:84     .text:0000000000000048 .L0 
     /tmp/ccJTd9x3.s:98     .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:99     .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:101    .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:104    .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:105    .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:106    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:120    .text:0000000000000074 .L0 
     /tmp/ccJTd9x3.s:115    .text:000000000000007c .L0 
     /tmp/ccJTd9x3.s:116    .text:000000000000007c .L0 
     /tmp/ccJTd9x3.s:120    .text:0000000000000080 .L0 
     /tmp/ccJTd9x3.s:125    .text:0000000000000084 .L0 
     /tmp/ccJTd9x3.s:126    .text:0000000000000084 .L0 
     /tmp/ccJTd9x3.s:127    .text:0000000000000084 .L0 
  src/../h/riscv.hpp:188    .text:0000000000000084 .L0 
     /tmp/ccJTd9x3.s:135    .text:000000000000008c .L0 
     /tmp/ccJTd9x3.s:136    .text:000000000000008c .L0 
     /tmp/ccJTd9x3.s:141    .text:0000000000000090 .L0 
     /tmp/ccJTd9x3.s:142    .text:0000000000000090 .L0 
     /tmp/ccJTd9x3.s:143    .text:0000000000000090 .L0 
       src/riscv.cpp:29     .text:0000000000000090 .L0 
     /tmp/ccJTd9x3.s:151    .text:0000000000000094 .L0 
     /tmp/ccJTd9x3.s:192    .text:00000000000000bc .L0 
     /tmp/ccJTd9x3.s:198    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccJTd9x3.s 			page 17


     /tmp/ccJTd9x3.s:199    .text:00000000000000cc .L0 
     /tmp/ccJTd9x3.s:200    .text:00000000000000cc .L0 
     /tmp/ccJTd9x3.s:205    .text:00000000000000d4 .L0 
     /tmp/ccJTd9x3.s:206    .text:00000000000000d4 .L0 
     /tmp/ccJTd9x3.s:214    .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:216    .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:217    .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:218    .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:219    .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:220    .text:00000000000000d8 .L0 
       src/riscv.cpp:43     .text:00000000000000d8 .L0 
     /tmp/ccJTd9x3.s:227    .text:00000000000000dc .L0 
       src/riscv.cpp:44     .text:00000000000000dc .L0 
     /tmp/ccJTd9x3.s:233    .text:00000000000000e0 .L0 
       src/riscv.cpp:45     .text:00000000000000e0 .L0 
     /tmp/ccJTd9x3.s:239    .text:00000000000000e4 .L0 
     /tmp/ccJTd9x3.s:241    .text:00000000000000e4 .L0 
     /tmp/ccJTd9x3.s:244    .text:00000000000000ec .L0 
     /tmp/ccJTd9x3.s:246    .text:00000000000000f0 .L0 
     /tmp/ccJTd9x3.s:248    .text:00000000000000f4 .L0 
     /tmp/ccJTd9x3.s:254    .text:00000000000000fc .L0 
     /tmp/ccJTd9x3.s:255    .text:00000000000000fc .L0 
     /tmp/ccJTd9x3.s:256    .text:00000000000000fc .L0 
     /tmp/ccJTd9x3.s:259    .text:0000000000000104 .L0 
     /tmp/ccJTd9x3.s:263    .text:0000000000000108 .L0 
     /tmp/ccJTd9x3.s:264    .text:0000000000000108 .L0 
     /tmp/ccJTd9x3.s:265    .text:0000000000000108 .L0 
     /tmp/ccJTd9x3.s:269    .text:0000000000000110 .L0 
     /tmp/ccJTd9x3.s:270    .text:0000000000000110 .L0 
     /tmp/ccJTd9x3.s:273    .text:0000000000000114 .L0 
     /tmp/ccJTd9x3.s:276    .text:0000000000000118 .L0 
     /tmp/ccJTd9x3.s:277    .text:0000000000000118 .L0 
     /tmp/ccJTd9x3.s:278    .text:0000000000000118 .L0 
     /tmp/ccJTd9x3.s:279    .text:0000000000000118 .L0 
       src/riscv.cpp:60     .text:0000000000000118 .L0 
     /tmp/ccJTd9x3.s:286    .text:000000000000011c .L0 
       src/riscv.cpp:61     .text:000000000000011c .L0 
     /tmp/ccJTd9x3.s:292    .text:0000000000000120 .L0 
     /tmp/ccJTd9x3.s:294    .text:0000000000000120 .L0 
     /tmp/ccJTd9x3.s:298    .text:000000000000012c .L0 
     /tmp/ccJTd9x3.s:300    .text:0000000000000130 .L0 
     /tmp/ccJTd9x3.s:302    .text:0000000000000134 .L0 
     /tmp/ccJTd9x3.s:307    .text:000000000000013c .L0 
     /tmp/ccJTd9x3.s:308    .text:000000000000013c .L0 
     /tmp/ccJTd9x3.s:309    .text:000000000000013c .L0 
       src/riscv.cpp:68     .text:000000000000013c .L0 
     /tmp/ccJTd9x3.s:316    .text:0000000000000140 .L0 
     /tmp/ccJTd9x3.s:318    .text:0000000000000140 .L0 
     /tmp/ccJTd9x3.s:321    .text:0000000000000148 .L0 
     /tmp/ccJTd9x3.s:325    .text:000000000000014c .L0 
     /tmp/ccJTd9x3.s:326    .text:000000000000014c .L0 
     /tmp/ccJTd9x3.s:327    .text:000000000000014c .L0 
       src/riscv.cpp:73     .text:000000000000014c .L0 
     /tmp/ccJTd9x3.s:334    .text:0000000000000150 .L0 
     /tmp/ccJTd9x3.s:336    .text:0000000000000150 .L0 
     /tmp/ccJTd9x3.s:339    .text:0000000000000158 .L0 
     /tmp/ccJTd9x3.s:343    .text:000000000000015c .L0 
GAS LISTING /tmp/ccJTd9x3.s 			page 18


     /tmp/ccJTd9x3.s:344    .text:000000000000015c .L0 
     /tmp/ccJTd9x3.s:345    .text:000000000000015c .L0 
       src/riscv.cpp:78     .text:000000000000015c .L0 
     /tmp/ccJTd9x3.s:352    .text:0000000000000160 .L0 
     /tmp/ccJTd9x3.s:354    .text:0000000000000160 .L0 
     /tmp/ccJTd9x3.s:357    .text:0000000000000168 .L0 
     /tmp/ccJTd9x3.s:362    .text:000000000000016c .L0 
     /tmp/ccJTd9x3.s:366    .text:0000000000000170 .L0 
       src/riscv.cpp:84     .text:0000000000000170 .L0 
     /tmp/ccJTd9x3.s:376    .text:0000000000000174 .L0 
     /tmp/ccJTd9x3.s:377    .text:0000000000000174 .L0 
  src/../h/riscv.hpp:194    .text:0000000000000174 .L0 
     /tmp/ccJTd9x3.s:389    .text:0000000000000178 .L0 
     /tmp/ccJTd9x3.s:390    .text:0000000000000178 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000178 .L0 
     /tmp/ccJTd9x3.s:404    .text:000000000000017c .L0 
     /tmp/ccJTd9x3.s:405    .text:0000000000000180 .L0 
     /tmp/ccJTd9x3.s:406    .text:0000000000000180 .L0 
     /tmp/ccJTd9x3.s:408    .text:0000000000000184 .L0 
     /tmp/ccJTd9x3.s:409    .text:0000000000000184 .L0 
     /tmp/ccJTd9x3.s:411    .text:0000000000000188 .L0 
     /tmp/ccJTd9x3.s:413    .text:000000000000018c .L0 
     /tmp/ccJTd9x3.s:415    .text:0000000000000190 .L0 
     /tmp/ccJTd9x3.s:417    .text:0000000000000194 .L0 
     /tmp/ccJTd9x3.s:421    .text:0000000000000198 .L0 
     /tmp/ccJTd9x3.s:428    .text:0000000000000198 .L0 
     /tmp/ccJTd9x3.s:434    .text:00000000000001a0 .L0 
     /tmp/ccJTd9x3.s:441    .text:00000000000001a8 .L0 
     /tmp/ccJTd9x3.s:444    .text:00000000000001a8 .L0 
     /tmp/ccJTd9x3.s:445    .text:00000000000001a8 .L0 
     /tmp/ccJTd9x3.s:446    .text:00000000000001a8 .L0 
     /tmp/ccJTd9x3.s:454    .text:00000000000001b0 .L0 
     /tmp/ccJTd9x3.s:459    .text:00000000000001b4 .L0 
     /tmp/ccJTd9x3.s:469    .text:00000000000001b4 .L0 
     /tmp/ccJTd9x3.s:165    .rodata:0000000000000000 .L11
     /tmp/ccJTd9x3.s:157    .text:00000000000000a4 .L0 
     /tmp/ccJTd9x3.s:437    .text:00000000000001a8 .L4
     /tmp/ccJTd9x3.s:188    .text:00000000000000bc .L5
     /tmp/ccJTd9x3.s:397    .text:000000000000017c .L3
     /tmp/ccJTd9x3.s:359    .text:000000000000016c .L18
     /tmp/ccJTd9x3.s:420    .text:0000000000000198 .L19
     /tmp/ccJTd9x3.s:364    .text:0000000000000170 .L9
     /tmp/ccJTd9x3.s:431    .text:00000000000001a0 .L20
     /tmp/ccJTd9x3.s:208    .text:00000000000000d8 .L17
     /tmp/ccJTd9x3.s:251    .text:00000000000000fc .L16
     /tmp/ccJTd9x3.s:261    .text:0000000000000108 .L15
     /tmp/ccJTd9x3.s:274    .text:0000000000000118 .L14
     /tmp/ccJTd9x3.s:305    .text:000000000000013c .L13
     /tmp/ccJTd9x3.s:323    .text:000000000000014c .L12
     /tmp/ccJTd9x3.s:341    .text:000000000000015c .L10
     /tmp/ccJTd9x3.s:1851   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccJTd9x3.s:3255   .debug_str:00000000000007e4 .LASF154
     /tmp/ccJTd9x3.s:3189   .debug_str:00000000000005cd .LASF155
     /tmp/ccJTd9x3.s:3081   .debug_str:0000000000000288 .LASF156
     /tmp/ccJTd9x3.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccJTd9x3.s:462    .text:00000000000001b4 .Letext0
     /tmp/ccJTd9x3.s:2975   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/ccJTd9x3.s 			page 19


     /tmp/ccJTd9x3.s:3161   .debug_str:00000000000004ed .LASF0
     /tmp/ccJTd9x3.s:3183   .debug_str:0000000000000585 .LASF1
     /tmp/ccJTd9x3.s:3143   .debug_str:0000000000000483 .LASF2
     /tmp/ccJTd9x3.s:3065   .debug_str:0000000000000217 .LASF3
     /tmp/ccJTd9x3.s:3221   .debug_str:00000000000006cc .LASF4
     /tmp/ccJTd9x3.s:3109   .debug_str:0000000000000383 .LASF5
     /tmp/ccJTd9x3.s:3227   .debug_str:0000000000000707 .LASF6
     /tmp/ccJTd9x3.s:3011   .debug_str:0000000000000095 .LASF7
     /tmp/ccJTd9x3.s:3187   .debug_str:00000000000005ba .LASF8
     /tmp/ccJTd9x3.s:3159   .debug_str:00000000000004da .LASF9
     /tmp/ccJTd9x3.s:3275   .debug_str:0000000000000954 .LASF10
     /tmp/ccJTd9x3.s:3095   .debug_str:00000000000002f5 .LASF11
     /tmp/ccJTd9x3.s:3201   .debug_str:000000000000062a .LASF12
     /tmp/ccJTd9x3.s:3259   .debug_str:00000000000008c3 .LASF13
     /tmp/ccJTd9x3.s:3017   .debug_str:00000000000000b7 .LASF14
     /tmp/ccJTd9x3.s:2983   .debug_str:0000000000000019 .LASF15
     /tmp/ccJTd9x3.s:3037   .debug_str:000000000000013f .LASF16
     /tmp/ccJTd9x3.s:3215   .debug_str:000000000000067f .LASF17
     /tmp/ccJTd9x3.s:3055   .debug_str:00000000000001bd .LASF18
     /tmp/ccJTd9x3.s:3019   .debug_str:00000000000000c7 .LASF19
     /tmp/ccJTd9x3.s:3229   .debug_str:0000000000000719 .LASF20
     /tmp/ccJTd9x3.s:3039   .debug_str:000000000000014b .LASF21
     /tmp/ccJTd9x3.s:3283   .debug_str:0000000000000997 .LASF22
     /tmp/ccJTd9x3.s:3199   .debug_str:0000000000000616 .LASF23
     /tmp/ccJTd9x3.s:3129   .debug_str:000000000000040f .LASF24
     /tmp/ccJTd9x3.s:3217   .debug_str:0000000000000695 .LASF25
     /tmp/ccJTd9x3.s:3285   .debug_str:00000000000009b8 .LASF26
     /tmp/ccJTd9x3.s:3231   .debug_str:0000000000000728 .LASF27
     /tmp/ccJTd9x3.s:3253   .debug_str:00000000000007d5 .LASF28
     /tmp/ccJTd9x3.s:3079   .debug_str:0000000000000277 .LASF29
     /tmp/ccJTd9x3.s:3179   .debug_str:0000000000000574 .LASF69
     /tmp/ccJTd9x3.s:3121   .debug_str:00000000000003d4 .LASF157
     /tmp/ccJTd9x3.s:3237   .debug_str:0000000000000750 .LASF30
     /tmp/ccJTd9x3.s:3177   .debug_str:000000000000056b .LASF31
     /tmp/ccJTd9x3.s:3115   .debug_str:00000000000003a1 .LASF32
     /tmp/ccJTd9x3.s:3213   .debug_str:0000000000000674 .LASF65
     /tmp/ccJTd9x3.s:3295   .debug_str:0000000000000a0d .LASF67
     /tmp/ccJTd9x3.s:2985   .debug_str:0000000000000029 .LASF33
     /tmp/ccJTd9x3.s:3073   .debug_str:0000000000000249 .LASF35
     /tmp/ccJTd9x3.s:3067   .debug_str:000000000000021d .LASF37
     /tmp/ccJTd9x3.s:3045   .debug_str:000000000000016f .LASF39
     /tmp/ccJTd9x3.s:3151   .debug_str:00000000000004af .LASF34
     /tmp/ccJTd9x3.s:3205   .debug_str:0000000000000644 .LASF36
     /tmp/ccJTd9x3.s:3265   .debug_str:00000000000008f2 .LASF38
     /tmp/ccJTd9x3.s:3243   .debug_str:0000000000000778 .LASF40
     /tmp/ccJTd9x3.s:3085   .debug_str:00000000000002b9 .LASF41
     /tmp/ccJTd9x3.s:3057   .debug_str:00000000000001d3 .LASF42
     /tmp/ccJTd9x3.s:2981   .debug_str:0000000000000011 .LASF43
     /tmp/ccJTd9x3.s:3101   .debug_str:0000000000000336 .LASF44
     /tmp/ccJTd9x3.s:3009   .debug_str:000000000000008d .LASF45
     /tmp/ccJTd9x3.s:3025   .debug_str:00000000000000ec .LASF46
     /tmp/ccJTd9x3.s:3301   .debug_str:0000000000000a35 .LASF47
     /tmp/ccJTd9x3.s:3075   .debug_str:000000000000025e .LASF48
     /tmp/ccJTd9x3.s:3163   .debug_str:00000000000004fa .LASF49
     /tmp/ccJTd9x3.s:3291   .debug_str:00000000000009f0 .LASF50
     /tmp/ccJTd9x3.s:3005   .debug_str:000000000000007e .LASF51
     /tmp/ccJTd9x3.s:3083   .debug_str:00000000000002a6 .LASF52
GAS LISTING /tmp/ccJTd9x3.s 			page 20


     /tmp/ccJTd9x3.s:3091   .debug_str:00000000000002e7 .LASF53
     /tmp/ccJTd9x3.s:3251   .debug_str:00000000000007c3 .LASF54
     /tmp/ccJTd9x3.s:3003   .debug_str:0000000000000078 .LASF55
     /tmp/ccJTd9x3.s:3309   .debug_str:0000000000000a6c .LASF56
     /tmp/ccJTd9x3.s:3299   .debug_str:0000000000000a2a .LASF57
     /tmp/ccJTd9x3.s:3223   .debug_str:00000000000006d3 .LASF58
     /tmp/ccJTd9x3.s:3181   .debug_str:000000000000057a .LASF59
     /tmp/ccJTd9x3.s:3239   .debug_str:0000000000000759 .LASF60
     /tmp/ccJTd9x3.s:3035   .debug_str:0000000000000135 .LASF61
     /tmp/ccJTd9x3.s:3103   .debug_str:000000000000034a .LASF62
     /tmp/ccJTd9x3.s:2999   .debug_str:0000000000000064 .LASF63
     /tmp/ccJTd9x3.s:3097   .debug_str:0000000000000303 .LASF64
     /tmp/ccJTd9x3.s:3233   .debug_str:0000000000000738 .LASF66
     /tmp/ccJTd9x3.s:3027   .debug_str:0000000000000100 .LASF68
     /tmp/ccJTd9x3.s:3279   .debug_str:000000000000097c .LASF118
     /tmp/ccJTd9x3.s:3119   .debug_str:00000000000003b2 .LASF120
     /tmp/ccJTd9x3.s:3113   .debug_str:0000000000000393 .LASF70
     /tmp/ccJTd9x3.s:3133   .debug_str:000000000000042a .LASF158
     /tmp/ccJTd9x3.s:3061   .debug_str:0000000000000202 .LASF71
     /tmp/ccJTd9x3.s:3139   .debug_str:0000000000000463 .LASF72
     /tmp/ccJTd9x3.s:3107   .debug_str:000000000000037e .LASF73
     /tmp/ccJTd9x3.s:3169   .debug_str:0000000000000524 .LASF75
     /tmp/ccJTd9x3.s:3141   .debug_str:0000000000000468 .LASF80
     /tmp/ccJTd9x3.s:3153   .debug_str:00000000000004b6 .LASF159
     /tmp/ccJTd9x3.s:3257   .debug_str:00000000000008a8 .LASF160
     /tmp/ccJTd9x3.s:3131   .debug_str:0000000000000421 .LASF74
     /tmp/ccJTd9x3.s:3303   .debug_str:0000000000000a3d .LASF76
     /tmp/ccJTd9x3.s:3093   .debug_str:00000000000002ed .LASF77
     /tmp/ccJTd9x3.s:3171   .debug_str:000000000000053b .LASF78
     /tmp/ccJTd9x3.s:3147   .debug_str:000000000000049d .LASF79
     /tmp/ccJTd9x3.s:3185   .debug_str:0000000000000598 .LASF81
     /tmp/ccJTd9x3.s:3031   .debug_str:0000000000000122 .LASF82
     /tmp/ccJTd9x3.s:3087   .debug_str:00000000000002c1 .LASF83
     /tmp/ccJTd9x3.s:3173   .debug_str:000000000000055b .LASF84
     /tmp/ccJTd9x3.s:3219   .debug_str:00000000000006ab .LASF85
     /tmp/ccJTd9x3.s:3123   .debug_str:00000000000003df .LASF86
     /tmp/ccJTd9x3.s:3105   .debug_str:0000000000000360 .LASF87
     /tmp/ccJTd9x3.s:3007   .debug_str:0000000000000085 .LASF88
     /tmp/ccJTd9x3.s:2993   .debug_str:000000000000004c .LASF161
     /tmp/ccJTd9x3.s:3305   .debug_str:0000000000000a5e .LASF89
     /tmp/ccJTd9x3.s:3193   .debug_str:00000000000005e6 .LASF90
     /tmp/ccJTd9x3.s:3191   .debug_str:00000000000005db .LASF91
     /tmp/ccJTd9x3.s:3059   .debug_str:00000000000001e7 .LASF92
     /tmp/ccJTd9x3.s:3145   .debug_str:0000000000000491 .LASF93
     /tmp/ccJTd9x3.s:3069   .debug_str:0000000000000226 .LASF94
     /tmp/ccJTd9x3.s:3053   .debug_str:00000000000001b0 .LASF95
     /tmp/ccJTd9x3.s:3287   .debug_str:00000000000009c7 .LASF96
     /tmp/ccJTd9x3.s:3209   .debug_str:000000000000065f .LASF162
     /tmp/ccJTd9x3.s:3149   .debug_str:00000000000004a9 .LASF97
     /tmp/ccJTd9x3.s:3249   .debug_str:00000000000007af .LASF98
     /tmp/ccJTd9x3.s:3071   .debug_str:0000000000000241 .LASF163
     /tmp/ccJTd9x3.s:3203   .debug_str:0000000000000639 .LASF99
     /tmp/ccJTd9x3.s:3267   .debug_str:00000000000008f9 .LASF100
     /tmp/ccJTd9x3.s:2989   .debug_str:0000000000000039 .LASF101
     /tmp/ccJTd9x3.s:3273   .debug_str:000000000000093d .LASF102
     /tmp/ccJTd9x3.s:3293   .debug_str:0000000000000a03 .LASF103
     /tmp/ccJTd9x3.s:3127   .debug_str:00000000000003f6 .LASF104
GAS LISTING /tmp/ccJTd9x3.s 			page 21


     /tmp/ccJTd9x3.s:3015   .debug_str:00000000000000ae .LASF105
     /tmp/ccJTd9x3.s:3051   .debug_str:0000000000000199 .LASF106
     /tmp/ccJTd9x3.s:2991   .debug_str:0000000000000042 .LASF107
     /tmp/ccJTd9x3.s:3269   .debug_str:0000000000000913 .LASF108
     /tmp/ccJTd9x3.s:3277   .debug_str:0000000000000964 .LASF109
     /tmp/ccJTd9x3.s:3023   .debug_str:00000000000000e7 .LASF110
     /tmp/ccJTd9x3.s:3297   .debug_str:0000000000000a25 .LASF111
     /tmp/ccJTd9x3.s:3043   .debug_str:0000000000000169 .LASF112
     /tmp/ccJTd9x3.s:3117   .debug_str:00000000000003aa .LASF113
     /tmp/ccJTd9x3.s:3001   .debug_str:000000000000006e .LASF114
     /tmp/ccJTd9x3.s:3111   .debug_str:000000000000038a .LASF115
     /tmp/ccJTd9x3.s:3135   .debug_str:000000000000042f .LASF116
     /tmp/ccJTd9x3.s:2979   .debug_str:0000000000000009 .LASF117
     /tmp/ccJTd9x3.s:3125   .debug_str:00000000000003e8 .LASF119
     /tmp/ccJTd9x3.s:3099   .debug_str:0000000000000319 .LASF121
     /tmp/ccJTd9x3.s:3047   .debug_str:0000000000000184 .LASF164
     /tmp/ccJTd9x3.s:3137   .debug_str:0000000000000437 .LASF165
     /tmp/ccJTd9x3.s:3165   .debug_str:0000000000000501 .LASF122
     /tmp/ccJTd9x3.s:3247   .debug_str:0000000000000798 .LASF123
     /tmp/ccJTd9x3.s:2977   .debug_str:0000000000000000 .LASF124
     /tmp/ccJTd9x3.s:2997   .debug_str:000000000000005f .LASF125
     /tmp/ccJTd9x3.s:3195   .debug_str:00000000000005f6 .LASF126
     /tmp/ccJTd9x3.s:3289   .debug_str:00000000000009eb .LASF127
     /tmp/ccJTd9x3.s:3245   .debug_str:000000000000078b .LASF128
     /tmp/ccJTd9x3.s:3021   .debug_str:00000000000000d7 .LASF129
     /tmp/ccJTd9x3.s:3225   .debug_str:00000000000006eb .LASF130
     /tmp/ccJTd9x3.s:3077   .debug_str:0000000000000272 .LASF131
     /tmp/ccJTd9x3.s:3211   .debug_str:0000000000000664 .LASF132
     /tmp/ccJTd9x3.s:3049   .debug_str:0000000000000192 .LASF133
     /tmp/ccJTd9x3.s:3013   .debug_str:000000000000009c .LASF134
     /tmp/ccJTd9x3.s:3281   .debug_str:0000000000000991 .LASF135
     /tmp/ccJTd9x3.s:3271   .debug_str:000000000000092c .LASF136
     /tmp/ccJTd9x3.s:3029   .debug_str:000000000000011c .LASF137
     /tmp/ccJTd9x3.s:3263   .debug_str:00000000000008e0 .LASF138
     /tmp/ccJTd9x3.s:3157   .debug_str:00000000000004cc .LASF139
     /tmp/ccJTd9x3.s:3197   .debug_str:00000000000005fc .LASF140
     /tmp/ccJTd9x3.s:3261   .debug_str:00000000000008d2 .LASF141
     /tmp/ccJTd9x3.s:3167   .debug_str:000000000000050a .LASF142
     /tmp/ccJTd9x3.s:2995   .debug_str:0000000000000054 .LASF143
     /tmp/ccJTd9x3.s:46     .text:0000000000000020 .LFB41
     /tmp/ccJTd9x3.s:460    .text:00000000000001b4 .LFE41
     /tmp/ccJTd9x3.s:2987   .debug_str:0000000000000032 .LASF144
     /tmp/ccJTd9x3.s:2738   .debug_loc:0000000000000000 .LLST0
     /tmp/ccJTd9x3.s:2951   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccJTd9x3.s:3175   .debug_str:0000000000000566 .LASF145
     /tmp/ccJTd9x3.s:2759   .debug_loc:000000000000005e .LLST1
     /tmp/ccJTd9x3.s:3207   .debug_str:0000000000000657 .LASF146
     /tmp/ccJTd9x3.s:2774   .debug_loc:00000000000000a7 .LLST2
     /tmp/ccJTd9x3.s:3235   .debug_str:0000000000000747 .LASF147
     /tmp/ccJTd9x3.s:2789   .debug_loc:00000000000000f0 .LLST3
     /tmp/ccJTd9x3.s:2802   .debug_loc:0000000000000128 .LLST4
     /tmp/ccJTd9x3.s:3241   .debug_str:0000000000000771 .LASF148
     /tmp/ccJTd9x3.s:2860   .debug_loc:0000000000000223 .LLST5
     /tmp/ccJTd9x3.s:3307   .debug_str:0000000000000a67 .LASF149
     /tmp/ccJTd9x3.s:2871   .debug_loc:0000000000000259 .LLST6
     /tmp/ccJTd9x3.s:3155   .debug_str:00000000000004c0 .LASF150
     /tmp/ccJTd9x3.s:2878   .debug_loc:000000000000027c .LLST7
GAS LISTING /tmp/ccJTd9x3.s 			page 22


     /tmp/ccJTd9x3.s:3089   .debug_str:00000000000002e0 .LASF151
     /tmp/ccJTd9x3.s:2885   .debug_loc:000000000000029f .LLST8
     /tmp/ccJTd9x3.s:3033   .debug_str:000000000000012c .LASF152
     /tmp/ccJTd9x3.s:2892   .debug_loc:00000000000002c2 .LLST9
     /tmp/ccJTd9x3.s:2899   .debug_loc:00000000000002e5 .LLST10
     /tmp/ccJTd9x3.s:2910   .debug_loc:000000000000031b .LLST11
     /tmp/ccJTd9x3.s:2917   .debug_loc:000000000000033e .LLST12
     /tmp/ccJTd9x3.s:242    .text:00000000000000ec .LVL14
     /tmp/ccJTd9x3.s:257    .text:0000000000000104 .LVL16
     /tmp/ccJTd9x3.s:266    .text:0000000000000110 .LVL18
     /tmp/ccJTd9x3.s:296    .text:000000000000012c .LVL21
     /tmp/ccJTd9x3.s:319    .text:0000000000000148 .LVL24
     /tmp/ccJTd9x3.s:337    .text:0000000000000158 .LVL27
     /tmp/ccJTd9x3.s:355    .text:0000000000000168 .LVL30
     /tmp/ccJTd9x3.s:102    .text:0000000000000074 .LBB25
     /tmp/ccJTd9x3.s:118    .text:0000000000000080 .LBE25
     /tmp/ccJTd9x3.s:123    .text:0000000000000084 .LBB27
     /tmp/ccJTd9x3.s:139    .text:0000000000000090 .LBE27
     /tmp/ccJTd9x3.s:374    .text:0000000000000174 .LBB33
     /tmp/ccJTd9x3.s:385    .text:0000000000000178 .LBE33
     /tmp/ccJTd9x3.s:2924   .debug_loc:0000000000000361 .LLST13
     /tmp/ccJTd9x3.s:387    .text:0000000000000178 .LBB35
     /tmp/ccJTd9x3.s:399    .text:000000000000017c .LBE35
     /tmp/ccJTd9x3.s:2931   .debug_loc:0000000000000384 .LLST14
     /tmp/ccJTd9x3.s:64     .text:000000000000003c .LBB20
     /tmp/ccJTd9x3.s:81     .text:0000000000000048 .LBE20
     /tmp/ccJTd9x3.s:442    .text:00000000000001a8 .LBB40
     /tmp/ccJTd9x3.s:456    .text:00000000000001b4 .LBE40
     /tmp/ccJTd9x3.s:201    .text:00000000000000d4 .LVL9
     /tmp/ccJTd9x3.s:10     .text:0000000000000000 .LFB40
     /tmp/ccJTd9x3.s:40     .text:0000000000000020 .LFE40
     /tmp/ccJTd9x3.s:3041   .debug_str:0000000000000164 .LASF153
     /tmp/ccJTd9x3.s:3063   .debug_str:0000000000000207 .LASF166
     /tmp/ccJTd9x3.s:79     .text:0000000000000048 .LVL0
     /tmp/ccJTd9x3.s:93     .text:000000000000006c .LVL1
     /tmp/ccJTd9x3.s:111    .text:0000000000000078 .LVL2
     /tmp/ccJTd9x3.s:187    .text:00000000000000bc .LVL8
     /tmp/ccJTd9x3.s:436    .text:00000000000001a8 .LVL38
     /tmp/ccJTd9x3.s:447    .text:00000000000001ac .LVL39
     /tmp/ccJTd9x3.s:121    .text:0000000000000084 .LVL3
     /tmp/ccJTd9x3.s:207    .text:00000000000000d8 .LVL10
     /tmp/ccJTd9x3.s:395    .text:000000000000017c .LVL35
     /tmp/ccJTd9x3.s:419    .text:0000000000000198 .LVL36
     /tmp/ccJTd9x3.s:137    .text:0000000000000090 .LVL4
     /tmp/ccJTd9x3.s:148    .text:0000000000000094 .LVL5
     /tmp/ccJTd9x3.s:152    .text:0000000000000098 .LVL6
     /tmp/ccJTd9x3.s:156    .text:00000000000000a4 .LVL7
     /tmp/ccJTd9x3.s:260    .text:0000000000000108 .LVL17
     /tmp/ccJTd9x3.s:322    .text:000000000000014c .LVL25
     /tmp/ccJTd9x3.s:340    .text:000000000000015c .LVL28
     /tmp/ccJTd9x3.s:358    .text:000000000000016c .LVL31
     /tmp/ccJTd9x3.s:363    .text:0000000000000170 .LVL32
     /tmp/ccJTd9x3.s:284    .text:000000000000011c .LVL19
     /tmp/ccJTd9x3.s:304    .text:000000000000013c .LVL22
     /tmp/ccJTd9x3.s:430    .text:00000000000001a0 .LVL37
     /tmp/ccJTd9x3.s:290    .text:0000000000000120 .LVL20
     /tmp/ccJTd9x3.s:314    .text:0000000000000140 .LVL23
GAS LISTING /tmp/ccJTd9x3.s 			page 23


     /tmp/ccJTd9x3.s:332    .text:0000000000000150 .LVL26
     /tmp/ccJTd9x3.s:350    .text:0000000000000160 .LVL29
     /tmp/ccJTd9x3.s:225    .text:00000000000000dc .LVL11
     /tmp/ccJTd9x3.s:250    .text:00000000000000fc .LVL15
     /tmp/ccJTd9x3.s:231    .text:00000000000000e0 .LVL12
     /tmp/ccJTd9x3.s:237    .text:00000000000000e4 .LVL13
     /tmp/ccJTd9x3.s:372    .text:0000000000000174 .LVL33
     /tmp/ccJTd9x3.s:382    .text:0000000000000178 .LVL34
     /tmp/ccJTd9x3.s:470    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccJTd9x3.s:100    .text:0000000000000074 .LBB24
     /tmp/ccJTd9x3.s:189    .text:00000000000000bc .LBE24
     /tmp/ccJTd9x3.s:211    .text:00000000000000d8 .LBB38
     /tmp/ccJTd9x3.s:400    .text:000000000000017c .LBE38
     /tmp/ccJTd9x3.s:424    .text:0000000000000198 .LBB39
     /tmp/ccJTd9x3.s:439    .text:00000000000001a8 .LBE39
     /tmp/ccJTd9x3.s:212    .text:00000000000000d8 .LBB29
     /tmp/ccJTd9x3.s:268    .text:0000000000000110 .LBE29
     /tmp/ccJTd9x3.s:271    .text:0000000000000114 .LBB32
     /tmp/ccJTd9x3.s:360    .text:000000000000016c .LBE32
     /tmp/ccJTd9x3.s:425    .text:0000000000000198 .LBB37
     /tmp/ccJTd9x3.s:438    .text:00000000000001a8 .LBE37
     /tmp/ccJTd9x3.s:215    .text:00000000000000d8 .LBB30
     /tmp/ccJTd9x3.s:252    .text:00000000000000fc .LBE30
     /tmp/ccJTd9x3.s:426    .text:0000000000000198 .LBB31
     /tmp/ccJTd9x3.s:432    .text:00000000000001a0 .LBE31

UNDEFINED SYMBOLS
console_handler
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread10exitThreadEv
_ZN7_thread8dispatchEv
_ZN4_sem15createSemaphoreEj
_ZN4_sem5closeEv
_ZN4_sem4waitEv
_ZN4_sem6signalEv
