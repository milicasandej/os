GAS LISTING /tmp/cc3NbQc7.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** 
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** #include "../h/riscv.hpp"
   4:src/riscv.cpp **** #include "../h/_thread.hpp"
   5:src/riscv.cpp **** #include "../lib/console.h"
   6:src/riscv.cpp **** #include "../h/memory.hpp"
   7:src/riscv.cpp **** #include "../h/_sem.hpp"
   8:src/riscv.cpp **** #include "../test/printing.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** using namespace Num;
  11:src/riscv.cpp **** bool Riscv::userMode = false;
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** void Riscv::popSppSpie()
  15:src/riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     if (userMode) mc_sstatus(SSTATUS_SPP);
  20              		.loc 1 16 5
  21 000c 97070000 		lbu	a5,.LANCHOR0
  21      83C70700 
  22 0014 63800702 		beqz	a5,.L2
  23              		.loc 1 16 19
  24              	.LVL0:
  25              	.LBB26:
  26              	.LBB27:
  27              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** 
   3:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** #include "../lib/hw.h"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #define READ_REG(var, regname) __asm__ volatile("mv %0, " regname: "=r"(var))
   9:src/../h/riscv.hpp **** #define WRITE_REG(regname, val) __asm__ volatile("mv " regname ", %0" :: "r"(val))
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** namespace Num{
  12:src/../h/riscv.hpp ****     constexpr uint8 SCALL_USER_MODE = 0x00;
  13:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_ALLOC = 0x01;
  14:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_FREE = 0x02;
GAS LISTING /tmp/cc3NbQc7.s 			page 2


  15:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_FREE_SPACE = 0x03;
  16:src/../h/riscv.hpp ****     constexpr uint8 SCALL_MEM_GET_LARGEST_FREE_BLOCK = 0x04;
  17:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_CREATE= 0x11;
  18:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_EXIT = 0x12;
  19:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_DISPATCH = 0x13;
  20:src/../h/riscv.hpp ****     constexpr uint8 SCALL_THREAD_JOIN = 0x14;
  21:src/../h/riscv.hpp ****     constexpr uint8 SCALL_GET_ID = 0x15;
  22:src/../h/riscv.hpp ****     constexpr uint8 SCALL_JOIN_ALL = 0x16;
  23:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_OPEN = 0x21;
  24:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_CLOSE = 0x22;
  25:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_WAIT = 0x23;
  26:src/../h/riscv.hpp ****     constexpr uint8 SCALL_SEM_SIGNAL = 0x24;
  27:src/../h/riscv.hpp ****     constexpr uint8 SCALL_GETC = 0x41;
  28:src/../h/riscv.hpp ****     constexpr uint8 SCALL_PUTC = 0x42;
  29:src/../h/riscv.hpp **** }
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp **** class Riscv
  33:src/../h/riscv.hpp **** {
  34:src/../h/riscv.hpp **** public:
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  37:src/../h/riscv.hpp ****     static void popSppSpie();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register scause
  40:src/../h/riscv.hpp ****     static uint64 r_scause();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register scause
  43:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register sepc
  46:src/../h/riscv.hpp ****     static uint64 r_sepc();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register sepc
  49:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register stvec
  52:src/../h/riscv.hpp ****     static uint64 r_stvec();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register stvec
  55:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // read register stval
  58:src/../h/riscv.hpp ****     static uint64 r_stval();
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // write register stval
  61:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     enum BitMaskSip
  64:src/../h/riscv.hpp ****     {
  65:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  66:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  67:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  68:src/../h/riscv.hpp ****     };
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask set register sip
  71:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
GAS LISTING /tmp/cc3NbQc7.s 			page 3


  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // mask clear register sip
  74:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // read register sip
  77:src/../h/riscv.hpp ****     static uint64 r_sip();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // write register sip
  80:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     enum BitMaskSstatus
  83:src/../h/riscv.hpp ****     {
  84:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  85:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  86:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  87:src/../h/riscv.hpp ****     };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // mask set register sstatus
  90:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // mask clear register sstatus
  93:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // read register sstatus
  96:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     // write register sstatus
  99:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp ****     // supervisor trap
 102:src/../h/riscv.hpp ****     static void supervisorTrap();
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     // set mode
 105:src/../h/riscv.hpp ****     static void setUserMode(bool b) {userMode = b;}
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** private:
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     // supervisor trap handler
 110:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 111:src/../h/riscv.hpp ****     static bool userMode;
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** };
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile scause;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 119:src/../h/riscv.hpp ****     return scause;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 128:src/../h/riscv.hpp **** {
GAS LISTING /tmp/cc3NbQc7.s 			page 4


 129:src/../h/riscv.hpp ****     uint64 volatile sepc;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 131:src/../h/riscv.hpp ****     return sepc;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     uint64 volatile stvec;
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 143:src/../h/riscv.hpp ****     return stvec;
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     uint64 volatile stval;
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 155:src/../h/riscv.hpp ****     return stval;
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     uint64 volatile sip;
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 177:src/../h/riscv.hpp ****     return sip;
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 181:src/../h/riscv.hpp **** {
 182:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 183:src/../h/riscv.hpp **** }
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
GAS LISTING /tmp/cc3NbQc7.s 			page 5


 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 188:src/../h/riscv.hpp **** }
 189:src/../h/riscv.hpp **** 
 190:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 191:src/../h/riscv.hpp **** {
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  28              		.loc 2 192 5
  29              		.loc 2 192 68 is_stmt 0
  30 0018 93070010 		li	a5,256
  31              	#APP
  32              	# 192 "src/../h/riscv.hpp" 1
 193              	}
  33              		csrc sstatus, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.L3:
  38              	.LBE27:
  39              	.LBE26:
  17:src/riscv.cpp ****     else ms_sstatus(SSTATUS_SPP);
  18:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  40              		.loc 1 18 5 is_stmt 1
  41              		.loc 1 18 38 is_stmt 0
  42              	#APP
  43              	# 18 "src/riscv.cpp" 1
  19              	    __asm__ volatile("sret");
  44              		csrw sepc, ra
  45              	# 0 "" 2
  46              		.loc 1 19 5 is_stmt 1
  47              		.loc 1 19 29 is_stmt 0
  48              	# 19 "src/riscv.cpp" 1
  20              	
  21:src/riscv.cpp **** }
  49              		sret
  50              	# 0 "" 2
  51              		.loc 1 21 1
  52              	#NO_APP
  53 0028 03348100 		ld	s0,8(sp)
  54              		.cfi_remember_state
  55              		.cfi_restore 8
  56              		.cfi_def_cfa 2, 16
  57 002c 13010101 		addi	sp,sp,16
  58              		.cfi_def_cfa_offset 0
  59 0030 67800000 		jr	ra
  60              	.L2:
  61              		.cfi_restore_state
  17:src/riscv.cpp ****     else ms_sstatus(SSTATUS_SPP);
  62              		.loc 1 17 10 is_stmt 1
  63              	.LVL2:
  64              	.LBB28:
  65              	.LBB29:
 187:src/../h/riscv.hpp **** }
  66              		.loc 2 187 5
 187:src/../h/riscv.hpp **** }
  67              		.loc 2 187 68 is_stmt 0
  68 0034 93070010 		li	a5,256
GAS LISTING /tmp/cc3NbQc7.s 			page 6


  69              	#APP
  70              	# 187 "src/../h/riscv.hpp" 1
 188:src/../h/riscv.hpp **** 
  71              		csrs sstatus, a5
  72              	# 0 "" 2
  73              		.loc 2 188 1
  74              	#NO_APP
  75 003c 6FF05FFE 		j	.L3
  76              	.LBE29:
  77              	.LBE28:
  78              		.cfi_endproc
  79              	.LFE42:
  81              		.section	.rodata.str1.8,"aMS",@progbits,1
  82              		.align	3
  83              	.LC0:
  84 0000 53636175 		.string	"Scause: "
  84      73653A20 
  84      00
  85 0009 00000000 		.align	3
  85      000000
  86              	.LC1:
  87 0010 0A00     		.string	"\n"
  88 0012 00000000 		.align	3
  88      0000
  89              	.LC2:
  90 0018 4B6F7261 		.string	"Koraci ko laki oblaci, skoci da te zemlja odbaci!\n"
  90      6369206B 
  90      6F206C61 
  90      6B69206F 
  90      626C6163 
  91              		.text
  92              		.align	2
  93              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  95              	_ZN5Riscv20handleSupervisorTrapEv:
  96              	.LFB43:
  22:src/riscv.cpp **** 
  23:src/riscv.cpp **** 
  24:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  25:src/riscv.cpp **** {
  97              		.loc 1 25 1 is_stmt 1
  98              		.cfi_startproc
  99 0040 130101FB 		addi	sp,sp,-80
 100              		.cfi_def_cfa_offset 80
 101 0044 23341104 		sd	ra,72(sp)
 102 0048 23308104 		sd	s0,64(sp)
 103 004c 233C9102 		sd	s1,56(sp)
 104              		.cfi_offset 1, -8
 105              		.cfi_offset 8, -16
 106              		.cfi_offset 9, -24
 107 0050 13040105 		addi	s0,sp,80
 108              		.cfi_def_cfa 8, 0
  26:src/riscv.cpp ****     uint64 scause = r_scause();
 109              		.loc 1 26 5
 110              	.LBB30:
 111              	.LBB31:
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 112              		.loc 2 117 5
GAS LISTING /tmp/cc3NbQc7.s 			page 7


 118:src/../h/riscv.hpp ****     return scause;
 113              		.loc 2 118 5
 118:src/../h/riscv.hpp ****     return scause;
 114              		.loc 2 118 72 is_stmt 0
 115              	#APP
 116              	# 118 "src/../h/riscv.hpp" 1
 117              		csrr a5, scause
 118              	# 0 "" 2
 119              	#NO_APP
 120 0058 2330F4FC 		sd	a5,-64(s0)
 119:src/../h/riscv.hpp **** }
 121              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 122              		.loc 2 119 12 is_stmt 0
 123 005c 833404FC 		ld	s1,-64(s0)
 124              	.LVL3:
 125              	.LBE31:
 126              	.LBE30:
  27:src/riscv.cpp ****     switch((uint64)scause){
 127              		.loc 1 27 5 is_stmt 1
 128              	.LBB32:
 129 0060 9307F0FF 		li	a5,-1
 130 0064 9397F703 		slli	a5,a5,63
 131 0068 93871700 		addi	a5,a5,1
 132 006c 638AF41C 		beq	s1,a5,.L6
 133 0070 9307F0FF 		li	a5,-1
 134 0074 9397F703 		slli	a5,a5,63
 135 0078 93871700 		addi	a5,a5,1
 136 007c 63EE9704 		bgtu	s1,a5,.L7
 137 0080 938784FF 		addi	a5,s1,-8
 138 0084 13071000 		li	a4,1
 139 0088 636AF71C 		bgtu	a5,a4,.L8
 140              	.LBB33:
  28:src/riscv.cpp ****         case 0x0000000000000008UL:
 141              		.loc 1 28 9
  29:src/riscv.cpp ****         case 0x0000000000000009UL: {
 142              		.loc 1 29 9
 143              		.loc 1 29 36
 144              	.LBB34:
  30:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 145              		.loc 1 30 13
 146              	.LBB35:
 147              	.LBB36:
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 148              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return sepc;
 149              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return sepc;
 150              		.loc 2 130 64 is_stmt 0
 151              	#APP
 152              	# 130 "src/../h/riscv.hpp" 1
 153              		csrr a5, sepc
 154              	# 0 "" 2
 155              	#NO_APP
 156 0090 2338F4FC 		sd	a5,-48(s0)
 131:src/../h/riscv.hpp **** }
 157              		.loc 2 131 5 is_stmt 1
GAS LISTING /tmp/cc3NbQc7.s 			page 8


 131:src/../h/riscv.hpp **** }
 158              		.loc 2 131 12 is_stmt 0
 159 0094 833704FD 		ld	a5,-48(s0)
 160              	.LBE36:
 161              	.LBE35:
 162              		.loc 1 30 45
 163 0098 93874700 		addi	a5,a5,4
 164              		.loc 1 30 47
 165 009c 2338F4FA 		sd	a5,-80(s0)
  31:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 166              		.loc 1 31 13 is_stmt 1
 167              	.LBB37:
 168              	.LBB38:
 194:src/../h/riscv.hpp **** 
 195:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 196:src/../h/riscv.hpp **** {
 197:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 169              		.loc 2 197 5
 198:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 170              		.loc 2 198 5
 171              		.loc 2 198 76 is_stmt 0
 172              	#APP
 173              	# 198 "src/../h/riscv.hpp" 1
 199              	    return sstatus;
 174              		csrr a5, sstatus
 175              	# 0 "" 2
 176              	#NO_APP
 177 00a4 2334F4FC 		sd	a5,-56(s0)
 178              		.loc 2 199 5 is_stmt 1
 179              		.loc 2 199 12 is_stmt 0
 180 00a8 833784FC 		ld	a5,-56(s0)
 181              	.LBE38:
 182              	.LBE37:
 183              		.loc 1 31 49
 184 00ac 233CF4FA 		sd	a5,-72(s0)
  32:src/riscv.cpp ****             uint64 scallnum;
 185              		.loc 1 32 13 is_stmt 1
  33:src/riscv.cpp ****             uint64 ret = 0;
 186              		.loc 1 33 13
 187              	.LVL4:
  34:src/riscv.cpp ****             READ_REG(scallnum, "a7");
 188              		.loc 1 34 13
 189              		.loc 1 34 37 is_stmt 0
 190              	#APP
 191              	# 34 "src/riscv.cpp" 1
  35              	            switch (scallnum) {
 192              		mv a5, a7
 193              	# 0 "" 2
 194              	.LVL5:
 195              		.loc 1 35 13 is_stmt 1
 196              	#NO_APP
 197 00b4 13072004 		li	a4,66
 198 00b8 636EF710 		bgtu	a5,a4,.L11
 199 00bc 93972700 		slli	a5,a5,2
 200              	.LVL6:
 201 00c0 17070000 		lla	a4,.L13
 201      13070700 
GAS LISTING /tmp/cc3NbQc7.s 			page 9


 202 00c8 B387E700 		add	a5,a5,a4
 203 00cc 83A70700 		lw	a5,0(a5)
 204 00d0 B387E700 		add	a5,a5,a4
 205 00d4 67800700 		jr	a5
 206              		.section	.rodata
 207              		.align	2
 208              		.align	2
 209              	.L13:
 210 0000 00000000 		.word	.L11-.L13
 211 0004 00000000 		.word	.L28-.L13
 212 0008 00000000 		.word	.L27-.L13
 213 000c 00000000 		.word	.L26-.L13
 214 0010 00000000 		.word	.L25-.L13
 215 0014 00000000 		.word	.L11-.L13
 216 0018 00000000 		.word	.L11-.L13
 217 001c 00000000 		.word	.L11-.L13
 218 0020 00000000 		.word	.L11-.L13
 219 0024 00000000 		.word	.L11-.L13
 220 0028 00000000 		.word	.L11-.L13
 221 002c 00000000 		.word	.L11-.L13
 222 0030 00000000 		.word	.L11-.L13
 223 0034 00000000 		.word	.L11-.L13
 224 0038 00000000 		.word	.L11-.L13
 225 003c 00000000 		.word	.L11-.L13
 226 0040 00000000 		.word	.L11-.L13
 227 0044 00000000 		.word	.L24-.L13
 228 0048 00000000 		.word	.L23-.L13
 229 004c 00000000 		.word	.L22-.L13
 230 0050 00000000 		.word	.L21-.L13
 231 0054 00000000 		.word	.L20-.L13
 232 0058 00000000 		.word	.L19-.L13
 233 005c 00000000 		.word	.L11-.L13
 234 0060 00000000 		.word	.L11-.L13
 235 0064 00000000 		.word	.L11-.L13
 236 0068 00000000 		.word	.L11-.L13
 237 006c 00000000 		.word	.L11-.L13
 238 0070 00000000 		.word	.L11-.L13
 239 0074 00000000 		.word	.L11-.L13
 240 0078 00000000 		.word	.L11-.L13
 241 007c 00000000 		.word	.L11-.L13
 242 0080 00000000 		.word	.L11-.L13
 243 0084 00000000 		.word	.L18-.L13
 244 0088 00000000 		.word	.L17-.L13
 245 008c 00000000 		.word	.L16-.L13
 246 0090 00000000 		.word	.L15-.L13
 247 0094 00000000 		.word	.L11-.L13
 248 0098 00000000 		.word	.L11-.L13
 249 009c 00000000 		.word	.L11-.L13
 250 00a0 00000000 		.word	.L11-.L13
 251 00a4 00000000 		.word	.L11-.L13
 252 00a8 00000000 		.word	.L11-.L13
 253 00ac 00000000 		.word	.L11-.L13
 254 00b0 00000000 		.word	.L11-.L13
 255 00b4 00000000 		.word	.L11-.L13
 256 00b8 00000000 		.word	.L11-.L13
 257 00bc 00000000 		.word	.L11-.L13
 258 00c0 00000000 		.word	.L11-.L13
GAS LISTING /tmp/cc3NbQc7.s 			page 10


 259 00c4 00000000 		.word	.L11-.L13
 260 00c8 00000000 		.word	.L11-.L13
 261 00cc 00000000 		.word	.L11-.L13
 262 00d0 00000000 		.word	.L11-.L13
 263 00d4 00000000 		.word	.L11-.L13
 264 00d8 00000000 		.word	.L11-.L13
 265 00dc 00000000 		.word	.L11-.L13
 266 00e0 00000000 		.word	.L11-.L13
 267 00e4 00000000 		.word	.L11-.L13
 268 00e8 00000000 		.word	.L11-.L13
 269 00ec 00000000 		.word	.L11-.L13
 270 00f0 00000000 		.word	.L11-.L13
 271 00f4 00000000 		.word	.L11-.L13
 272 00f8 00000000 		.word	.L11-.L13
 273 00fc 00000000 		.word	.L11-.L13
 274 0100 00000000 		.word	.L11-.L13
 275 0104 00000000 		.word	.L14-.L13
 276 0108 00000000 		.word	.L12-.L13
 277              		.text
 278              	.LVL7:
 279              	.L7:
 280              	.LBE34:
 281              	.LBE33:
  27:src/riscv.cpp ****         case 0x0000000000000008UL:
 282              		.loc 1 27 5 is_stmt 0
 283 00d8 9307F0FF 		li	a5,-1
 284 00dc 9397F703 		slli	a5,a5,63
 285 00e0 93879700 		addi	a5,a5,9
 286 00e4 639CF416 		bne	s1,a5,.L8
 287              	.LBB51:
  36:src/riscv.cpp ****                 case SCALL_MEM_ALLOC:
  37:src/riscv.cpp ****                     size_t size;
  38:src/riscv.cpp ****                     READ_REG(size, "a0");
  39:src/riscv.cpp ****                     memory::allocateMemory(size);
  40:src/riscv.cpp ****                     break;
  41:src/riscv.cpp ****                 case SCALL_MEM_FREE:
  42:src/riscv.cpp ****                     void* ptr;
  43:src/riscv.cpp ****                     READ_REG(ptr, "a0");
  44:src/riscv.cpp ****                     memory::freeMemory(ptr);
  45:src/riscv.cpp ****                     break;
  46:src/riscv.cpp ****                 case SCALL_MEM_GET_FREE_SPACE:
  47:src/riscv.cpp ****                     memory::getFreeSpace();
  48:src/riscv.cpp ****                     break;
  49:src/riscv.cpp ****                 case SCALL_MEM_GET_LARGEST_FREE_BLOCK:
  50:src/riscv.cpp ****                     memory::getLargestFreeBlock();
  51:src/riscv.cpp ****                     break;
  52:src/riscv.cpp ****                 case SCALL_THREAD_CREATE: {
  53:src/riscv.cpp ****                     thread_t* handle;
  54:src/riscv.cpp ****                     _thread::Body body;
  55:src/riscv.cpp ****                     void* args;
  56:src/riscv.cpp ****                     READ_REG(handle, "a0");
  57:src/riscv.cpp ****                     READ_REG(body, "a1");
  58:src/riscv.cpp ****                     READ_REG(args, "a2");
  59:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
  60:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
  61:src/riscv.cpp ****                     else ret = -1;
  62:src/riscv.cpp ****                     WRITE_REG("a0", ret);
GAS LISTING /tmp/cc3NbQc7.s 			page 11


  63:src/riscv.cpp ****                     break;
  64:src/riscv.cpp ****                 }
  65:src/riscv.cpp ****                 case SCALL_THREAD_EXIT:
  66:src/riscv.cpp ****                     _thread::exitThread();
  67:src/riscv.cpp ****                     break;
  68:src/riscv.cpp ****                 case SCALL_THREAD_DISPATCH:
  69:src/riscv.cpp ****                     _thread::dispatch();
  70:src/riscv.cpp ****                     break;
  71:src/riscv.cpp ****                 case SCALL_THREAD_JOIN:
  72:src/riscv.cpp ****                     thread_t* handlejoin;
  73:src/riscv.cpp ****                     READ_REG(handlejoin, "a0");
  74:src/riscv.cpp ****                     _thread::join(handlejoin);
  75:src/riscv.cpp ****                     break;
  76:src/riscv.cpp ****                 case SCALL_GET_ID:
  77:src/riscv.cpp ****                     _thread::running->getThreadID();
  78:src/riscv.cpp ****                     break;
  79:src/riscv.cpp ****                 case SCALL_JOIN_ALL:
  80:src/riscv.cpp ****                     _thread::running->joinAll();
  81:src/riscv.cpp ****                 case SCALL_SEM_OPEN:
  82:src/riscv.cpp ****                     sem_t* handle;
  83:src/riscv.cpp ****                     uint32 init;
  84:src/riscv.cpp ****                     READ_REG(handle, "a0");
  85:src/riscv.cpp ****                     READ_REG(init, "a1");
  86:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
  87:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
  88:src/riscv.cpp ****                     else ret = -1;
  89:src/riscv.cpp ****                     WRITE_REG("a0", ret);
  90:src/riscv.cpp ****                     break;
  91:src/riscv.cpp ****                 case SCALL_SEM_CLOSE:
  92:src/riscv.cpp ****                     sem_t handleClose;
  93:src/riscv.cpp ****                     READ_REG(handleClose, "a0");
  94:src/riscv.cpp ****                     handleClose->close();
  95:src/riscv.cpp ****                     break;
  96:src/riscv.cpp ****                 case SCALL_SEM_WAIT:
  97:src/riscv.cpp ****                     sem_t idWait;
  98:src/riscv.cpp ****                     READ_REG(idWait, "a0");
  99:src/riscv.cpp ****                     idWait->wait();
 100:src/riscv.cpp ****                     break;
 101:src/riscv.cpp ****                 case SCALL_SEM_SIGNAL:
 102:src/riscv.cpp ****                     sem_t idSignal;
 103:src/riscv.cpp ****                     READ_REG(idSignal, "a0");
 104:src/riscv.cpp ****                     idSignal->signal();
 105:src/riscv.cpp ****                     break;
 106:src/riscv.cpp ****                 case SCALL_GETC:
 107:src/riscv.cpp ****                     __getc();
 108:src/riscv.cpp ****                     break;
 109:src/riscv.cpp ****                 case SCALL_PUTC:
 110:src/riscv.cpp ****                     char c;
 111:src/riscv.cpp ****                     READ_REG(c, "a0");
 112:src/riscv.cpp ****                     __putc(c);
 113:src/riscv.cpp ****                     break;
 114:src/riscv.cpp ****                 default:
 115:src/riscv.cpp ****                     break;
 116:src/riscv.cpp ****             }
 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****             w_sstatus(sstatus);
 119:src/riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/cc3NbQc7.s 			page 12


 120:src/riscv.cpp ****             break;
 121:src/riscv.cpp ****         }
 122:src/riscv.cpp ****         case 0x8000000000000001UL:
 123:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 124:src/riscv.cpp ****             break;
 125:src/riscv.cpp ****         case 0x8000000000000009UL:
 288              		.loc 1 125 9 is_stmt 1
 126:src/riscv.cpp ****             console_handler();
 289              		.loc 1 126 13
 290              		.loc 1 126 28 is_stmt 0
 291 00e8 97000000 		call	console_handler@plt
 291      E7800000 
 292              	.LVL8:
 127:src/riscv.cpp ****             break;
 293              		.loc 1 127 13 is_stmt 1
 294 00f0 6F008015 		j	.L5
 295              	.LVL9:
 296              	.L28:
 297              	.LBB46:
 298              	.LBB39:
  36:src/riscv.cpp ****                 case SCALL_MEM_ALLOC:
 299              		.loc 1 36 17
  37:src/riscv.cpp ****                     READ_REG(size, "a0");
 300              		.loc 1 37 21
  38:src/riscv.cpp ****                     memory::allocateMemory(size);
 301              		.loc 1 38 21
  38:src/riscv.cpp ****                     memory::allocateMemory(size);
 302              		.loc 1 38 41 is_stmt 0
 303              	#APP
 304              	# 38 "src/riscv.cpp" 1
 305              		mv a0, a0
 306              	# 0 "" 2
 307              	.LVL10:
  39:src/riscv.cpp ****                     break;
 308              		.loc 1 39 21 is_stmt 1
  39:src/riscv.cpp ****                     break;
 309              		.loc 1 39 43 is_stmt 0
 310              	#NO_APP
 311 00f8 97000000 		call	_ZN6memory14allocateMemoryEm@plt
 311      E7800000 
 312              	.LVL11:
  40:src/riscv.cpp ****                 case SCALL_MEM_FREE:
 313              		.loc 1 40 21 is_stmt 1
 314 0100 6F00400D 		j	.L11
 315              	.L27:
  41:src/riscv.cpp ****                     void* ptr;
 316              		.loc 1 41 17
  42:src/riscv.cpp ****                     READ_REG(ptr, "a0");
 317              		.loc 1 42 21
  43:src/riscv.cpp ****                     memory::freeMemory(ptr);
 318              		.loc 1 43 21
  43:src/riscv.cpp ****                     memory::freeMemory(ptr);
 319              		.loc 1 43 40 is_stmt 0
 320              	#APP
 321              	# 43 "src/riscv.cpp" 1
 322              		mv a0, a0
 323              	# 0 "" 2
GAS LISTING /tmp/cc3NbQc7.s 			page 13


 324              	.LVL12:
  44:src/riscv.cpp ****                     break;
 325              		.loc 1 44 21 is_stmt 1
  44:src/riscv.cpp ****                     break;
 326              		.loc 1 44 39 is_stmt 0
 327              	#NO_APP
 328 0108 97000000 		call	_ZN6memory10freeMemoryEPv@plt
 328      E7800000 
 329              	.LVL13:
  45:src/riscv.cpp ****                 case SCALL_MEM_GET_FREE_SPACE:
 330              		.loc 1 45 21 is_stmt 1
 331 0110 6F00400C 		j	.L11
 332              	.L26:
  46:src/riscv.cpp ****                     memory::getFreeSpace();
 333              		.loc 1 46 17
  47:src/riscv.cpp ****                     break;
 334              		.loc 1 47 21
  47:src/riscv.cpp ****                     break;
 335              		.loc 1 47 41 is_stmt 0
 336 0114 97000000 		call	_ZN6memory12getFreeSpaceEv@plt
 336      E7800000 
 337              	.LVL14:
  48:src/riscv.cpp ****                 case SCALL_MEM_GET_LARGEST_FREE_BLOCK:
 338              		.loc 1 48 21 is_stmt 1
 339 011c 6F00800B 		j	.L11
 340              	.L25:
  49:src/riscv.cpp ****                     memory::getLargestFreeBlock();
 341              		.loc 1 49 17
  50:src/riscv.cpp ****                     break;
 342              		.loc 1 50 21
  50:src/riscv.cpp ****                     break;
 343              		.loc 1 50 48 is_stmt 0
 344 0120 97000000 		call	_ZN6memory19getLargestFreeBlockEv@plt
 344      E7800000 
 345              	.LVL15:
  51:src/riscv.cpp ****                 case SCALL_THREAD_CREATE: {
 346              		.loc 1 51 21 is_stmt 1
 347 0128 6F00C00A 		j	.L11
 348              	.L24:
  52:src/riscv.cpp ****                     thread_t* handle;
 349              		.loc 1 52 17
  52:src/riscv.cpp ****                     thread_t* handle;
 350              		.loc 1 52 43
 351              	.LBB40:
  53:src/riscv.cpp ****                     _thread::Body body;
 352              		.loc 1 53 21
  54:src/riscv.cpp ****                     void* args;
 353              		.loc 1 54 21
  55:src/riscv.cpp ****                     READ_REG(handle, "a0");
 354              		.loc 1 55 21
  56:src/riscv.cpp ****                     READ_REG(body, "a1");
 355              		.loc 1 56 21
  56:src/riscv.cpp ****                     READ_REG(body, "a1");
 356              		.loc 1 56 43 is_stmt 0
 357              	#APP
 358              	# 56 "src/riscv.cpp" 1
 359              		mv s1, a0
GAS LISTING /tmp/cc3NbQc7.s 			page 14


 360              	# 0 "" 2
 361              	.LVL16:
  57:src/riscv.cpp ****                     READ_REG(args, "a2");
 362              		.loc 1 57 21 is_stmt 1
  57:src/riscv.cpp ****                     READ_REG(args, "a2");
 363              		.loc 1 57 41 is_stmt 0
 364              	# 57 "src/riscv.cpp" 1
 365              		mv a0, a1
 366              	# 0 "" 2
 367              	.LVL17:
  58:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
 368              		.loc 1 58 21 is_stmt 1
  58:src/riscv.cpp ****                     *handle = _thread::createThread(body, args);
 369              		.loc 1 58 41 is_stmt 0
 370              	# 58 "src/riscv.cpp" 1
 371              		mv a1, a2
 372              	# 0 "" 2
 373              	.LVL18:
  59:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 374              		.loc 1 59 21 is_stmt 1
  59:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 375              		.loc 1 59 52 is_stmt 0
 376              	#NO_APP
 377 0138 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 377      E7800000 
 378              	.LVL19:
  59:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 379              		.loc 1 59 29
 380 0140 23B0A400 		sd	a0,0(s1)
  60:src/riscv.cpp ****                     else ret = -1;
 381              		.loc 1 60 21 is_stmt 1
 382 0144 63080500 		beqz	a0,.L33
  60:src/riscv.cpp ****                     else ret = -1;
 383              		.loc 1 60 48 is_stmt 0
 384 0148 93070000 		li	a5,0
 385              	.L29:
 386              	.LVL20:
  62:src/riscv.cpp ****                     break;
 387              		.loc 1 62 21 is_stmt 1
  62:src/riscv.cpp ****                     break;
 388              		.loc 1 62 41 is_stmt 0
 389              	#APP
 390              	# 62 "src/riscv.cpp" 1
  63:src/riscv.cpp ****                 }
 391              		mv a0, a5
 392              	# 0 "" 2
 393              		.loc 1 63 21 is_stmt 1
 394              	#NO_APP
 395 0150 6F004008 		j	.L11
 396              	.LVL21:
 397              	.L33:
  61:src/riscv.cpp ****                     WRITE_REG("a0", ret);
 398              		.loc 1 61 30 is_stmt 0
 399 0154 9307F0FF 		li	a5,-1
 400 0158 6FF05FFF 		j	.L29
 401              	.LVL22:
 402              	.L23:
GAS LISTING /tmp/cc3NbQc7.s 			page 15


 403              	.LBE40:
  65:src/riscv.cpp ****                     _thread::exitThread();
 404              		.loc 1 65 17 is_stmt 1
  66:src/riscv.cpp ****                     break;
 405              		.loc 1 66 21
  66:src/riscv.cpp ****                     break;
 406              		.loc 1 66 40 is_stmt 0
 407 015c 97000000 		call	_ZN7_thread10exitThreadEv@plt
 407      E7800000 
 408              	.LVL23:
  67:src/riscv.cpp ****                 case SCALL_THREAD_DISPATCH:
 409              		.loc 1 67 21 is_stmt 1
 410 0164 6F000007 		j	.L11
 411              	.L22:
  68:src/riscv.cpp ****                     _thread::dispatch();
 412              		.loc 1 68 17
  69:src/riscv.cpp ****                     break;
 413              		.loc 1 69 21
  69:src/riscv.cpp ****                     break;
 414              		.loc 1 69 38 is_stmt 0
 415 0168 97000000 		call	_ZN7_thread8dispatchEv@plt
 415      E7800000 
 416              	.LVL24:
  70:src/riscv.cpp ****                 case SCALL_THREAD_JOIN:
 417              		.loc 1 70 21 is_stmt 1
 418 0170 6F004006 		j	.L11
 419              	.L21:
  71:src/riscv.cpp ****                     thread_t* handlejoin;
 420              		.loc 1 71 17
  72:src/riscv.cpp ****                     READ_REG(handlejoin, "a0");
 421              		.loc 1 72 21
  73:src/riscv.cpp ****                     _thread::join(handlejoin);
 422              		.loc 1 73 21
  73:src/riscv.cpp ****                     _thread::join(handlejoin);
 423              		.loc 1 73 47 is_stmt 0
 424              	#APP
 425              	# 73 "src/riscv.cpp" 1
 426              		mv a0, a0
 427              	# 0 "" 2
 428              	.LVL25:
  74:src/riscv.cpp ****                     break;
 429              		.loc 1 74 21 is_stmt 1
  74:src/riscv.cpp ****                     break;
 430              		.loc 1 74 34 is_stmt 0
 431              	#NO_APP
 432 0178 97000000 		call	_ZN7_thread4joinEPPS_@plt
 432      E7800000 
 433              	.LVL26:
  75:src/riscv.cpp ****                 case SCALL_GET_ID:
 434              		.loc 1 75 21 is_stmt 1
 435 0180 6F004005 		j	.L11
 436              	.L20:
  76:src/riscv.cpp ****                     _thread::running->getThreadID();
 437              		.loc 1 76 17
  77:src/riscv.cpp ****                     break;
 438              		.loc 1 77 21
  77:src/riscv.cpp ****                     break;
GAS LISTING /tmp/cc3NbQc7.s 			page 16


 439              		.loc 1 77 50 is_stmt 0
 440 0184 97070000 		la	a5,_ZN7_thread7runningE
 440      83B70700 
 441 018c 03B50700 		ld	a0,0(a5)
 442 0190 97000000 		call	_ZN7_thread11getThreadIDEv@plt
 442      E7800000 
 443              	.LVL27:
  78:src/riscv.cpp ****                 case SCALL_JOIN_ALL:
 444              		.loc 1 78 21 is_stmt 1
 445 0198 6F00C003 		j	.L11
 446              	.L19:
  79:src/riscv.cpp ****                     _thread::running->joinAll();
 447              		.loc 1 79 17
  80:src/riscv.cpp ****                 case SCALL_SEM_OPEN:
 448              		.loc 1 80 21
  80:src/riscv.cpp ****                 case SCALL_SEM_OPEN:
 449              		.loc 1 80 46 is_stmt 0
 450 019c 97070000 		la	a5,_ZN7_thread7runningE
 450      83B70700 
 451 01a4 03B50700 		ld	a0,0(a5)
 452 01a8 97000000 		call	_ZN7_thread7joinAllEv@plt
 452      E7800000 
 453              	.LVL28:
 454              	.L18:
  81:src/riscv.cpp ****                     sem_t* handle;
 455              		.loc 1 81 17 is_stmt 1
  82:src/riscv.cpp ****                     uint32 init;
 456              		.loc 1 82 21
  83:src/riscv.cpp ****                     READ_REG(handle, "a0");
 457              		.loc 1 83 21
  84:src/riscv.cpp ****                     READ_REG(init, "a1");
 458              		.loc 1 84 21
  84:src/riscv.cpp ****                     READ_REG(init, "a1");
 459              		.loc 1 84 43 is_stmt 0
 460              	#APP
 461              	# 84 "src/riscv.cpp" 1
 462              		mv s1, a0
 463              	# 0 "" 2
 464              	.LVL29:
  85:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
 465              		.loc 1 85 21 is_stmt 1
  85:src/riscv.cpp ****                     *handle = _sem::createSemaphore(init);
 466              		.loc 1 85 41 is_stmt 0
 467              	# 85 "src/riscv.cpp" 1
 468              		mv a0, a1
 469              	# 0 "" 2
 470              	.LVL30:
  86:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 471              		.loc 1 86 21 is_stmt 1
  86:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
 472              		.loc 1 86 52 is_stmt 0
 473              	#NO_APP
 474 01b8 1B050500 		sext.w	a0,a0
 475 01bc 97000000 		call	_ZN4_sem15createSemaphoreEj@plt
 475      E7800000 
 476              	.LVL31:
  86:src/riscv.cpp ****                     if(*handle != nullptr) ret = 0;
GAS LISTING /tmp/cc3NbQc7.s 			page 17


 477              		.loc 1 86 29
 478 01c4 23B0A400 		sd	a0,0(s1)
  87:src/riscv.cpp ****                     else ret = -1;
 479              		.loc 1 87 21 is_stmt 1
 480 01c8 63000502 		beqz	a0,.L34
  87:src/riscv.cpp ****                     else ret = -1;
 481              		.loc 1 87 48 is_stmt 0
 482 01cc 93070000 		li	a5,0
 483              	.L30:
 484              	.LVL32:
  89:src/riscv.cpp ****                     break;
 485              		.loc 1 89 21 is_stmt 1
  89:src/riscv.cpp ****                     break;
 486              		.loc 1 89 41 is_stmt 0
 487              	#APP
 488              	# 89 "src/riscv.cpp" 1
  90:src/riscv.cpp ****                 case SCALL_SEM_CLOSE:
 489              		mv a0, a5
 490              	# 0 "" 2
 491              		.loc 1 90 21 is_stmt 1
 492              	.LVL33:
 493              	#NO_APP
 494              	.L11:
 495              	.LBE39:
 118:src/riscv.cpp ****             w_sepc(sepc);
 496              		.loc 1 118 13
 118:src/riscv.cpp ****             w_sepc(sepc);
 497              		.loc 1 118 22 is_stmt 0
 498 01d4 833784FB 		ld	a5,-72(s0)
 499              	.LVL34:
 500              	.LBB41:
 501              	.LBB42:
 200:src/../h/riscv.hpp **** }
 201:src/../h/riscv.hpp **** 
 202:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 203:src/../h/riscv.hpp **** {
 204:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 502              		.loc 2 204 5 is_stmt 1
 503              		.loc 2 204 77 is_stmt 0
 504              	#APP
 505              	# 204 "src/../h/riscv.hpp" 1
 205              	}
 506              		csrw sstatus, a5
 507              	# 0 "" 2
 508              	.LVL35:
 509              	#NO_APP
 510              	.LBE42:
 511              	.LBE41:
 119:src/riscv.cpp ****             break;
 512              		.loc 1 119 13 is_stmt 1
 119:src/riscv.cpp ****             break;
 513              		.loc 1 119 19 is_stmt 0
 514 01dc 833704FB 		ld	a5,-80(s0)
 515              	.LVL36:
 516              	.LBB43:
 517              	.LBB44:
 136:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cc3NbQc7.s 			page 18


 518              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 519              		.loc 2 136 65 is_stmt 0
 520              	#APP
 521              	# 136 "src/../h/riscv.hpp" 1
 137:src/../h/riscv.hpp **** 
 522              		csrw sepc, a5
 523              	# 0 "" 2
 524              		.loc 2 137 1
 525              	#NO_APP
 526 01e4 6F004006 		j	.L5
 527              	.LVL37:
 528              	.L34:
 529              	.LBE44:
 530              	.LBE43:
 531              	.LBB45:
  88:src/riscv.cpp ****                     WRITE_REG("a0", ret);
 532              		.loc 1 88 30
 533 01e8 9307F0FF 		li	a5,-1
 534 01ec 6FF05FFE 		j	.L30
 535              	.LVL38:
 536              	.L17:
  91:src/riscv.cpp ****                     sem_t handleClose;
 537              		.loc 1 91 17 is_stmt 1
  92:src/riscv.cpp ****                     READ_REG(handleClose, "a0");
 538              		.loc 1 92 21
  93:src/riscv.cpp ****                     handleClose->close();
 539              		.loc 1 93 21
  93:src/riscv.cpp ****                     handleClose->close();
 540              		.loc 1 93 48 is_stmt 0
 541              	#APP
 542              	# 93 "src/riscv.cpp" 1
 543              		mv a0, a0
 544              	# 0 "" 2
 545              	.LVL39:
  94:src/riscv.cpp ****                     break;
 546              		.loc 1 94 21 is_stmt 1
  94:src/riscv.cpp ****                     break;
 547              		.loc 1 94 39 is_stmt 0
 548              	#NO_APP
 549 01f4 97000000 		call	_ZN4_sem5closeEv@plt
 549      E7800000 
 550              	.LVL40:
  95:src/riscv.cpp ****                 case SCALL_SEM_WAIT:
 551              		.loc 1 95 21 is_stmt 1
 552 01fc 6FF09FFD 		j	.L11
 553              	.L16:
  96:src/riscv.cpp ****                     sem_t idWait;
 554              		.loc 1 96 17
  97:src/riscv.cpp ****                     READ_REG(idWait, "a0");
 555              		.loc 1 97 21
  98:src/riscv.cpp ****                     idWait->wait();
 556              		.loc 1 98 21
  98:src/riscv.cpp ****                     idWait->wait();
 557              		.loc 1 98 43 is_stmt 0
 558              	#APP
 559              	# 98 "src/riscv.cpp" 1
GAS LISTING /tmp/cc3NbQc7.s 			page 19


 560              		mv a0, a0
 561              	# 0 "" 2
 562              	.LVL41:
  99:src/riscv.cpp ****                     break;
 563              		.loc 1 99 21 is_stmt 1
  99:src/riscv.cpp ****                     break;
 564              		.loc 1 99 33 is_stmt 0
 565              	#NO_APP
 566 0204 97000000 		call	_ZN4_sem4waitEv@plt
 566      E7800000 
 567              	.LVL42:
 100:src/riscv.cpp ****                 case SCALL_SEM_SIGNAL:
 568              		.loc 1 100 21 is_stmt 1
 569 020c 6FF09FFC 		j	.L11
 570              	.L15:
 101:src/riscv.cpp ****                     sem_t idSignal;
 571              		.loc 1 101 17
 102:src/riscv.cpp ****                     READ_REG(idSignal, "a0");
 572              		.loc 1 102 21
 103:src/riscv.cpp ****                     idSignal->signal();
 573              		.loc 1 103 21
 103:src/riscv.cpp ****                     idSignal->signal();
 574              		.loc 1 103 45 is_stmt 0
 575              	#APP
 576              	# 103 "src/riscv.cpp" 1
 577              		mv a0, a0
 578              	# 0 "" 2
 579              	.LVL43:
 104:src/riscv.cpp ****                     break;
 580              		.loc 1 104 21 is_stmt 1
 104:src/riscv.cpp ****                     break;
 581              		.loc 1 104 37 is_stmt 0
 582              	#NO_APP
 583 0214 97000000 		call	_ZN4_sem6signalEv@plt
 583      E7800000 
 584              	.LVL44:
 105:src/riscv.cpp ****                 case SCALL_GETC:
 585              		.loc 1 105 21 is_stmt 1
 586 021c 6FF09FFB 		j	.L11
 587              	.L14:
 106:src/riscv.cpp ****                     __getc();
 588              		.loc 1 106 17
 107:src/riscv.cpp ****                     break;
 589              		.loc 1 107 21
 107:src/riscv.cpp ****                     break;
 590              		.loc 1 107 27 is_stmt 0
 591 0220 97000000 		call	__getc@plt
 591      E7800000 
 592              	.LVL45:
 108:src/riscv.cpp ****                 case SCALL_PUTC:
 593              		.loc 1 108 21 is_stmt 1
 594 0228 6FF0DFFA 		j	.L11
 595              	.L12:
 109:src/riscv.cpp ****                     char c;
 596              		.loc 1 109 17
 110:src/riscv.cpp ****                     READ_REG(c, "a0");
 597              		.loc 1 110 21
GAS LISTING /tmp/cc3NbQc7.s 			page 20


 111:src/riscv.cpp ****                     __putc(c);
 598              		.loc 1 111 21
 111:src/riscv.cpp ****                     __putc(c);
 599              		.loc 1 111 38 is_stmt 0
 600              	#APP
 601              	# 111 "src/riscv.cpp" 1
 602              		mv a0, a0
 603              	# 0 "" 2
 604              	.LVL46:
 112:src/riscv.cpp ****                     break;
 605              		.loc 1 112 21 is_stmt 1
 112:src/riscv.cpp ****                     break;
 606              		.loc 1 112 27 is_stmt 0
 607              	#NO_APP
 608 0230 1375F50F 		andi	a0,a0,0xff
 609 0234 97000000 		call	__putc@plt
 609      E7800000 
 610              	.LVL47:
 113:src/riscv.cpp ****                 default:
 611              		.loc 1 113 21 is_stmt 1
 612 023c 6FF09FF9 		j	.L11
 613              	.LVL48:
 614              	.L6:
 615              	.LBE45:
 616              	.LBE46:
 122:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 617              		.loc 1 122 9
 123:src/riscv.cpp ****             break;
 618              		.loc 1 123 13
 619              	.LBB47:
 620              	.LBB48:
 170:src/../h/riscv.hpp **** }
 621              		.loc 2 170 5
 170:src/../h/riscv.hpp **** }
 622              		.loc 2 170 64 is_stmt 0
 623 0240 93072000 		li	a5,2
 624              	#APP
 625              	# 170 "src/../h/riscv.hpp" 1
 626              		csrc sip, a5
 627              	# 0 "" 2
 628              	.LVL49:
 629              	#NO_APP
 630              	.L5:
 631              	.LBE48:
 632              	.LBE47:
 633              	.LBE51:
 634              	.LBE32:
 128:src/riscv.cpp ****         default:
 129:src/riscv.cpp **** 
 130:src/riscv.cpp ****             printString("Scause: ");
 131:src/riscv.cpp ****             printInt(scause);
 132:src/riscv.cpp ****             printString("\n");
 133:src/riscv.cpp ****             printString("Koraci ko laki oblaci, skoci da te zemlja odbaci!\n");
 134:src/riscv.cpp ****             if ((int)scause == 2) thread_exit();
 135:src/riscv.cpp ****             printInt(r_sepc());
 136:src/riscv.cpp ****             thread_exit();
 137:src/riscv.cpp ****             break;
GAS LISTING /tmp/cc3NbQc7.s 			page 21


 138:src/riscv.cpp ****     }
 139:src/riscv.cpp **** }...
 635              		.loc 1 139 1
 636 0248 83308104 		ld	ra,72(sp)
 637              		.cfi_remember_state
 638              		.cfi_restore 1
 639 024c 03340104 		ld	s0,64(sp)
 640              		.cfi_restore 8
 641              		.cfi_def_cfa 2, 80
 642 0250 83348103 		ld	s1,56(sp)
 643              		.cfi_restore 9
 644 0254 13010105 		addi	sp,sp,80
 645              		.cfi_def_cfa_offset 0
 646 0258 67800000 		jr	ra
 647              	.LVL50:
 648              	.L8:
 649              		.cfi_restore_state
 650              	.LBB54:
 651              	.LBB52:
 128:src/riscv.cpp ****         default:
 652              		.loc 1 128 9 is_stmt 1
 130:src/riscv.cpp ****             printString("Scause: ");
 653              		.loc 1 130 13
 130:src/riscv.cpp ****             printString("Scause: ");
 654              		.loc 1 130 24 is_stmt 0
 655 025c 17050000 		lla	a0,.LC0
 655      13050500 
 656 0264 97000000 		call	_Z11printStringPKc@plt
 656      E7800000 
 657              	.LVL51:
 131:src/riscv.cpp ****             printInt(scause);
 658              		.loc 1 131 13 is_stmt 1
 131:src/riscv.cpp ****             printInt(scause);
 659              		.loc 1 131 21 is_stmt 0
 660 026c 9B840400 		sext.w	s1,s1
 661              	.LVL52:
 662 0270 13060000 		li	a2,0
 663 0274 9305A000 		li	a1,10
 664 0278 13850400 		mv	a0,s1
 665 027c 97000000 		call	_Z8printIntiii@plt
 665      E7800000 
 666              	.LVL53:
 132:src/riscv.cpp ****             printString("\n");
 667              		.loc 1 132 13 is_stmt 1
 132:src/riscv.cpp ****             printString("\n");
 668              		.loc 1 132 24 is_stmt 0
 669 0284 17050000 		lla	a0,.LC1
 669      13050500 
 670 028c 97000000 		call	_Z11printStringPKc@plt
 670      E7800000 
 671              	.LVL54:
 133:src/riscv.cpp ****             printString("Koraci ko laki oblaci, skoci da te zemlja odbaci!\n");
 672              		.loc 1 133 13 is_stmt 1
 133:src/riscv.cpp ****             printString("Koraci ko laki oblaci, skoci da te zemlja odbaci!\n");
 673              		.loc 1 133 24 is_stmt 0
 674 0294 17050000 		lla	a0,.LC2
 674      13050500 
GAS LISTING /tmp/cc3NbQc7.s 			page 22


 675 029c 97000000 		call	_Z11printStringPKc@plt
 675      E7800000 
 676              	.LVL55:
 134:src/riscv.cpp ****             if ((int)scause == 2) thread_exit();
 677              		.loc 1 134 13 is_stmt 1
 678 02a4 93072000 		li	a5,2
 679 02a8 6388F402 		beq	s1,a5,.L37
 680              	.L32:
 135:src/riscv.cpp ****             printInt(r_sepc());
 681              		.loc 1 135 13
 682              	.LBB49:
 683              	.LBB50:
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 684              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return sepc;
 685              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return sepc;
 686              		.loc 2 130 64 is_stmt 0
 687              	#APP
 688              	# 130 "src/../h/riscv.hpp" 1
 689              		csrr a5, sepc
 690              	# 0 "" 2
 691              	#NO_APP
 692 02b0 233CF4FC 		sd	a5,-40(s0)
 131:src/../h/riscv.hpp **** }
 693              		.loc 2 131 5 is_stmt 1
 131:src/../h/riscv.hpp **** }
 694              		.loc 2 131 12 is_stmt 0
 695 02b4 033584FD 		ld	a0,-40(s0)
 696              	.LBE50:
 697              	.LBE49:
 135:src/riscv.cpp ****             printInt(r_sepc());
 698              		.loc 1 135 21
 699 02b8 13060000 		li	a2,0
 700 02bc 9305A000 		li	a1,10
 701 02c0 1B050500 		sext.w	a0,a0
 702 02c4 97000000 		call	_Z8printIntiii@plt
 702      E7800000 
 703              	.LVL56:
 136:src/riscv.cpp ****             thread_exit();
 704              		.loc 1 136 13 is_stmt 1
 136:src/riscv.cpp ****             thread_exit();
 705              		.loc 1 136 24 is_stmt 0
 706 02cc 97000000 		call	_Z11thread_exitv@plt
 706      E7800000 
 707              	.LVL57:
 137:src/riscv.cpp ****             break;
 708              		.loc 1 137 13 is_stmt 1
 709              	.LBE52:
 710              	.LBE54:
 711              		.loc 1 139 1 is_stmt 0
 712 02d4 6FF05FF7 		j	.L5
 713              	.L37:
 714              	.LBB55:
 715              	.LBB53:
 134:src/riscv.cpp ****             if ((int)scause == 2) thread_exit();
 716              		.loc 1 134 35 is_stmt 1 discriminator 1
GAS LISTING /tmp/cc3NbQc7.s 			page 23


 134:src/riscv.cpp ****             if ((int)scause == 2) thread_exit();
 717              		.loc 1 134 46 is_stmt 0 discriminator 1
 718 02d8 97000000 		call	_Z11thread_exitv@plt
 718      E7800000 
 719              	.LVL58:
 720 02e0 6FF0DFFC 		j	.L32
 721              	.LBE53:
 722              	.LBE55:
 723              		.cfi_endproc
 724              	.LFE43:
 726              		.globl	_ZN5Riscv8userModeE
 727              		.bss
 728              		.set	.LANCHOR0,. + 0
 731              	_ZN5Riscv8userModeE:
 732 0000 00       		.zero	1
 733              		.text
 734              	.Letext0:
 735              		.file 3 "src/../h/../lib/hw.h"
 736              		.file 4 "src/../h/list.hpp"
 737              		.file 5 "src/../h/_thread.hpp"
 738              		.file 6 "src/../h/syscall_c.hpp"
 739              		.file 7 "src/../h/_sem.hpp"
 740              		.file 8 "src/../h/memory.hpp"
 741              		.file 9 "src/../lib/console.h"
 742              		.file 10 "src/../test/printing.hpp"
GAS LISTING /tmp/cc3NbQc7.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc3NbQc7.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3NbQc7.s:13     .text:0000000000000000 .L0 
     /tmp/cc3NbQc7.s:14     .text:0000000000000000 .L0 
     /tmp/cc3NbQc7.s:15     .text:0000000000000004 .L0 
     /tmp/cc3NbQc7.s:17     .text:0000000000000008 .L0 
     /tmp/cc3NbQc7.s:19     .text:000000000000000c .L0 
     /tmp/cc3NbQc7.s:21     .text:000000000000000c .L0 
     /tmp/cc3NbQc7.s:28     .text:0000000000000018 .L0 
     /tmp/cc3NbQc7.s:29     .text:0000000000000018 .L0 
     /tmp/cc3NbQc7.s:30     .text:0000000000000018 .L0 
     /tmp/cc3NbQc7.s:41     .text:0000000000000020 .L0 
       src/riscv.cpp:18     .text:0000000000000020 .L0 
     /tmp/cc3NbQc7.s:47     .text:0000000000000024 .L0 
       src/riscv.cpp:19     .text:0000000000000024 .L0 
     /tmp/cc3NbQc7.s:53     .text:0000000000000028 .L0 
     /tmp/cc3NbQc7.s:54     .text:000000000000002c .L0 
     /tmp/cc3NbQc7.s:55     .text:000000000000002c .L0 
     /tmp/cc3NbQc7.s:56     .text:000000000000002c .L0 
     /tmp/cc3NbQc7.s:58     .text:0000000000000030 .L0 
     /tmp/cc3NbQc7.s:61     .text:0000000000000034 .L0 
     /tmp/cc3NbQc7.s:66     .text:0000000000000034 .L0 
     /tmp/cc3NbQc7.s:67     .text:0000000000000034 .L0 
     /tmp/cc3NbQc7.s:68     .text:0000000000000034 .L0 
     /tmp/cc3NbQc7.s:75     .text:000000000000003c .L0 
     /tmp/cc3NbQc7.s:78     .text:0000000000000040 .L0 
     /tmp/cc3NbQc7.s:95     .text:0000000000000040 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3NbQc7.s:98     .text:0000000000000040 .L0 
     /tmp/cc3NbQc7.s:99     .text:0000000000000040 .L0 
     /tmp/cc3NbQc7.s:100    .text:0000000000000044 .L0 
     /tmp/cc3NbQc7.s:104    .text:0000000000000050 .L0 
     /tmp/cc3NbQc7.s:105    .text:0000000000000050 .L0 
     /tmp/cc3NbQc7.s:106    .text:0000000000000050 .L0 
     /tmp/cc3NbQc7.s:108    .text:0000000000000054 .L0 
     /tmp/cc3NbQc7.s:112    .text:0000000000000054 .L0 
     /tmp/cc3NbQc7.s:113    .text:0000000000000054 .L0 
     /tmp/cc3NbQc7.s:114    .text:0000000000000054 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000054 .L0 
     /tmp/cc3NbQc7.s:122    .text:000000000000005c .L0 
     /tmp/cc3NbQc7.s:123    .text:000000000000005c .L0 
     /tmp/cc3NbQc7.s:129    .text:0000000000000060 .L0 
     /tmp/cc3NbQc7.s:142    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:143    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:145    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:148    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:149    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:150    .text:000000000000008c .L0 
  src/../h/riscv.hpp:130    .text:000000000000008c .L0 
     /tmp/cc3NbQc7.s:158    .text:0000000000000094 .L0 
     /tmp/cc3NbQc7.s:159    .text:0000000000000094 .L0 
     /tmp/cc3NbQc7.s:163    .text:0000000000000098 .L0 
     /tmp/cc3NbQc7.s:165    .text:000000000000009c .L0 
     /tmp/cc3NbQc7.s:169    .text:00000000000000a0 .L0 
     /tmp/cc3NbQc7.s:170    .text:00000000000000a0 .L0 
     /tmp/cc3NbQc7.s:171    .text:00000000000000a0 .L0 
  src/../h/riscv.hpp:198    .text:00000000000000a0 .L0 
GAS LISTING /tmp/cc3NbQc7.s 			page 25


     /tmp/cc3NbQc7.s:179    .text:00000000000000a8 .L0 
     /tmp/cc3NbQc7.s:180    .text:00000000000000a8 .L0 
     /tmp/cc3NbQc7.s:184    .text:00000000000000ac .L0 
     /tmp/cc3NbQc7.s:186    .text:00000000000000b0 .L0 
     /tmp/cc3NbQc7.s:188    .text:00000000000000b0 .L0 
     /tmp/cc3NbQc7.s:189    .text:00000000000000b0 .L0 
       src/riscv.cpp:34     .text:00000000000000b0 .L0 
     /tmp/cc3NbQc7.s:197    .text:00000000000000b4 .L0 
     /tmp/cc3NbQc7.s:283    .text:00000000000000d8 .L0 
     /tmp/cc3NbQc7.s:289    .text:00000000000000e8 .L0 
     /tmp/cc3NbQc7.s:290    .text:00000000000000e8 .L0 
     /tmp/cc3NbQc7.s:291    .text:00000000000000e8 .L0 
     /tmp/cc3NbQc7.s:294    .text:00000000000000f0 .L0 
     /tmp/cc3NbQc7.s:300    .text:00000000000000f4 .L0 
     /tmp/cc3NbQc7.s:301    .text:00000000000000f4 .L0 
     /tmp/cc3NbQc7.s:302    .text:00000000000000f4 .L0 
       src/riscv.cpp:38     .text:00000000000000f4 .L0 
     /tmp/cc3NbQc7.s:309    .text:00000000000000f8 .L0 
     /tmp/cc3NbQc7.s:311    .text:00000000000000f8 .L0 
     /tmp/cc3NbQc7.s:314    .text:0000000000000100 .L0 
     /tmp/cc3NbQc7.s:317    .text:0000000000000104 .L0 
     /tmp/cc3NbQc7.s:318    .text:0000000000000104 .L0 
     /tmp/cc3NbQc7.s:319    .text:0000000000000104 .L0 
       src/riscv.cpp:43     .text:0000000000000104 .L0 
     /tmp/cc3NbQc7.s:326    .text:0000000000000108 .L0 
     /tmp/cc3NbQc7.s:328    .text:0000000000000108 .L0 
     /tmp/cc3NbQc7.s:331    .text:0000000000000110 .L0 
     /tmp/cc3NbQc7.s:334    .text:0000000000000114 .L0 
     /tmp/cc3NbQc7.s:335    .text:0000000000000114 .L0 
     /tmp/cc3NbQc7.s:336    .text:0000000000000114 .L0 
     /tmp/cc3NbQc7.s:339    .text:000000000000011c .L0 
     /tmp/cc3NbQc7.s:342    .text:0000000000000120 .L0 
     /tmp/cc3NbQc7.s:343    .text:0000000000000120 .L0 
     /tmp/cc3NbQc7.s:344    .text:0000000000000120 .L0 
     /tmp/cc3NbQc7.s:347    .text:0000000000000128 .L0 
     /tmp/cc3NbQc7.s:350    .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:352    .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:353    .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:354    .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:355    .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:356    .text:000000000000012c .L0 
       src/riscv.cpp:56     .text:000000000000012c .L0 
     /tmp/cc3NbQc7.s:363    .text:0000000000000130 .L0 
       src/riscv.cpp:57     .text:0000000000000130 .L0 
     /tmp/cc3NbQc7.s:369    .text:0000000000000134 .L0 
       src/riscv.cpp:58     .text:0000000000000134 .L0 
     /tmp/cc3NbQc7.s:375    .text:0000000000000138 .L0 
     /tmp/cc3NbQc7.s:377    .text:0000000000000138 .L0 
     /tmp/cc3NbQc7.s:380    .text:0000000000000140 .L0 
     /tmp/cc3NbQc7.s:382    .text:0000000000000144 .L0 
     /tmp/cc3NbQc7.s:384    .text:0000000000000148 .L0 
     /tmp/cc3NbQc7.s:388    .text:000000000000014c .L0 
       src/riscv.cpp:62     .text:000000000000014c .L0 
     /tmp/cc3NbQc7.s:395    .text:0000000000000150 .L0 
     /tmp/cc3NbQc7.s:399    .text:0000000000000154 .L0 
     /tmp/cc3NbQc7.s:405    .text:000000000000015c .L0 
     /tmp/cc3NbQc7.s:406    .text:000000000000015c .L0 
GAS LISTING /tmp/cc3NbQc7.s 			page 26


     /tmp/cc3NbQc7.s:407    .text:000000000000015c .L0 
     /tmp/cc3NbQc7.s:410    .text:0000000000000164 .L0 
     /tmp/cc3NbQc7.s:413    .text:0000000000000168 .L0 
     /tmp/cc3NbQc7.s:414    .text:0000000000000168 .L0 
     /tmp/cc3NbQc7.s:415    .text:0000000000000168 .L0 
     /tmp/cc3NbQc7.s:418    .text:0000000000000170 .L0 
     /tmp/cc3NbQc7.s:421    .text:0000000000000174 .L0 
     /tmp/cc3NbQc7.s:422    .text:0000000000000174 .L0 
     /tmp/cc3NbQc7.s:423    .text:0000000000000174 .L0 
       src/riscv.cpp:73     .text:0000000000000174 .L0 
     /tmp/cc3NbQc7.s:430    .text:0000000000000178 .L0 
     /tmp/cc3NbQc7.s:432    .text:0000000000000178 .L0 
     /tmp/cc3NbQc7.s:435    .text:0000000000000180 .L0 
     /tmp/cc3NbQc7.s:438    .text:0000000000000184 .L0 
     /tmp/cc3NbQc7.s:439    .text:0000000000000184 .L0 
     /tmp/cc3NbQc7.s:440    .text:0000000000000184 .L0 
     /tmp/cc3NbQc7.s:445    .text:0000000000000198 .L0 
     /tmp/cc3NbQc7.s:448    .text:000000000000019c .L0 
     /tmp/cc3NbQc7.s:449    .text:000000000000019c .L0 
     /tmp/cc3NbQc7.s:450    .text:000000000000019c .L0 
     /tmp/cc3NbQc7.s:456    .text:00000000000001b0 .L0 
     /tmp/cc3NbQc7.s:457    .text:00000000000001b0 .L0 
     /tmp/cc3NbQc7.s:458    .text:00000000000001b0 .L0 
     /tmp/cc3NbQc7.s:459    .text:00000000000001b0 .L0 
       src/riscv.cpp:84     .text:00000000000001b0 .L0 
     /tmp/cc3NbQc7.s:466    .text:00000000000001b4 .L0 
       src/riscv.cpp:85     .text:00000000000001b4 .L0 
     /tmp/cc3NbQc7.s:472    .text:00000000000001b8 .L0 
     /tmp/cc3NbQc7.s:474    .text:00000000000001b8 .L0 
     /tmp/cc3NbQc7.s:478    .text:00000000000001c4 .L0 
     /tmp/cc3NbQc7.s:480    .text:00000000000001c8 .L0 
     /tmp/cc3NbQc7.s:482    .text:00000000000001cc .L0 
     /tmp/cc3NbQc7.s:486    .text:00000000000001d0 .L0 
       src/riscv.cpp:89     .text:00000000000001d0 .L0 
     /tmp/cc3NbQc7.s:496    .text:00000000000001d4 .L0 
     /tmp/cc3NbQc7.s:497    .text:00000000000001d4 .L0 
     /tmp/cc3NbQc7.s:498    .text:00000000000001d4 .L0 
     /tmp/cc3NbQc7.s:503    .text:00000000000001d8 .L0 
  src/../h/riscv.hpp:204    .text:00000000000001d8 .L0 
     /tmp/cc3NbQc7.s:513    .text:00000000000001dc .L0 
     /tmp/cc3NbQc7.s:514    .text:00000000000001dc .L0 
     /tmp/cc3NbQc7.s:519    .text:00000000000001e0 .L0 
  src/../h/riscv.hpp:136    .text:00000000000001e0 .L0 
     /tmp/cc3NbQc7.s:526    .text:00000000000001e4 .L0 
     /tmp/cc3NbQc7.s:533    .text:00000000000001e8 .L0 
     /tmp/cc3NbQc7.s:538    .text:00000000000001f0 .L0 
     /tmp/cc3NbQc7.s:539    .text:00000000000001f0 .L0 
     /tmp/cc3NbQc7.s:540    .text:00000000000001f0 .L0 
       src/riscv.cpp:93     .text:00000000000001f0 .L0 
     /tmp/cc3NbQc7.s:547    .text:00000000000001f4 .L0 
     /tmp/cc3NbQc7.s:549    .text:00000000000001f4 .L0 
     /tmp/cc3NbQc7.s:552    .text:00000000000001fc .L0 
     /tmp/cc3NbQc7.s:555    .text:0000000000000200 .L0 
     /tmp/cc3NbQc7.s:556    .text:0000000000000200 .L0 
     /tmp/cc3NbQc7.s:557    .text:0000000000000200 .L0 
       src/riscv.cpp:98     .text:0000000000000200 .L0 
     /tmp/cc3NbQc7.s:564    .text:0000000000000204 .L0 
GAS LISTING /tmp/cc3NbQc7.s 			page 27


     /tmp/cc3NbQc7.s:566    .text:0000000000000204 .L0 
     /tmp/cc3NbQc7.s:569    .text:000000000000020c .L0 
     /tmp/cc3NbQc7.s:572    .text:0000000000000210 .L0 
     /tmp/cc3NbQc7.s:573    .text:0000000000000210 .L0 
     /tmp/cc3NbQc7.s:574    .text:0000000000000210 .L0 
       src/riscv.cpp:103    .text:0000000000000210 .L0 
     /tmp/cc3NbQc7.s:581    .text:0000000000000214 .L0 
     /tmp/cc3NbQc7.s:583    .text:0000000000000214 .L0 
     /tmp/cc3NbQc7.s:586    .text:000000000000021c .L0 
     /tmp/cc3NbQc7.s:589    .text:0000000000000220 .L0 
     /tmp/cc3NbQc7.s:590    .text:0000000000000220 .L0 
     /tmp/cc3NbQc7.s:591    .text:0000000000000220 .L0 
     /tmp/cc3NbQc7.s:594    .text:0000000000000228 .L0 
     /tmp/cc3NbQc7.s:597    .text:000000000000022c .L0 
     /tmp/cc3NbQc7.s:598    .text:000000000000022c .L0 
     /tmp/cc3NbQc7.s:599    .text:000000000000022c .L0 
       src/riscv.cpp:111    .text:000000000000022c .L0 
     /tmp/cc3NbQc7.s:606    .text:0000000000000230 .L0 
     /tmp/cc3NbQc7.s:608    .text:0000000000000230 .L0 
     /tmp/cc3NbQc7.s:612    .text:000000000000023c .L0 
     /tmp/cc3NbQc7.s:618    .text:0000000000000240 .L0 
     /tmp/cc3NbQc7.s:621    .text:0000000000000240 .L0 
     /tmp/cc3NbQc7.s:622    .text:0000000000000240 .L0 
     /tmp/cc3NbQc7.s:623    .text:0000000000000240 .L0 
     /tmp/cc3NbQc7.s:636    .text:0000000000000248 .L0 
     /tmp/cc3NbQc7.s:637    .text:000000000000024c .L0 
     /tmp/cc3NbQc7.s:638    .text:000000000000024c .L0 
     /tmp/cc3NbQc7.s:640    .text:0000000000000250 .L0 
     /tmp/cc3NbQc7.s:641    .text:0000000000000250 .L0 
     /tmp/cc3NbQc7.s:643    .text:0000000000000254 .L0 
     /tmp/cc3NbQc7.s:645    .text:0000000000000258 .L0 
     /tmp/cc3NbQc7.s:649    .text:000000000000025c .L0 
     /tmp/cc3NbQc7.s:653    .text:000000000000025c .L0 
     /tmp/cc3NbQc7.s:654    .text:000000000000025c .L0 
     /tmp/cc3NbQc7.s:655    .text:000000000000025c .L0 
     /tmp/cc3NbQc7.s:659    .text:000000000000026c .L0 
     /tmp/cc3NbQc7.s:660    .text:000000000000026c .L0 
     /tmp/cc3NbQc7.s:668    .text:0000000000000284 .L0 
     /tmp/cc3NbQc7.s:669    .text:0000000000000284 .L0 
     /tmp/cc3NbQc7.s:673    .text:0000000000000294 .L0 
     /tmp/cc3NbQc7.s:674    .text:0000000000000294 .L0 
     /tmp/cc3NbQc7.s:678    .text:00000000000002a4 .L0 
     /tmp/cc3NbQc7.s:684    .text:00000000000002ac .L0 
     /tmp/cc3NbQc7.s:685    .text:00000000000002ac .L0 
     /tmp/cc3NbQc7.s:686    .text:00000000000002ac .L0 
  src/../h/riscv.hpp:130    .text:00000000000002ac .L0 
     /tmp/cc3NbQc7.s:694    .text:00000000000002b4 .L0 
     /tmp/cc3NbQc7.s:695    .text:00000000000002b4 .L0 
     /tmp/cc3NbQc7.s:699    .text:00000000000002b8 .L0 
     /tmp/cc3NbQc7.s:705    .text:00000000000002cc .L0 
     /tmp/cc3NbQc7.s:706    .text:00000000000002cc .L0 
     /tmp/cc3NbQc7.s:711    .text:00000000000002d4 .L0 
     /tmp/cc3NbQc7.s:712    .text:00000000000002d4 .L0 
     /tmp/cc3NbQc7.s:717    .text:00000000000002d8 .L0 
     /tmp/cc3NbQc7.s:718    .text:00000000000002d8 .L0 
     /tmp/cc3NbQc7.s:723    .text:00000000000002e4 .L0 
     /tmp/cc3NbQc7.s:731    .bss:0000000000000000 _ZN5Riscv8userModeE
GAS LISTING /tmp/cc3NbQc7.s 			page 28


     /tmp/cc3NbQc7.s:728    .bss:0000000000000000 .LANCHOR0
     /tmp/cc3NbQc7.s:743    .text:00000000000002e4 .L0 
     /tmp/cc3NbQc7.s:21     .text:000000000000000c .L0 
     /tmp/cc3NbQc7.s:209    .rodata:0000000000000000 .L13
     /tmp/cc3NbQc7.s:201    .text:00000000000000c0 .L0 
     /tmp/cc3NbQc7.s:440    .text:0000000000000184 .L0 
     /tmp/cc3NbQc7.s:450    .text:000000000000019c .L0 
     /tmp/cc3NbQc7.s:83     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc3NbQc7.s:655    .text:000000000000025c .L0 
     /tmp/cc3NbQc7.s:86     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cc3NbQc7.s:669    .text:0000000000000284 .L0 
     /tmp/cc3NbQc7.s:89     .rodata.str1.8:0000000000000018 .LC2
     /tmp/cc3NbQc7.s:674    .text:0000000000000294 .L0 
     /tmp/cc3NbQc7.s:60     .text:0000000000000034 .L2
     /tmp/cc3NbQc7.s:37     .text:0000000000000020 .L3
     /tmp/cc3NbQc7.s:614    .text:0000000000000240 .L6
     /tmp/cc3NbQc7.s:279    .text:00000000000000d8 .L7
     /tmp/cc3NbQc7.s:648    .text:000000000000025c .L8
     /tmp/cc3NbQc7.s:494    .text:00000000000001d4 .L11
     /tmp/cc3NbQc7.s:630    .text:0000000000000248 .L5
     /tmp/cc3NbQc7.s:397    .text:0000000000000154 .L33
     /tmp/cc3NbQc7.s:385    .text:000000000000014c .L29
     /tmp/cc3NbQc7.s:528    .text:00000000000001e8 .L34
     /tmp/cc3NbQc7.s:483    .text:00000000000001d0 .L30
     /tmp/cc3NbQc7.s:713    .text:00000000000002d8 .L37
     /tmp/cc3NbQc7.s:680    .text:00000000000002ac .L32
     /tmp/cc3NbQc7.s:296    .text:00000000000000f4 .L28
     /tmp/cc3NbQc7.s:315    .text:0000000000000104 .L27
     /tmp/cc3NbQc7.s:332    .text:0000000000000114 .L26
     /tmp/cc3NbQc7.s:340    .text:0000000000000120 .L25
     /tmp/cc3NbQc7.s:348    .text:000000000000012c .L24
     /tmp/cc3NbQc7.s:402    .text:000000000000015c .L23
     /tmp/cc3NbQc7.s:411    .text:0000000000000168 .L22
     /tmp/cc3NbQc7.s:419    .text:0000000000000174 .L21
     /tmp/cc3NbQc7.s:436    .text:0000000000000184 .L20
     /tmp/cc3NbQc7.s:446    .text:000000000000019c .L19
     /tmp/cc3NbQc7.s:454    .text:00000000000001b0 .L18
     /tmp/cc3NbQc7.s:536    .text:00000000000001f0 .L17
     /tmp/cc3NbQc7.s:553    .text:0000000000000200 .L16
     /tmp/cc3NbQc7.s:570    .text:0000000000000210 .L15
     /tmp/cc3NbQc7.s:587    .text:0000000000000220 .L14
     /tmp/cc3NbQc7.s:595    .text:000000000000022c .L12
     /tmp/cc3NbQc7.s:2643   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3NbQc7.s:4184   .debug_str:00000000000009e9 .LASF213
     /tmp/cc3NbQc7.s:4246   .debug_str:0000000000000c60 .LASF214
     /tmp/cc3NbQc7.s:3948   .debug_str:000000000000032c .LASF215
     /tmp/cc3NbQc7.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3NbQc7.s:734    .text:00000000000002e4 .Letext0
     /tmp/cc3NbQc7.s:3838   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3NbQc7.s:3976   .debug_str:0000000000000416 .LASF0
     /tmp/cc3NbQc7.s:4006   .debug_str:000000000000051b .LASF1
     /tmp/cc3NbQc7.s:4114   .debug_str:0000000000000839 .LASF2
     /tmp/cc3NbQc7.s:3926   .debug_str:0000000000000283 .LASF3
     /tmp/cc3NbQc7.s:3946   .debug_str:0000000000000325 .LASF4
     /tmp/cc3NbQc7.s:4124   .debug_str:000000000000088f .LASF5
     /tmp/cc3NbQc7.s:3984   .debug_str:0000000000000447 .LASF6
     /tmp/cc3NbQc7.s:3850   .debug_str:000000000000004f .LASF7
GAS LISTING /tmp/cc3NbQc7.s 			page 29


     /tmp/cc3NbQc7.s:4072   .debug_str:00000000000006ef .LASF8
     /tmp/cc3NbQc7.s:3994   .debug_str:00000000000004b5 .LASF9
     /tmp/cc3NbQc7.s:3944   .debug_str:0000000000000315 .LASF10
     /tmp/cc3NbQc7.s:3956   .debug_str:0000000000000382 .LASF11
     /tmp/cc3NbQc7.s:3884   .debug_str:000000000000012e .LASF12
     /tmp/cc3NbQc7.s:3934   .debug_str:00000000000002a6 .LASF13
     /tmp/cc3NbQc7.s:3898   .debug_str:00000000000001b1 .LASF14
     /tmp/cc3NbQc7.s:3882   .debug_str:000000000000011e .LASF15
     /tmp/cc3NbQc7.s:4158   .debug_str:0000000000000966 .LASF16
     /tmp/cc3NbQc7.s:3924   .debug_str:000000000000026d .LASF17
     /tmp/cc3NbQc7.s:4142   .debug_str:00000000000008f3 .LASF18
     /tmp/cc3NbQc7.s:4238   .debug_str:0000000000000c2f .LASF19
     /tmp/cc3NbQc7.s:4030   .debug_str:00000000000005d1 .LASF20
     /tmp/cc3NbQc7.s:4186   .debug_str:0000000000000aad .LASF21
     /tmp/cc3NbQc7.s:3844   .debug_str:0000000000000018 .LASF22
     /tmp/cc3NbQc7.s:3892   .debug_str:0000000000000173 .LASF23
     /tmp/cc3NbQc7.s:4052   .debug_str:0000000000000660 .LASF24
     /tmp/cc3NbQc7.s:3914   .debug_str:000000000000022e .LASF25
     /tmp/cc3NbQc7.s:4168   .debug_str:0000000000000996 .LASF26
     /tmp/cc3NbQc7.s:3938   .debug_str:00000000000002d6 .LASF27
     /tmp/cc3NbQc7.s:3840   .debug_str:0000000000000000 .LASF28
     /tmp/cc3NbQc7.s:4104   .debug_str:00000000000007f1 .LASF29
     /tmp/cc3NbQc7.s:4126   .debug_str:0000000000000896 .LASF30
     /tmp/cc3NbQc7.s:4080   .debug_str:0000000000000730 .LASF31
     /tmp/cc3NbQc7.s:3854   .debug_str:0000000000000061 .LASF32
     /tmp/cc3NbQc7.s:3868   .debug_str:00000000000000ba .LASF33
     /tmp/cc3NbQc7.s:4228   .debug_str:0000000000000c05 .LASF34
     /tmp/cc3NbQc7.s:3842   .debug_str:000000000000000d .LASF35
     /tmp/cc3NbQc7.s:4232   .debug_str:0000000000000c17 .LASF83
     /tmp/cc3NbQc7.s:4100   .debug_str:00000000000007c9 .LASF39
     /tmp/cc3NbQc7.s:4014   .debug_str:000000000000055d .LASF36
     /tmp/cc3NbQc7.s:3856   .debug_str:0000000000000070 .LASF37
     /tmp/cc3NbQc7.s:4248   .debug_str:0000000000000c6e .LASF38
     /tmp/cc3NbQc7.s:4216   .debug_str:0000000000000b95 .LASF40
     /tmp/cc3NbQc7.s:3930   .debug_str:0000000000000290 .LASF41
     /tmp/cc3NbQc7.s:4182   .debug_str:00000000000009dc .LASF42
     /tmp/cc3NbQc7.s:3910   .debug_str:0000000000000210 .LASF43
     /tmp/cc3NbQc7.s:3964   .debug_str:00000000000003cb .LASF76
     /tmp/cc3NbQc7.s:3974   .debug_str:00000000000003fe .LASF78
     /tmp/cc3NbQc7.s:4206   .debug_str:0000000000000b71 .LASF44
     /tmp/cc3NbQc7.s:4200   .debug_str:0000000000000b13 .LASF46
     /tmp/cc3NbQc7.s:4110   .debug_str:0000000000000825 .LASF48
     /tmp/cc3NbQc7.s:4064   .debug_str:00000000000006bc .LASF50
     /tmp/cc3NbQc7.s:4090   .debug_str:0000000000000773 .LASF45
     /tmp/cc3NbQc7.s:4094   .debug_str:0000000000000787 .LASF47
     /tmp/cc3NbQc7.s:4056   .debug_str:000000000000067e .LASF49
     /tmp/cc3NbQc7.s:3998   .debug_str:00000000000004ea .LASF51
     /tmp/cc3NbQc7.s:4244   .debug_str:0000000000000c58 .LASF52
     /tmp/cc3NbQc7.s:4188   .debug_str:0000000000000abc .LASF53
     /tmp/cc3NbQc7.s:4050   .debug_str:0000000000000658 .LASF54
     /tmp/cc3NbQc7.s:4062   .debug_str:00000000000006a8 .LASF55
     /tmp/cc3NbQc7.s:4022   .debug_str:00000000000005b2 .LASF56
     /tmp/cc3NbQc7.s:4098   .debug_str:00000000000007b5 .LASF57
     /tmp/cc3NbQc7.s:4274   .debug_str:0000000000000d5e .LASF58
     /tmp/cc3NbQc7.s:3982   .debug_str:0000000000000433 .LASF59
     /tmp/cc3NbQc7.s:4154   .debug_str:0000000000000952 .LASF60
     /tmp/cc3NbQc7.s:4128   .debug_str:00000000000008a5 .LASF61
GAS LISTING /tmp/cc3NbQc7.s 			page 30


     /tmp/cc3NbQc7.s:4130   .debug_str:00000000000008b8 .LASF62
     /tmp/cc3NbQc7.s:3888   .debug_str:0000000000000142 .LASF63
     /tmp/cc3NbQc7.s:3922   .debug_str:0000000000000267 .LASF64
     /tmp/cc3NbQc7.s:3972   .debug_str:00000000000003ec .LASF65
     /tmp/cc3NbQc7.s:3980   .debug_str:000000000000042d .LASF66
     /tmp/cc3NbQc7.s:3912   .debug_str:000000000000021c .LASF67
     /tmp/cc3NbQc7.s:3852   .debug_str:0000000000000056 .LASF68
     /tmp/cc3NbQc7.s:4120   .debug_str:000000000000085c .LASF69
     /tmp/cc3NbQc7.s:4112   .debug_str:000000000000082e .LASF70
     /tmp/cc3NbQc7.s:4268   .debug_str:0000000000000d32 .LASF71
     /tmp/cc3NbQc7.s:4234   .debug_str:0000000000000c1d .LASF72
     /tmp/cc3NbQc7.s:4254   .debug_str:0000000000000c9a .LASF73
     /tmp/cc3NbQc7.s:4226   .debug_str:0000000000000bfb .LASF74
     /tmp/cc3NbQc7.s:4042   .debug_str:0000000000000621 .LASF75
     /tmp/cc3NbQc7.s:4240   .debug_str:0000000000000c3f .LASF77
     /tmp/cc3NbQc7.s:3954   .debug_str:0000000000000366 .LASF79
     /tmp/cc3NbQc7.s:4160   .debug_str:0000000000000972 .LASF80
     /tmp/cc3NbQc7.s:3920   .debug_str:000000000000024e .LASF81
     /tmp/cc3NbQc7.s:4078   .debug_str:000000000000071b .LASF142
     /tmp/cc3NbQc7.s:3992   .debug_str:0000000000000493 .LASF144
     /tmp/cc3NbQc7.s:3990   .debug_str:000000000000048a .LASF178
     /tmp/cc3NbQc7.s:4034   .debug_str:00000000000005e8 .LASF82
     /tmp/cc3NbQc7.s:4278   .debug_str:0000000000000d80 .LASF84
     /tmp/cc3NbQc7.s:4210   .debug_str:0000000000000b83 .LASF216
     /tmp/cc3NbQc7.s:4152   .debug_str:000000000000094d .LASF85
     /tmp/cc3NbQc7.s:3988   .debug_str:0000000000000485 .LASF86
     /tmp/cc3NbQc7.s:4046   .debug_str:0000000000000649 .LASF87
     /tmp/cc3NbQc7.s:4220   .debug_str:0000000000000bbf .LASF89
     /tmp/cc3NbQc7.s:4096   .debug_str:000000000000079a .LASF94
     /tmp/cc3NbQc7.s:4118   .debug_str:0000000000000852 .LASF217
     /tmp/cc3NbQc7.s:3962   .debug_str:00000000000003b0 .LASF218
     /tmp/cc3NbQc7.s:4002   .debug_str:000000000000050d .LASF88
     /tmp/cc3NbQc7.s:4266   .debug_str:0000000000000d11 .LASF90
     /tmp/cc3NbQc7.s:4026   .debug_str:00000000000005c3 .LASF91
     /tmp/cc3NbQc7.s:4224   .debug_str:0000000000000bdb .LASF92
     /tmp/cc3NbQc7.s:4070   .debug_str:00000000000006e3 .LASF93
     /tmp/cc3NbQc7.s:3996   .debug_str:00000000000004c8 .LASF95
     /tmp/cc3NbQc7.s:4280   .debug_str:0000000000000d8e .LASF96
     /tmp/cc3NbQc7.s:4258   .debug_str:0000000000000cc0 .LASF97
     /tmp/cc3NbQc7.s:4134   .debug_str:00000000000008ce .LASF98
     /tmp/cc3NbQc7.s:3936   .debug_str:00000000000002b5 .LASF99
     /tmp/cc3NbQc7.s:4084   .debug_str:0000000000000756 .LASF100
     /tmp/cc3NbQc7.s:3890   .debug_str:0000000000000155 .LASF101
     /tmp/cc3NbQc7.s:3862   .debug_str:000000000000009c .LASF102
     /tmp/cc3NbQc7.s:4166   .debug_str:000000000000098e .LASF174
     /tmp/cc3NbQc7.s:4162   .debug_str:000000000000097e .LASF103
     /tmp/cc3NbQc7.s:4000   .debug_str:00000000000004fd .LASF104
     /tmp/cc3NbQc7.s:4156   .debug_str:0000000000000959 .LASF105
     /tmp/cc3NbQc7.s:4204   .debug_str:0000000000000b4d .LASF106
     /tmp/cc3NbQc7.s:4066   .debug_str:00000000000006d1 .LASF219
     /tmp/cc3NbQc7.s:4010   .debug_str:0000000000000550 .LASF107
     /tmp/cc3NbQc7.s:4060   .debug_str:0000000000000694 .LASF108
     /tmp/cc3NbQc7.s:4180   .debug_str:00000000000009d4 .LASF109
     /tmp/cc3NbQc7.s:3872   .debug_str:00000000000000d3 .LASF110
     /tmp/cc3NbQc7.s:4270   .debug_str:0000000000000d4a .LASF111
     /tmp/cc3NbQc7.s:4276   .debug_str:0000000000000d66 .LASF112
     /tmp/cc3NbQc7.s:3960   .debug_str:00000000000003a5 .LASF113
GAS LISTING /tmp/cc3NbQc7.s 			page 31


     /tmp/cc3NbQc7.s:4122   .debug_str:0000000000000874 .LASF114
     /tmp/cc3NbQc7.s:4176   .debug_str:00000000000009bb .LASF115
     /tmp/cc3NbQc7.s:4218   .debug_str:0000000000000ba4 .LASF116
     /tmp/cc3NbQc7.s:4024   .debug_str:00000000000005ba .LASF117
     /tmp/cc3NbQc7.s:4196   .debug_str:0000000000000af4 .LASF118
     /tmp/cc3NbQc7.s:4054   .debug_str:0000000000000674 .LASF119
     /tmp/cc3NbQc7.s:3846   .debug_str:0000000000000031 .LASF120
     /tmp/cc3NbQc7.s:3874   .debug_str:00000000000000e1 .LASF121
     /tmp/cc3NbQc7.s:4262   .debug_str:0000000000000cf5 .LASF122
     /tmp/cc3NbQc7.s:4242   .debug_str:0000000000000c4e .LASF123
     /tmp/cc3NbQc7.s:4018   .debug_str:0000000000000581 .LASF124
     /tmp/cc3NbQc7.s:4092   .debug_str:000000000000077a .LASF125
     /tmp/cc3NbQc7.s:4250   .debug_str:0000000000000c77 .LASF126
     /tmp/cc3NbQc7.s:4036   .debug_str:00000000000005ed .LASF127
     /tmp/cc3NbQc7.s:3878   .debug_str:00000000000000f8 .LASF128
     /tmp/cc3NbQc7.s:4086   .debug_str:000000000000075f .LASF129
     /tmp/cc3NbQc7.s:4016   .debug_str:0000000000000566 .LASF130
     /tmp/cc3NbQc7.s:4020   .debug_str:000000000000059a .LASF131
     /tmp/cc3NbQc7.s:3848   .debug_str:000000000000004a .LASF132
     /tmp/cc3NbQc7.s:4264   .debug_str:0000000000000d0c .LASF133
     /tmp/cc3NbQc7.s:4136   .debug_str:00000000000008d9 .LASF134
     /tmp/cc3NbQc7.s:4198   .debug_str:0000000000000b0b .LASF135
     /tmp/cc3NbQc7.s:4140   .debug_str:00000000000008ea .LASF136
     /tmp/cc3NbQc7.s:3870   .debug_str:00000000000000cb .LASF137
     /tmp/cc3NbQc7.s:4088   .debug_str:000000000000076b .LASF138
     /tmp/cc3NbQc7.s:4048   .debug_str:000000000000064e .LASF139
     /tmp/cc3NbQc7.s:4190   .debug_str:0000000000000ad0 .LASF140
     /tmp/cc3NbQc7.s:4108   .debug_str:000000000000081c .LASF141
     /tmp/cc3NbQc7.s:3876   .debug_str:00000000000000ea .LASF143
     /tmp/cc3NbQc7.s:4102   .debug_str:00000000000007d4 .LASF145
     /tmp/cc3NbQc7.s:3904   .debug_str:00000000000001df .LASF148
     /tmp/cc3NbQc7.s:3986   .debug_str:0000000000000459 .LASF150
     /tmp/cc3NbQc7.s:3916   .debug_str:0000000000000240 .LASF146
     /tmp/cc3NbQc7.s:3908   .debug_str:00000000000001f9 .LASF147
     /tmp/cc3NbQc7.s:4174   .debug_str:00000000000009b6 .LASF149
     /tmp/cc3NbQc7.s:4260   .debug_str:0000000000000cdf .LASF151
     /tmp/cc3NbQc7.s:4212   .debug_str:0000000000000b88 .LASF152
     /tmp/cc3NbQc7.s:4082   .debug_str:0000000000000740 .LASF153
     /tmp/cc3NbQc7.s:4272   .debug_str:0000000000000d55 .LASF154
     /tmp/cc3NbQc7.s:4028   .debug_str:00000000000005cb .LASF155
     /tmp/cc3NbQc7.s:4170   .debug_str:00000000000009ac .LASF156
     /tmp/cc3NbQc7.s:4068   .debug_str:00000000000006d6 .LASF157
     /tmp/cc3NbQc7.s:4076   .debug_str:000000000000070b .LASF158
     /tmp/cc3NbQc7.s:4106   .debug_str:0000000000000800 .LASF159
     /tmp/cc3NbQc7.s:3918   .debug_str:0000000000000249 .LASF160
     /tmp/cc3NbQc7.s:4256   .debug_str:0000000000000cb0 .LASF161
     /tmp/cc3NbQc7.s:4164   .debug_str:0000000000000987 .LASF162
     /tmp/cc3NbQc7.s:4146   .debug_str:000000000000091a .LASF163
     /tmp/cc3NbQc7.s:3858   .debug_str:0000000000000079 .LASF164
     /tmp/cc3NbQc7.s:3864   .debug_str:00000000000000a4 .LASF165
     /tmp/cc3NbQc7.s:3968   .debug_str:00000000000003df .LASF166
     /tmp/cc3NbQc7.s:4044   .debug_str:0000000000000637 .LASF167
     /tmp/cc3NbQc7.s:3894   .debug_str:0000000000000194 .LASF168
     /tmp/cc3NbQc7.s:3902   .debug_str:00000000000001ca .LASF169
     /tmp/cc3NbQc7.s:3880   .debug_str:0000000000000115 .LASF170
     /tmp/cc3NbQc7.s:3958   .debug_str:0000000000000390 .LASF171
     /tmp/cc3NbQc7.s:4230   .debug_str:0000000000000c10 .LASF172
GAS LISTING /tmp/cc3NbQc7.s 			page 32


     /tmp/cc3NbQc7.s:3970   .debug_str:00000000000003e5 .LASF173
     /tmp/cc3NbQc7.s:3932   .debug_str:000000000000029c .LASF175
     /tmp/cc3NbQc7.s:3886   .debug_str:000000000000013d .LASF176
     /tmp/cc3NbQc7.s:4004   .debug_str:0000000000000516 .LASF177
     /tmp/cc3NbQc7.s:3900   .debug_str:00000000000001c1 .LASF179
     /tmp/cc3NbQc7.s:3978   .debug_str:0000000000000423 .LASF180
     /tmp/cc3NbQc7.s:4202   .debug_str:0000000000000b28 .LASF181
     /tmp/cc3NbQc7.s:4138   .debug_str:00000000000008df .LASF182
     /tmp/cc3NbQc7.s:3940   .debug_str:00000000000002e8 .LASF183
     /tmp/cc3NbQc7.s:4058   .debug_str:0000000000000685 .LASF184
     /tmp/cc3NbQc7.s:3860   .debug_str:000000000000007f .LASF185
     /tmp/cc3NbQc7.s:4116   .debug_str:0000000000000847 .LASF186
     /tmp/cc3NbQc7.s:4148   .debug_str:000000000000092c .LASF187
     /tmp/cc3NbQc7.s:4178   .debug_str:00000000000009c7 .LASF188
     /tmp/cc3NbQc7.s:4040   .debug_str:0000000000000606 .LASF189
     /tmp/cc3NbQc7.s:3942   .debug_str:0000000000000301 .LASF190
     /tmp/cc3NbQc7.s:4008   .debug_str:000000000000052e .LASF191
     /tmp/cc3NbQc7.s:4194   .debug_str:0000000000000ae0 .LASF220
     /tmp/cc3NbQc7.s:96     .text:0000000000000040 .LFB43
     /tmp/cc3NbQc7.s:724    .text:00000000000002e4 .LFE43
     /tmp/cc3NbQc7.s:4150   .debug_str:0000000000000946 .LASF192
     /tmp/cc3NbQc7.s:3635   .debug_loc:0000000000000000 .LLST1
     /tmp/cc3NbQc7.s:3824   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3NbQc7.s:4214   .debug_str:0000000000000b90 .LASF193
     /tmp/cc3NbQc7.s:4236   .debug_str:0000000000000c27 .LASF194
     /tmp/cc3NbQc7.s:4208   .debug_str:0000000000000b7a .LASF195
     /tmp/cc3NbQc7.s:3654   .debug_loc:000000000000005c .LLST2
     /tmp/cc3NbQc7.s:3661   .debug_loc:000000000000007f .LLST3
     /tmp/cc3NbQc7.s:3692   .debug_loc:0000000000000105 .LLST4
     /tmp/cc3NbQc7.s:3699   .debug_loc:0000000000000128 .LLST5
     /tmp/cc3NbQc7.s:4192   .debug_str:0000000000000ad5 .LASF196
     /tmp/cc3NbQc7.s:3706   .debug_loc:000000000000014b .LLST6
     /tmp/cc3NbQc7.s:4252   .debug_str:0000000000000c93 .LASF197
     /tmp/cc3NbQc7.s:3713   .debug_loc:000000000000016e .LLST7
     /tmp/cc3NbQc7.s:3866   .debug_str:00000000000000b5 .LASF198
     /tmp/cc3NbQc7.s:3724   .debug_loc:00000000000001a4 .LLST8
     /tmp/cc3NbQc7.s:3906   .debug_str:00000000000001ed .LASF199
     /tmp/cc3NbQc7.s:3731   .debug_loc:00000000000001c7 .LLST9
     /tmp/cc3NbQc7.s:3928   .debug_str:0000000000000289 .LASF200
     /tmp/cc3NbQc7.s:3738   .debug_loc:00000000000001ea .LLST10
     /tmp/cc3NbQc7.s:3966   .debug_str:00000000000003d6 .LASF201
     /tmp/cc3NbQc7.s:3745   .debug_loc:000000000000020d .LLST11
     /tmp/cc3NbQc7.s:3752   .debug_loc:0000000000000230 .LLST12
     /tmp/cc3NbQc7.s:351    .text:000000000000012c .LBB40
     /tmp/cc3NbQc7.s:403    .text:000000000000015c .LBE40
     /tmp/cc3NbQc7.s:3759   .debug_loc:0000000000000253 .LLST13
     /tmp/cc3NbQc7.s:3766   .debug_loc:0000000000000276 .LLST14
     /tmp/cc3NbQc7.s:3773   .debug_loc:0000000000000299 .LLST15
     /tmp/cc3NbQc7.s:378    .text:0000000000000140 .LVL19
     /tmp/cc3NbQc7.s:312    .text:0000000000000100 .LVL11
     /tmp/cc3NbQc7.s:329    .text:0000000000000110 .LVL13
     /tmp/cc3NbQc7.s:337    .text:000000000000011c .LVL14
     /tmp/cc3NbQc7.s:345    .text:0000000000000128 .LVL15
     /tmp/cc3NbQc7.s:408    .text:0000000000000164 .LVL23
     /tmp/cc3NbQc7.s:416    .text:0000000000000170 .LVL24
     /tmp/cc3NbQc7.s:433    .text:0000000000000180 .LVL26
     /tmp/cc3NbQc7.s:443    .text:0000000000000198 .LVL27
GAS LISTING /tmp/cc3NbQc7.s 			page 33


     /tmp/cc3NbQc7.s:453    .text:00000000000001b0 .LVL28
     /tmp/cc3NbQc7.s:476    .text:00000000000001c4 .LVL31
     /tmp/cc3NbQc7.s:550    .text:00000000000001fc .LVL40
     /tmp/cc3NbQc7.s:567    .text:000000000000020c .LVL42
     /tmp/cc3NbQc7.s:584    .text:000000000000021c .LVL44
     /tmp/cc3NbQc7.s:592    .text:0000000000000228 .LVL45
     /tmp/cc3NbQc7.s:610    .text:000000000000023c .LVL47
     /tmp/cc3NbQc7.s:146    .text:000000000000008c .LBB35
     /tmp/cc3NbQc7.s:161    .text:0000000000000098 .LBE35
     /tmp/cc3NbQc7.s:167    .text:00000000000000a0 .LBB37
     /tmp/cc3NbQc7.s:182    .text:00000000000000ac .LBE37
     /tmp/cc3NbQc7.s:500    .text:00000000000001d8 .LBB41
     /tmp/cc3NbQc7.s:511    .text:00000000000001dc .LBE41
     /tmp/cc3NbQc7.s:3780   .debug_loc:00000000000002bc .LLST16
     /tmp/cc3NbQc7.s:516    .text:00000000000001e0 .LBB43
     /tmp/cc3NbQc7.s:530    .text:00000000000001e8 .LBE43
     /tmp/cc3NbQc7.s:3787   .debug_loc:00000000000002df .LLST17
     /tmp/cc3NbQc7.s:110    .text:0000000000000054 .LBB30
     /tmp/cc3NbQc7.s:126    .text:0000000000000060 .LBE30
     /tmp/cc3NbQc7.s:619    .text:0000000000000240 .LBB47
     /tmp/cc3NbQc7.s:632    .text:0000000000000248 .LBE47
     /tmp/cc3NbQc7.s:3794   .debug_loc:0000000000000302 .LLST18
     /tmp/cc3NbQc7.s:682    .text:00000000000002ac .LBB49
     /tmp/cc3NbQc7.s:697    .text:00000000000002b8 .LBE49
     /tmp/cc3NbQc7.s:292    .text:00000000000000f0 .LVL8
     /tmp/cc3NbQc7.s:657    .text:000000000000026c .LVL51
     /tmp/cc3NbQc7.s:666    .text:0000000000000284 .LVL53
     /tmp/cc3NbQc7.s:671    .text:0000000000000294 .LVL54
     /tmp/cc3NbQc7.s:676    .text:00000000000002a4 .LVL55
     /tmp/cc3NbQc7.s:703    .text:00000000000002cc .LVL56
     /tmp/cc3NbQc7.s:707    .text:00000000000002d4 .LVL57
     /tmp/cc3NbQc7.s:719    .text:00000000000002e0 .LVL58
     /tmp/cc3NbQc7.s:4172   .debug_str:00000000000009b1 .LASF202
     /tmp/cc3NbQc7.s:10     .text:0000000000000000 .LFB42
     /tmp/cc3NbQc7.s:79     .text:0000000000000040 .LFE42
     /tmp/cc3NbQc7.s:25     .text:0000000000000018 .LBB26
     /tmp/cc3NbQc7.s:39     .text:0000000000000020 .LBE26
     /tmp/cc3NbQc7.s:3802   .debug_loc:0000000000000326 .LLST0
     /tmp/cc3NbQc7.s:64     .text:0000000000000034 .LBB28
     /tmp/cc3NbQc7.s:77     .text:0000000000000040 .LBE28
     /tmp/cc3NbQc7.s:4222   .debug_str:0000000000000bd6 .LASF203
     /tmp/cc3NbQc7.s:4012   .debug_str:0000000000000556 .LASF204
     /tmp/cc3NbQc7.s:4032   .debug_str:00000000000005e1 .LASF205
     /tmp/cc3NbQc7.s:3950   .debug_str:000000000000034a .LASF206
     /tmp/cc3NbQc7.s:3896   .debug_str:000000000000019e .LASF207
     /tmp/cc3NbQc7.s:3952   .debug_str:000000000000035a .LASF208
     /tmp/cc3NbQc7.s:4132   .debug_str:00000000000008bf .LASF209
     /tmp/cc3NbQc7.s:4074   .debug_str:0000000000000702 .LASF210
     /tmp/cc3NbQc7.s:4144   .debug_str:0000000000000909 .LASF211
     /tmp/cc3NbQc7.s:4038   .debug_str:00000000000005fa .LASF212
     /tmp/cc3NbQc7.s:124    .text:0000000000000060 .LVL3
     /tmp/cc3NbQc7.s:361    .text:0000000000000130 .LVL16
     /tmp/cc3NbQc7.s:401    .text:000000000000015c .LVL22
     /tmp/cc3NbQc7.s:464    .text:00000000000001b4 .LVL29
     /tmp/cc3NbQc7.s:535    .text:00000000000001f0 .LVL38
     /tmp/cc3NbQc7.s:628    .text:0000000000000248 .LVL49
     /tmp/cc3NbQc7.s:647    .text:000000000000025c .LVL50
GAS LISTING /tmp/cc3NbQc7.s 			page 34


     /tmp/cc3NbQc7.s:661    .text:0000000000000270 .LVL52
     /tmp/cc3NbQc7.s:194    .text:00000000000000b4 .LVL5
     /tmp/cc3NbQc7.s:200    .text:00000000000000c0 .LVL6
     /tmp/cc3NbQc7.s:187    .text:00000000000000b0 .LVL4
     /tmp/cc3NbQc7.s:278    .text:00000000000000d8 .LVL7
     /tmp/cc3NbQc7.s:295    .text:00000000000000f4 .LVL9
     /tmp/cc3NbQc7.s:386    .text:000000000000014c .LVL20
     /tmp/cc3NbQc7.s:396    .text:0000000000000154 .LVL21
     /tmp/cc3NbQc7.s:484    .text:00000000000001d0 .LVL32
     /tmp/cc3NbQc7.s:492    .text:00000000000001d4 .LVL33
     /tmp/cc3NbQc7.s:527    .text:00000000000001e8 .LVL37
     /tmp/cc3NbQc7.s:613    .text:0000000000000240 .LVL48
     /tmp/cc3NbQc7.s:307    .text:00000000000000f8 .LVL10
     /tmp/cc3NbQc7.s:324    .text:0000000000000108 .LVL12
     /tmp/cc3NbQc7.s:428    .text:0000000000000178 .LVL25
     /tmp/cc3NbQc7.s:470    .text:00000000000001b8 .LVL30
     /tmp/cc3NbQc7.s:545    .text:00000000000001f4 .LVL39
     /tmp/cc3NbQc7.s:562    .text:0000000000000204 .LVL41
     /tmp/cc3NbQc7.s:579    .text:0000000000000214 .LVL43
     /tmp/cc3NbQc7.s:604    .text:0000000000000230 .LVL46
     /tmp/cc3NbQc7.s:367    .text:0000000000000134 .LVL17
     /tmp/cc3NbQc7.s:373    .text:0000000000000138 .LVL18
     /tmp/cc3NbQc7.s:499    .text:00000000000001d8 .LVL34
     /tmp/cc3NbQc7.s:508    .text:00000000000001dc .LVL35
     /tmp/cc3NbQc7.s:515    .text:00000000000001e0 .LVL36
     /tmp/cc3NbQc7.s:24     .text:0000000000000018 .LVL0
     /tmp/cc3NbQc7.s:35     .text:0000000000000020 .LVL1
     /tmp/cc3NbQc7.s:744    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3NbQc7.s:144    .text:000000000000008c .LBB34
     /tmp/cc3NbQc7.s:280    .text:00000000000000d8 .LBE34
     /tmp/cc3NbQc7.s:297    .text:00000000000000f4 .LBB46
     /tmp/cc3NbQc7.s:616    .text:0000000000000240 .LBE46
     /tmp/cc3NbQc7.s:298    .text:00000000000000f4 .LBB39
     /tmp/cc3NbQc7.s:495    .text:00000000000001d4 .LBE39
     /tmp/cc3NbQc7.s:531    .text:00000000000001e8 .LBB45
     /tmp/cc3NbQc7.s:615    .text:0000000000000240 .LBE45

UNDEFINED SYMBOLS
console_handler
_ZN6memory14allocateMemoryEm
_ZN6memory10freeMemoryEPv
_ZN6memory12getFreeSpaceEv
_ZN6memory19getLargestFreeBlockEv
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread10exitThreadEv
_ZN7_thread8dispatchEv
_ZN7_thread4joinEPPS_
_ZN7_thread7runningE
_ZN7_thread11getThreadIDEv
_ZN7_thread7joinAllEv
_ZN4_sem15createSemaphoreEj
_ZN4_sem5closeEv
_ZN4_sem4waitEv
_ZN4_sem6signalEv
__getc
__putc
_Z11printStringPKc
GAS LISTING /tmp/cc3NbQc7.s 			page 35


_Z8printIntiii
_Z11thread_exitv
